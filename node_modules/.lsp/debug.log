Hello - from /home/deyvison/.vscode/extensions/jaredly.reason-vscode-1.5.1/bin.native.linux
Previous log location: /tmp/lsp.log
Sending notification {"jsonrpc": "2.0", "method": "client/registerCapability", "params": {"registrations": [{"id": "watching", "method": "workspace/didChangeWatchedFiles", "registerOptions": {"watchers": [{"globPattern": "**/bsconfig.json", "globPattern": "**/.merlin"}]}}]}}
Sending response {"id": 0, "jsonrpc": "2.0", "result": {"capabilities": {"textDocumentSync": 1, "hoverProvider": true, "completionProvider": {"resolveProvider": true, "triggerCharacters": ["."]}, "signatureHelpProvider": {"triggerCharacters": ["("]}, "definitionProvider": true, "typeDefinitionProvider": true, "referencesProvider": true, "documentSymbolProvider": true, "codeActionProvider": true, "executeCommandProvider": {"commands": ["reason-language-server.add_to_interface_inner"]}, "codeLensProvider": {"resolveProvider": true}, "documentHighlightProvider": true, "documentRangeFormattingProvider": true, "documentFormattingProvider": true, "documentFormattingProvider": true, "renameProvider": true}}}
Read message 
{"jsonrpc":"2.0","method":"initialized","params":{}}
Read message 
{"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{"reason_language_server":{"location":"","build_system_override_by_root":{},"refmt":"","lispRefmt":"","format_width":"80","per_value_codelens":false,"dependencies_codelens":true,"opens_codelens":true,"show_module_path_on_hover":true,"reloadOnChange":false,"show_debug_errors":false,"autoRebuild":true}}}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re","languageId":"reason","version":1,"text":"let component = ReasonReact.statelessComponent(\"Page\");  \nlet handleClick = (_event, _self) => Js.log(\"clicked!\");  \nlet make = (~message, _children) => {  \n  ...component,  \n  render: self =>  \n    <div onClick=(self.handle(handleClick))>  \n      (ReasonReact.string(message))  \n     </div>,  \n};\n"}}}
üì£ üì£ NEW BSB PACKAGE üì£ üì£
- location: /home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets
- bsPlatform: /home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/bs-platform
- buildSystem: bsb version 4.0.18
- build command: /home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/bs-platform/lib/bsb.exe -make-world
>> Build system running: /home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/bs-platform/lib/bsb.exe -make-world
>>> stdout
ninja: no work to do.
ninja: no work to do.
>>> stderr

Affected files: 
Cleaning bsconfig.json
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/bsconfig.json", "diagnostics": []}}
Deps reason-react
Dep loc /home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/reason-react/bsconfig.json
Compiled base: /home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/reason-react/lib/bs
Source directories: /home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/reason-react/src
Source files found: /home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/reason-react/src/ReactDOMRe.re : /home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/reason-react/src/ReactEventRe.rei : /home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/reason-react/src/ReasonReact.re : /home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/reason-react/src/ReactEvent.re : /home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/reason-react/src/ReasonReactOptimizedCreateClass.re : /home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/reason-react/src/ReactEvent.rei : /home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/reason-react/src/ReasonReact.rei : /home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/reason-react/src/ReactEventRe.re : /home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/reason-react/src/ReactDOMServerRe.re
Adding intf /home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/reason-react/src/ReactEventRe.rei
Adding intf /home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/reason-react/src/ReactEvent.rei
Adding intf /home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/reason-react/src/ReasonReact.rei
Bad source file (extension) /home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/reason-react/src/ReactEventRe.rei
Bad source file (extension) /home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/reason-react/src/ReactEvent.rei
Bad source file (extension) /home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/reason-react/src/ReasonReact.rei
Got source directories ./js
Source directories: /home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js
Source files found: /home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/SimpleRoot.re : /home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re
-- All local modules found: 2
SimpleRoot
impl /home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/lib/bs/js/SimpleRoot.cmt
Page
impl /home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/lib/bs/js/Page.cmt
Dependency dirs /home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/bs-platform/lib/ocaml /home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/reason-react/lib/bs/src
Running diagnostics for file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re
‚û°Ô∏è running bsc /home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/bs-platform/lib/bsc.exe -c -I '/home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/lib/bs/js' -I '/home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/bs-platform/lib/ocaml' -I '/home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/reason-react/lib/bs/src' -I '/home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -ppx ''\''/home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/bs-platform/lib/reactjs_jsx_ppx_2.exe'\''' -ppx '/home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/.lsp/Page.ast with pwd /home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets
<< Replacing lastDefinitions for file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re", "diagnostics": []}}
Read message 
{"jsonrpc":"2.0","id":1,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.00405311584473ms
Sending response {"id": 1, "jsonrpc": "2.0", "result": [{"name": "component", "kind": 13, "location": {"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 54}}, "uri": "file://"}}, {"name": "handleClick", "kind": 12, "location": {"range": {"start": {"line": 1, "character": 0}, "end": {"line": 1, "character": 55}}, "uri": "file://"}}, {"name": "make", "kind": 12, "location": {"range": {"start": {"line": 2, "character": 0}, "end": {"line": 8, "character": 1}}, "uri": "file://"}}]}
Read message 
{"jsonrpc":"2.0","id":2,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00619888305664ms
Sending response {"id": 2, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":3,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.00309944152832ms
Sending response {"id": 3, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReactDOMRe, Js", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":4,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re"},"position":{"line":1,"character":52}}}
[server] Got a method textDocument/hover
[server] processing took 0.00190734863281ms
Sending response {"id": 4, "jsonrpc": "2.0", "result": {"range": {"start": {"line": 1, "character": 44}, "end": {"line": 1, "character": 54}}, "contents": {"kind": "markdown", "value": "string"}}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":4}}
Read message 
{"jsonrpc":"2.0","method":"workspace/didChangeWatchedFiles","params":{"changes":[{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/.merlin","type":2}]}}
Got a watched file change
Read message 
{"jsonrpc":"2.0","id":5,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re"},"position":{"line":1,"character":34}}}
[server] Got a method textDocument/hover
[server] processing took 0.00190734863281ms
Sending response {"id": 5, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":5}}
Read message 
{"jsonrpc":"2.0","id":6,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re"},"position":{"line":1,"character":15}}}
[server] Got a method textDocument/hover
[server] processing took 0.00190734863281ms
Trying for declared Value 1009 in file file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re
Sending response {"id": 6, "jsonrpc": "2.0", "result": {"range": {"start": {"line": 1, "character": 4}, "end": {"line": 1, "character": 15}}, "contents": {"kind": "markdown", "value": "```\n('a, 'b) => unit\n```\n\n<root>/assets/js/Page.re"}}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":6}}
Read message 
{"jsonrpc":"2.0","id":7,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re"},"position":{"line":2,"character":18}}}
[server] Got a method textDocument/hover
[server] processing took 0.00190734863281ms
Trying for declared Value 1013 in file file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re
Sending response {"id": 7, "jsonrpc": "2.0", "result": {"range": {"start": {"line": 2, "character": 13}, "end": {"line": 2, "character": 20}}, "contents": {"kind": "markdown", "value": "```\nstring\n```\n\n<root>/assets/js/Page.re"}}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":7}}
Read message 
{"jsonrpc":"2.0","id":8,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re"},"position":{"line":2,"character":25}}}
[server] Got a method textDocument/hover
[server] processing took 0.00190734863281ms
Trying for declared Value 1014 in file file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re
Sending response {"id": 8, "jsonrpc": "2.0", "result": {"range": {"start": {"line": 2, "character": 22}, "end": {"line": 2, "character": 31}}, "contents": {"kind": "markdown", "value": "```\n'a\n```\n\n<root>/assets/js/Page.re"}}}
Read message 
{"jsonrpc":"2.0","id":9,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re"},"position":{"line":1,"character":25}}}
[server] Got a method textDocument/hover
[server] processing took 0.0138282775879ms
Trying for declared Value 1010 in file file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re
Sending response {"id": 9, "jsonrpc": "2.0", "result": {"range": {"start": {"line": 1, "character": 19}, "end": {"line": 1, "character": 25}}, "contents": {"kind": "markdown", "value": "```\n'a\n```\n\n<root>/assets/js/Page.re"}}}
Read message 
{"jsonrpc":"2.0","id":10,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re"},"position":{"line":0,"character":7}}}
[server] Got a method textDocument/hover
[server] processing took 0.00882148742676ms
FINDING /home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/reason-react/lib/bs/src/ReasonReact.cmti src /home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/reason-react/src/ReasonReact.rei
Trying for declared Value 1008 in file file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re
Sending response {"id": 10, "jsonrpc": "2.0", "result": {"range": {"start": {"line": 0, "character": 4}, "end": {"line": 0, "character": 13}}, "contents": {"kind": "markdown", "value": "```\nReasonReact.componentSpec(\n  ReasonReact.stateless,\n  ReasonReact.stateless,\n  ReasonReact.noRetainedProps,\n  ReasonReact.noRetainedProps,\n  ReasonReact.actionless\n)\n```\n\n```\ntype componentSpec(\n  'state,\n  'initialState,\n  'retainedProps,\n  'initialRetainedProps,\n  'action\n) = {\n  debugName: string,\n  reactClassInternal: reactClassInternal,\n  mut handedOffState: Pervasives.ref(option('state)),\n  willReceiveProps: self(\n    'state,\n    'retainedProps,\n    'action\n  ) => 'state,\n  didMount: self('state, 'retainedProps, 'action) => unit,\n  didUpdate: oldNewSelf(\n    'state,\n    'retainedProps,\n    'action\n  ) => unit,\n  willUnmount: self(\n    'state,\n    'retainedProps,\n    'action\n  ) => unit,\n  willUpdate: oldNewSelf(\n    'state,\n    'retainedProps,\n    'action\n  ) => unit,\n  shouldUpdate: oldNewSelf(\n    'state,\n    'retainedProps,\n    'action\n  ) => bool,\n  render: self(\n    'state,\n    'retainedProps,\n    'action\n  ) => reactElement,\n  initialState: unit => 'initialState,\n  retainedProps: 'initialRetainedProps,\n  reducer: ('action, 'state) => update(\n    'state,\n    'retainedProps,\n    'action\n  ),\n  jsElementWrapped: jsElementWrapped\n}\n```\n\n<root>/assets/js/Page.re"}}}
Read message 
{"jsonrpc":"2.0","id":11,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re"},"position":{"line":0,"character":8}}}
[server] Got a method textDocument/definition
[server] processing took 0.00596046447754ms
Got a loc for pos
Trying to find a defintion for a definition
Declared
exported, looking for alternate Page
paths for Page
Sending response {"id": 11, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re"}}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re","languageId":"reason","version":1,"text":"let component = ReasonReact.statelessComponent(\"Page\");  \nlet handleClick = (_event, _self) => Js.log(\"clicked!\");  \nlet make = (~message, _children) => {  \n  ...component,  \n  render: self =>  \n    <div onClick=(self.handle(handleClick))>  \n      (ReasonReact.string(message))  \n     </div>,  \n};\n"}}}
Read message 
{"jsonrpc":"2.0","id":12,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00596046447754ms
Sending response {"id": 12, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":13,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.00500679016113ms
Sending response {"id": 13, "jsonrpc": "2.0", "result": [{"name": "component", "kind": 13, "location": {"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 54}}, "uri": "file://"}}, {"name": "handleClick", "kind": 12, "location": {"range": {"start": {"line": 1, "character": 0}, "end": {"line": 1, "character": 55}}, "uri": "file://"}}, {"name": "make", "kind": 12, "location": {"range": {"start": {"line": 2, "character": 0}, "end": {"line": 8, "character": 1}}, "uri": "file://"}}]}
Read message 
{"jsonrpc":"2.0","id":14,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0100135803223ms
Sending response {"id": 14, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReactDOMRe, Js", "command": ""}}]}
Running diagnostics for file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re", "diagnostics": []}}
Read message 
{"jsonrpc":"2.0","id":15,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re"},"position":{"line":2,"character":32}}}
[server] Got a method textDocument/hover
[server] processing took 0.00596046447754ms
Sending response {"id": 15, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re"}}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re","languageId":"reason","version":1,"text":"let component = ReasonReact.statelessComponent(\"Page\");  \nlet handleClick = (_event, _self) => Js.log(\"clicked!\");  \nlet make = (~message, _children) => {  \n  ...component,  \n  render: self =>  \n    <div onClick=(self.handle(handleClick))>  \n      (ReasonReact.string(message))  \n     </div>,  \n};\n"}}}
Read message 
{"jsonrpc":"2.0","id":16,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0231266021729ms
Sending response {"id": 16, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":17,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.0319480895996ms
Sending response {"id": 17, "jsonrpc": "2.0", "result": [{"name": "component", "kind": 13, "location": {"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 54}}, "uri": "file://"}}, {"name": "handleClick", "kind": 12, "location": {"range": {"start": {"line": 1, "character": 0}, "end": {"line": 1, "character": 55}}, "uri": "file://"}}, {"name": "make", "kind": 12, "location": {"range": {"start": {"line": 2, "character": 0}, "end": {"line": 8, "character": 1}}, "uri": "file://"}}]}
Read message 
{"jsonrpc":"2.0","id":18,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.00810623168945ms
Sending response {"id": 18, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReactDOMRe, Js", "command": ""}}]}
Running diagnostics for file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re", "diagnostics": []}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re"}}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/SimpleRoot.re","languageId":"reason","version":1,"text":"ReactDOMRe.renderToElementWithId(<Page message=\"Hello!\" />, \"index\");\n"}}}
Read message 
{"jsonrpc":"2.0","id":19,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/SimpleRoot.re"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00882148742676ms
‚û°Ô∏è running bsc /home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/bs-platform/lib/bsc.exe -c -I '/home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/lib/bs/js' -I '/home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/bs-platform/lib/ocaml' -I '/home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/reason-react/lib/bs/src' -I '/home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -ppx ''\''/home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/bs-platform/lib/reactjs_jsx_ppx_2.exe'\''' -ppx '/home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/.lsp/SimpleRoot.ast with pwd /home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets
<< Replacing lastDefinitions for file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/SimpleRoot.re
Sending response {"id": 19, "jsonrpc": "2.0", "result": null}
Running diagnostics for file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/SimpleRoot.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/SimpleRoot.re", "diagnostics": []}}
Read message 
{"jsonrpc":"2.0","id":20,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/SimpleRoot.re"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.0340938568115ms
Sending response {"id": 20, "jsonrpc": "2.0", "result": []}
Read message 
{"jsonrpc":"2.0","id":21,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/SimpleRoot.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.00405311584473ms
Sending response {"id": 21, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReactDOMRe, ReasonReact, Page", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":22,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/SimpleRoot.re"},"position":{"line":0,"character":2}}}
[server] Got a method textDocument/hover
[server] processing took 0.00691413879395ms
FINDING /home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/reason-react/lib/bs/src/ReactDOMRe.cmt src /home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/reason-react/src/ReactDOMRe.re
Sending response {"id": 22, "jsonrpc": "2.0", "result": {"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 10}}, "contents": {"kind": "markdown", "value": "```\nmodule ReactDOMRe = {\n  let render: (\n  ReasonReact.reactElement,\n  Dom.element\n) => unit;\n  let _getElementsByClassName: string => array(Dom.element);\n  let _getElementById: string => option(Dom.element);\n  let renderToElementWithClassName: (\n  ReasonReact.reactElement,\n  string\n) => unit;\n  let renderToElementWithId: (\n  ReasonReact.reactElement,\n  string\n) => unit;\n  let hydrate: (\n  ReasonReact.reactElement,\n  Dom.element\n) => unit;\n  let hydrateToElementWithClassName: (\n  ReasonReact.reactElement,\n  string\n) => unit;\n  let hydrateToElementWithId: (\n  ReasonReact.reactElement,\n  string\n) => unit;\n  let createPortal: (\n  ReasonReact.reactElement,\n  Dom.element\n) => ReasonReact.reactElement;\n  let unmountComponentAtNode: Dom.element => unit;\n  let findDOMNode: ReasonReact.reactRef => Dom.element;\n  let domElementToObj: Dom.element => Js.t(< .. >);\n  type style\n  let suppressContentEditableWarningGet: props => option(bool);\n  let suppressContentEditableWarning: props => option(bool);\n  let dangerouslySetInnerHTMLGet: props => option(\n  Js.t(< __html : string >)\n);\n  let dangerouslySetInnerHTML: props => option(\n  Js.t(< __html : string >)\n);\n  let vocabGet: props => option(string);\n  let vocab: props => option(string);\n  let typeofGet: props => option(string);\n  let typeof: props => option(string);\n  let resourceGet: props => option(string);\n  let resource: props => option(string);\n  let propertyGet: props => option(string);\n  let property: props => option(string);\n  let prefixGet: props => option(string);\n  let prefix: props => option(string);\n  let inlistGet: props => option(string);\n  let inlist: props => option(string);\n  let datatypeGet: props => option(string);\n  let datatype: props => option(string);\n  let aboutGet: props => option(string);\n  let about: props => option(string);\n  let zoomAndPanGet: props => option(string);\n  let zoomAndPan: props => option(string);\n  let zGet: props => option(string);\n  let z: props => option(string);\n  let yChannelSelectorGet: props => option(string);\n  let yChannelSelector: props => option(string);\n  let y2Get: props => option(string);\n  let y2: props => option(string);\n  let y1Get: props => option(string);\n  let y1: props => option(string);\n  let yGet: props => option(string);\n  let y: props => option(string);\n  let xmlSpaceGet: props => option(string);\n  let xmlSpace: props => option(string);\n  let xmlLangGet: props => option(string);\n  let xmlLang: props => option(string);\n  let xmlBaseGet: props => option(string);\n  let xmlBase: props => option(string);\n  let xmlnsXlinkGet: props => option(string);\n  let xmlnsXlink: props => option(string);\n  let xmlnsGet: props => option(string);\n  let xmlns: props => option(string);\n  let xlinkTypeGet: props => option(string);\n  let xlinkType: props => option(string);\n  let xlinkTitleGet: props => option(string);\n  let xlinkTitle: props => option(string);\n  let xlinkShowGet: props => option(string);\n  let xlinkShow: props => option(string);\n  let xlinkRoleGet: props => option(string);\n  let xlinkRole: props => option(string);\n  let xlinkHrefGet: props => option(string);\n  let xlinkHref: props => option(string);\n  let xlinkArcroleGet: props => option(string);\n  let xlinkArcrole: props => option(string);\n  let xlinkActuateGet: props => option(string);\n  let xlinkActuate: props => option(string);\n  let xHeightGet: props => option(string);\n  let xHeight: props => option(string);\n  let xChannelSelectorGet: props => option(string);\n  let xChannelSelector: props => option(string);\n  let x2Get: props => option(string);\n  let x2: props => option(string);\n  let x1Get: props => option(string);\n  let x1: props => option(string);\n  let xGet: props => option(string);\n  let x: props => option(string);\n  let writingModeGet: props => option(string);\n  let writingMode: props => option(string);\n  let wordSpacingGet: props => option(string);\n  let wordSpacing: props => option(string);\n  let widthsGet: props => option(string);\n  let widths: props => option(string);\n  let visibilityGet: props => option(string);\n  let visibility: props => option(string);\n  let viewTargetGet: props => option(string);\n  let viewTarget: props => option(string);\n  let viewBoxGet: props => option(string);\n  let viewBox: props => option(string);\n  let vertOriginYGet: props => option(string);\n  let vertOriginY: props => option(string);\n  let vertOriginXGet: props => option(string);\n  let vertOriginX: props => option(string);\n  let vertAdvYGet: props => option(string);\n  let vertAdvY: props => option(string);\n  let vertAdvXGet: props => option(string);\n  let vertAdvX: props => option(string);\n  let versionGet: props => option(string);\n  let version: props => option(string);\n  let vectorEffectGet: props => option(string);\n  let vectorEffect: props => option(string);\n  let valuesGet: props => option(string);\n  let values: props => option(string);\n  let vMathematicalGet: props => option(string);\n  let vMathematical: props => option(string);\n  let vIdeographicGet: props => option(string);\n  let vIdeographic: props => option(string);\n  let vHangingGet: props => option(string);\n  let vHanging: props => option(string);\n  let vAlphabeticGet: props => option(string);\n  let vAlphabetic: props => option(string);\n  let unitsPerEmGet: props => option(string);\n  let unitsPerEm: props => option(string);\n  let unicodeRangeGet: props => option(string);\n  let unicodeRange: props => option(string);\n  let unicodeBidiGet: props => option(string);\n  let unicodeBidi: props => option(string);\n  let unicodeGet: props => option(string);\n  let unicode: props => option(string);\n  let underlineThicknessGet: props => option(string);\n  let underlineThickness: props => option(string);\n  let underlinePositionGet: props => option(string);\n  let underlinePosition: props => option(string);\n  let u2Get: props => option(string);\n  let u2: props => option(string);\n  let u1Get: props => option(string);\n  let u1: props => option(string);\n  let transformGet: props => option(string);\n  let transform: props => option(string);\n  let to_Get: props => option(string);\n  let to_: props => option(string);\n  let textRenderingGet: props => option(string);\n  let textRendering: props => option(string);\n  let textLengthGet: props => option(string);\n  let textLength: props => option(string);\n  let textDecorationGet: props => option(string);\n  let textDecoration: props => option(string);\n  let textAnchorGet: props => option(string);\n  let textAnchor: props => option(string);\n  let targetYGet: props => option(string);\n  let targetY: props => option(string);\n  let targetXGet: props => option(string);\n  let targetX: props => option(string);\n  let tableValuesGet: props => option(string);\n  let tableValues: props => option(string);\n  let systemLanguageGet: props => option(string);\n  let systemLanguage: props => option(string);\n  let surfaceScaleGet: props => option(string);\n  let surfaceScale: props => option(string);\n  let strokeWidthGet: props => option(string);\n  let strokeWidth: props => option(string);\n  let strokeOpacityGet: props => option(string);\n  let strokeOpacity: props => option(string);\n  let strokeMiterlimitGet: props => option(string);\n  let strokeMiterlimit: props => option(string);\n  let strokeLinejoinGet: props => option(string);\n  let strokeLinejoin: props => option(string);\n  let strokeLinecapGet: props => option(string);\n  let strokeLinecap: props => option(string);\n  let strokeDashoffsetGet: props => option(string);\n  let strokeDashoffset: props => option(string);\n  let strokeDasharrayGet: props => option(string);\n  let strokeDasharray: props => option(string);\n  let strokeGet: props => option(string);\n  let stroke: props => option(string);\n  let stringGet: props => option(string);\n  let string: props => option(string);\n  let strikethroughThicknessGet: props => option(string);\n  let strikethroughThickness: props => option(string);\n  let strikethroughPositionGet: props => option(string);\n  let strikethroughPosition: props => option(string);\n  let stopOpacityGet: props => option(string);\n  let stopOpacity: props => option(string);\n  let stopColorGet: props => option(string);\n  let stopColor: props => option(string);\n  let stitchTilesGet: props => option(string);\n  let stitchTiles: props => option(string);\n  let stemvGet: props => option(string);\n  let stemv: props => option(string);\n  let stemhGet: props => option(string);\n  let stemh: props => option(string);\n  let stdDeviationGet: props => option(string);\n  let stdDeviation: props => option(string);\n  let startOffsetGet: props => option(string);\n  let startOffset: props => option(string);\n  let spreadMethodGet: props => option(string);\n  let spreadMethod: props => option(string);\n  let speedGet: props => option(string);\n  let speed: props => option(string);\n  let specularExponentGet: props => option(string);\n  let specularExponent: props => option(string);\n  let specularConstantGet: props => option(string);\n  let specularConstant: props => option(string);\n  let spacingGet: props => option(string);\n  let spacing: props => option(string);\n  let slopeGet: props => option(string);\n  let slope: props => option(string);\n  let shapeRenderingGet: props => option(string);\n  let shapeRendering: props => option(string);\n  let seedGet: props => option(string);\n  let seed: props => option(string);\n  let scaleGet: props => option(string);\n  let scale: props => option(string);\n  let ryGet: props => option(string);\n  let ry: props => option(string);\n  let rxGet: props => option(string);\n  let rx: props => option(string);\n  let rotateGet: props => option(string);\n  let rotate: props => option(string);\n  let resultGet: props => option(string);\n  let result: props => option(string);\n  let restartGet: props => option(string);\n  let restart: props => option(string);\n  let requiredFeaturesGet: props => option(string);\n  let requiredFeatures: props => option(string);\n  let requiredExtensionsGet: props => option(string);\n  let requiredExtensions: props => option(string);\n  let repeatDurGet: props => option(string);\n  let repeatDur: props => option(string);\n  let repeatCountGet: props => option(string);\n  let repeatCount: props => option(string);\n  let renderingIntentGet: props => option(string);\n  let renderingIntent: props => option(string);\n  let refYGet: props => option(string);\n  let refY: props => option(string);\n  let refXGet: props => option(string);\n  let refX: props => option(string);\n  let radiusGet: props => option(string);\n  let radius: props => option(string);\n  let rGet: props => option(string);\n  let r: props => option(string);\n  let primitiveUnitsGet: props => option(string);\n  let primitiveUnits: props => option(string);\n  let preserveAspectRatioGet: props => option(string);\n  let preserveAspectRatio: props => option(string);\n  let preserveAlphaGet: props => option(string);\n  let preserveAlpha: props => option(string);\n  let pointsAtZGet: props => option(string);\n  let pointsAtZ: props => option(string);\n  let pointsAtYGet: props => option(string);\n  let pointsAtY: props => option(string);\n  let pointsAtXGet: props => option(string);\n  let pointsAtX: props => option(string);\n  let pointsGet: props => option(string);\n  let points: props => option(string);\n  let pointerEventsGet: props => option(string);\n  let pointerEvents: props => option(string);\n  let patternUnitsGet: props => option(string);\n  let patternUnits: props => option(string);\n  let patternTransformGet: props => option(string);\n  let patternTransform: props => option(string);\n  let patternContentUnitsGet: props => option(string);\n  let patternContentUnits: props => option(string);\n  let pathLengthGet: props => option(string);\n  let pathLength: props => option(string);\n  let panose1Get: props => option(string);\n  let panose1: props => option(string);\n  let paintOrderGet: props => option(string);\n  let paintOrder: props => option(string);\n  let overlineThicknessGet: props => option(string);\n  let overlineThickness: props => option(string);\n  let overlinePositionGet: props => option(string);\n  let overlinePosition: props => option(string);\n  let overflowYGet: props => option(string);\n  let overflowY: props => option(string);\n  let overflowXGet: props => option(string);\n  let overflowX: props => option(string);\n  let overflowGet: props => option(string);\n  let overflow: props => option(string);\n  let originGet: props => option(string);\n  let origin: props => option(string);\n  let orientationGet: props => option(string);\n  let orientation: props => option(string);\n  let orientGet: props => option(string);\n  let orient: props => option(string);\n  let orderGet: props => option(string);\n  let order: props => option(string);\n  let operatorGet: props => option(string);\n  let operator: props => option(string);\n  let opacityGet: props => option(string);\n  let opacity: props => option(string);\n  let offsetGet: props => option(string);\n  let offset: props => option(string);\n  let numOctavesGet: props => option(string);\n  let numOctaves: props => option(string);\n  let modeGet: props => option(string);\n  let mode: props => option(string);\n  let mathematicalGet: props => option(string);\n  let mathematical: props => option(string);\n  let maskUnitsGet: props => option(string);\n  let maskUnits: props => option(string);\n  let maskContentUnitsGet: props => option(string);\n  let maskContentUnits: props => option(string);\n  let maskGet: props => option(string);\n  let mask: props => option(string);\n  let markerWidthGet: props => option(string);\n  let markerWidth: props => option(string);\n  let markerUnitsGet: props => option(string);\n  let markerUnits: props => option(string);\n  let markerStartGet: props => option(string);\n  let markerStart: props => option(string);\n  let markerMidGet: props => option(string);\n  let markerMid: props => option(string);\n  let markerHeightGet: props => option(string);\n  let markerHeight: props => option(string);\n  let markerEndGet: props => option(string);\n  let markerEnd: props => option(string);\n  let localGet: props => option(string);\n  let local: props => option(string);\n  let limitingConeAngleGet: props => option(string);\n  let limitingConeAngle: props => option(string);\n  let lightingColorGet: props => option(string);\n  let lightingColor: props => option(string);\n  let letterSpacingGet: props => option(string);\n  let letterSpacing: props => option(string);\n  let lengthAdjustGet: props => option(string);\n  let lengthAdjust: props => option(string);\n  let keyTimesGet: props => option(string);\n  let keyTimes: props => option(string);\n  let keySplinesGet: props => option(string);\n  let keySplines: props => option(string);\n  let keyPointsGet: props => option(string);\n  let keyPoints: props => option(string);\n  let kerningGet: props => option(string);\n  let kerning: props => option(string);\n  let kernelUnitLengthGet: props => option(string);\n  let kernelUnitLength: props => option(string);\n  let kernelMatrixGet: props => option(string);\n  let kernelMatrix: props => option(string);\n  let k4Get: props => option(string);\n  let k4: props => option(string);\n  let k3Get: props => option(string);\n  let k3: props => option(string);\n  let k2Get: props => option(string);\n  let k2: props => option(string);\n  let k1Get: props => option(string);\n  let k1: props => option(string);\n  let kGet: props => option(string);\n  let k: props => option(string);\n  let interceptGet: props => option(string);\n  let intercept: props => option(string);\n  let in2Get: props => option(string);\n  let in2: props => option(string);\n  let in_Get: props => option(string);\n  let in_: props => option(string);\n  let imageRenderingGet: props => option(string);\n  let imageRendering: props => option(string);\n  let ideographicGet: props => option(string);\n  let ideographic: props => option(string);\n  let horizOriginXGet: props => option(string);\n  let horizOriginX: props => option(string);\n  let horizAdvXGet: props => option(string);\n  let horizAdvX: props => option(string);\n  let hangingGet: props => option(string);\n  let hanging: props => option(string);\n  let gradientUnitsGet: props => option(string);\n  let gradientUnits: props => option(string);\n  let gradientTransformGet: props => option(string);\n  let gradientTransform: props => option(string);\n  let glyphRefGet: props => option(string);\n  let glyphRef: props => option(string);\n  let glyphOrientationVerticalGet: props => option(string);\n  let glyphOrientationVertical: props => option(string);\n  let glyphOrientationHorizontalGet: props => option(string);\n  let glyphOrientationHorizontal: props => option(string);\n  let glyphNameGet: props => option(string);\n  let glyphName: props => option(string);\n  let g2Get: props => option(string);\n  let g2: props => option(string);\n  let g1Get: props => option(string);\n  let g1: props => option(string);\n  let fyGet: props => option(string);\n  let fy: props => option(string);\n  let fxGet: props => option(string);\n  let fx: props => option(string);\n  let fromGet: props => option(string);\n  let from: props => option(string);\n  let fomatGet: props => option(string);\n  let fomat: props => option(string);\n  let fontWeightGet: props => option(string);\n  let fontWeight: props => option(string);\n  let fontVariantGet: props => option(string);\n  let fontVariant: props => option(string);\n  let fontStyleGet: props => option(string);\n  let fontStyle: props => option(string);\n  let fontStretchGet: props => option(string);\n  let fontStretch: props => option(string);\n  let fontSizeAdjustGet: props => option(string);\n  let fontSizeAdjust: props => option(string);\n  let fontSizeGet: props => option(string);\n  let fontSize: props => option(string);\n  let fontFamilyGet: props => option(string);\n  let fontFamily: props => option(string);\n  let focusableGet: props => option(string);\n  let focusable: props => option(string);\n  let floodOpacityGet: props => option(string);\n  let floodOpacity: props => option(string);\n  let floodColorGet: props => option(string);\n  let floodColor: props => option(string);\n  let filterUnitsGet: props => option(string);\n  let filterUnits: props => option(string);\n  let filterResGet: props => option(string);\n  let filterRes: props => option(string);\n  let filterGet: props => option(string);\n  let filter: props => option(string);\n  let fillRuleGet: props => option(string);\n  let fillRule: props => option(string);\n  let fillOpacityGet: props => option(string);\n  let fillOpacity: props => option(string);\n  let fillGet: props => option(string);\n  let fill: props => option(string);\n  let externalResourcesRequiredGet: props => option(string);\n  let externalResourcesRequired: props => option(string);\n  let exponentGet: props => option(string);\n  let exponent: props => option(string);\n  let end_Get: props => option(string);\n  let end_: props => option(string);\n  let enableBackgroundGet: props => option(string);\n  let enableBackground: props => option(string);\n  let elevationGet: props => option(string);\n  let elevation: props => option(string);\n  let edgeModeGet: props => option(string);\n  let edgeMode: props => option(string);\n  let dyGet: props => option(string);\n  let dy: props => option(string);\n  let dxGet: props => option(string);\n  let dx: props => option(string);\n  let durGet: props => option(string);\n  let dur: props => option(string);\n  let dominantBaselineGet: props => option(string);\n  let dominantBaseline: props => option(string);\n  let divisorGet: props => option(string);\n  let divisor: props => option(string);\n  let displayGet: props => option(string);\n  let display: props => option(string);\n  let directionGet: props => option(string);\n  let direction: props => option(string);\n  let diffuseConstantGet: props => option(string);\n  let diffuseConstant: props => option(string);\n  let descentGet: props => option(string);\n  let descent: props => option(string);\n  let decelerateGet: props => option(string);\n  let decelerate: props => option(string);\n  let dGet: props => option(string);\n  let d: props => option(string);\n  let cyGet: props => option(string);\n  let cy: props => option(string);\n  let cxGet: props => option(string);\n  let cx: props => option(string);\n  let cursorGet: props => option(string);\n  let cursor: props => option(string);\n  let contentStyleTypeGet: props => option(string);\n  let contentStyleType: props => option(string);\n  let contentScriptTypeGet: props => option(string);\n  let contentScriptType: props => option(string);\n  let colorRenderingGet: props => option(string);\n  let colorRendering: props => option(string);\n  let colorProfileGet: props => option(string);\n  let colorProfile: props => option(string);\n  let colorInterpolationFiltersGet: props => option(string);\n  let colorInterpolationFilters: props => option(string);\n  let colorInterpolationGet: props => option(string);\n  let colorInterpolation: props => option(string);\n  let clipRuleGet: props => option(string);\n  let clipRule: props => option(string);\n  let clipPathUnitsGet: props => option(string);\n  let clipPathUnits: props => option(string);\n  let clipPathGet: props => option(string);\n  let clipPath: props => option(string);\n  let clipGet: props => option(string);\n  let clip: props => option(string);\n  let capHeightGet: props => option(string);\n  let capHeight: props => option(string);\n  let calcModeGet: props => option(string);\n  let calcMode: props => option(string);\n  let byGet: props => option(string);\n  let by: props => option(string);\n  let biasGet: props => option(string);\n  let bias: props => option(string);\n  let begin_Get: props => option(string);\n  let begin_: props => option(string);\n  let bboxGet: props => option(string);\n  let bbox: props => option(string);\n  let baselineShiftGet: props => option(string);\n  let baselineShift: props => option(string);\n  let baseProfileGet: props => option(string);\n  let baseProfile: props => option(string);\n  let baseFrequencyGet: props => option(string);\n  let baseFrequency: props => option(string);\n  let azimuthGet: props => option(string);\n  let azimuth: props => option(string);\n  let autoReverseGet: props => option(string);\n  let autoReverse: props => option(string);\n  let attributeTypeGet: props => option(string);\n  let attributeType: props => option(string);\n  let attributeNameGet: props => option(string);\n  let attributeName: props => option(string);\n  let ascentGet: props => option(string);\n  let ascent: props => option(string);\n  let arabicFormGet: props => option(string);\n  let arabicForm: props => option(string);\n  let amplitudeGet: props => option(string);\n  let amplitude: props => option(string);\n  let alphabeticGet: props => option(string);\n  let alphabetic: props => option(string);\n  let allowReorderGet: props => option(string);\n  let allowReorder: props => option(string);\n  let alignmentBaselineGet: props => option(string);\n  let alignmentBaseline: props => option(string);\n  let additiveGet: props => option(string);\n  let additive: props => option(string);\n  let accumulateGet: props => option(string);\n  let accumulate: props => option(string);\n  let accentHeightGet: props => option(string);\n  let accentHeight: props => option(string);\n  let onTransitionEndGet: props => option(\n  ReactEvent.Transition.t => unit\n);\n  let onTransitionEnd: props => option(\n  ReactEvent.Transition.t => unit\n);\n  let onAnimationIterationGet: props => option(\n  ReactEvent.Animation.t => unit\n);\n  let onAnimationIteration: props => option(\n  ReactEvent.Animation.t => unit\n);\n  let onAnimationEndGet: props => option(\n  ReactEvent.Animation.t => unit\n);\n  let onAnimationEnd: props => option(\n  ReactEvent.Animation.t => unit\n);\n  let onAnimationStartGet: props => option(\n  ReactEvent.Animation.t => unit\n);\n  let onAnimationStart: props => option(\n  ReactEvent.Animation.t => unit\n);\n  let onLoadGet: props => option(\n  ReactEvent.Image.t => unit\n);\n  let onLoad: props => option(\n  ReactEvent.Image.t => unit\n);\n  let onWaitingGet: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onWaiting: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onVolumeChangeGet: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onVolumeChange: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onTimeUpdateGet: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onTimeUpdate: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onSuspendGet: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onSuspend: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onStalledGet: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onStalled: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onSeekingGet: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onSeeking: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onSeekedGet: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onSeeked: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onRateChangeGet: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onRateChange: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onProgressGet: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onProgress: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onPlayingGet: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onPlaying: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onPlayGet: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onPlay: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onPauseGet: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onPause: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onLoadStartGet: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onLoadStart: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onLoadedMetadataGet: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onLoadedMetadata: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onLoadedDataGet: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onLoadedData: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onErrorGet: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onError: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onEndedGet: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onEnded: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onEncrypetdGet: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onEncrypetd: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onEmptiedGet: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onEmptied: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onDurationChangeGet: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onDurationChange: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onCanPlayThroughGet: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onCanPlayThrough: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onCanPlayGet: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onCanPlay: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onAbortGet: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onAbort: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onWheelGet: props => option(\n  ReactEvent.Wheel.t => unit\n);\n  let onWheel: props => option(\n  ReactEvent.Wheel.t => unit\n);\n  let onScrollGet: props => option(ReactEvent.UI.t => unit);\n  let onScroll: props => option(ReactEvent.UI.t => unit);\n  let onTouchStartGet: props => option(\n  ReactEvent.Touch.t => unit\n);\n  let onTouchStart: props => option(\n  ReactEvent.Touch.t => unit\n);\n  let onTouchMoveGet: props => option(\n  ReactEvent.Touch.t => unit\n);\n  let onTouchMove: props => option(\n  ReactEvent.Touch.t => unit\n);\n  let onTouchEndGet: props => option(\n  ReactEvent.Touch.t => unit\n);\n  let onTouchEnd: props => option(\n  ReactEvent.Touch.t => unit\n);\n  let onTouchCancelGet: props => option(\n  ReactEvent.Touch.t => unit\n);\n  let onTouchCancel: props => option(\n  ReactEvent.Touch.t => unit\n);\n  let onSelectGet: props => option(\n  ReactEvent.Selection.t => unit\n);\n  let onSelect: props => option(\n  ReactEvent.Selection.t => unit\n);\n  let onMouseUpGet: props => option(\n  ReactEvent.Mouse.t => unit\n);\n  let onMouseUp: props => option(\n  ReactEvent.Mouse.t => unit\n);\n  let onMouseOverGet: props => option(\n  ReactEvent.Mouse.t => unit\n);\n  let onMouseOver: props => option(\n  ReactEvent.Mouse.t => unit\n);\n  let onMouseOutGet: props => option(\n  ReactEvent.Mouse.t => unit\n);\n  let onMouseOut: props => option(\n  ReactEvent.Mouse.t => unit\n);\n  let onMouseMoveGet: props => option(\n  ReactEvent.Mouse.t => unit\n);\n  let onMouseMove: props => option(\n  ReactEvent.Mouse.t => unit\n);\n  let onMouseLeaveGet: props => option(\n  ReactEvent.Mouse.t => unit\n);\n  let onMouseLeave: props => option(\n  ReactEvent.Mouse.t => unit\n);\n  let onMouseEnterGet: props => option(\n  ReactEvent.Mouse.t => unit\n);\n  let onMouseEnter: props => option(\n  ReactEvent.Mouse.t => unit\n);\n  let onMouseDownGet: props => option(\n  ReactEvent.Mouse.t => unit\n);\n  let onMouseDown: props => option(\n  ReactEvent.Mouse.t => unit\n);\n  let onDropGet: props => option(\n  ReactEvent.Mouse.t => unit\n);\n  let onDrop: props => option(\n  ReactEvent.Mouse.t => unit\n);\n  let onDragStartGet: props => option(\n  ReactEvent.Mouse.t => unit\n);\n  let onDragStart: props => option(\n  ReactEvent.Mouse.t => unit\n);\n  let onDragOverGet: props => option(\n  ReactEvent.Mouse.t => unit\n);\n  let onDragOver: props => option(\n  ReactEvent.Mouse.t => unit\n);\n  let onDragLeaveGet: props => option(\n  ReactEvent.Mouse.t => unit\n);\n  let onDragLeave: props => option(\n  ReactEvent.Mouse.t => unit\n);\n  let onDragExitGet: props => option(\n  ReactEvent.Mouse.t => unit\n);\n  let onDragExit: props => option(\n  ReactEvent.Mouse.t => unit\n);\n  let onDragEnterGet: props => option(\n  ReactEvent.Mouse.t => unit\n);\n  let onDragEnter: props => option(\n  ReactEvent.Mouse.t => unit\n);\n  let onDragEndGet: props => option(\n  ReactEvent.Mouse.t => unit\n);\n  let onDragEnd: props => option(\n  ReactEvent.Mouse.t => unit\n);\n  let onDragGet: props => option(\n  ReactEvent.Mouse.t => unit\n);\n  let onDrag: props => option(\n  ReactEvent.Mouse.t => unit\n);\n  let onDoubleClickGet: props => option(\n  ReactEvent.Mouse.t => unit\n);\n  let onDoubleClick: props => option(\n  ReactEvent.Mouse.t => unit\n);\n  let onContextMenuGet: props => option(\n  ReactEvent.Mouse.t => unit\n);\n  let onContextMenu: props => option(\n  ReactEvent.Mouse.t => unit\n);\n  let onClickGet: props => option(\n  ReactEvent.Mouse.t => unit\n);\n  let onClick: props => option(\n  ReactEvent.Mouse.t => unit\n);\n  let onSubmitGet: props => option(\n  ReactEvent.Form.t => unit\n);\n  let onSubmit: props => option(\n  ReactEvent.Form.t => unit\n);\n  let onInputGet: props => option(\n  ReactEvent.Form.t => unit\n);\n  let onInput: props => option(\n  ReactEvent.Form.t => unit\n);\n  let onChangeGet: props => option(\n  ReactEvent.Form.t => unit\n);\n  let onChange: props => option(\n  ReactEvent.Form.t => unit\n);\n  let onBlurGet: props => option(\n  ReactEvent.Focus.t => unit\n);\n  let onBlur: props => option(\n  ReactEvent.Focus.t => unit\n);\n  let onFocusGet: props => option(\n  ReactEvent.Focus.t => unit\n);\n  let onFocus: props => option(\n  ReactEvent.Focus.t => unit\n);\n  let onKeyUpGet: props => option(\n  ReactEvent.Keyboard.t => unit\n);\n  let onKeyUp: props => option(\n  ReactEvent.Keyboard.t => unit\n);\n  let onKeyPressGet: props => option(\n  ReactEvent.Keyboard.t => unit\n);\n  let onKeyPress: props => option(\n  ReactEvent.Keyboard.t => unit\n);\n  let onKeyDownGet: props => option(\n  ReactEvent.Keyboard.t => unit\n);\n  let onKeyDown: props => option(\n  ReactEvent.Keyboard.t => unit\n);\n  let onCompositionUpdateGet: props => option(\n  ReactEvent.Composition.t => unit\n);\n  let onCompositionUpdate: props => option(\n  ReactEvent.Composition.t => unit\n);\n  let onCompositionStartGet: props => option(\n  ReactEvent.Composition.t => unit\n);\n  let onCompositionStart: props => option(\n  ReactEvent.Composition.t => unit\n);\n  let onCompositionEndGet: props => option(\n  ReactEvent.Composition.t => unit\n);\n  let onCompositionEnd: props => option(\n  ReactEvent.Composition.t => unit\n);\n  let onPasteGet: props => option(\n  ReactEvent.Clipboard.t => unit\n);\n  let onPaste: props => option(\n  ReactEvent.Clipboard.t => unit\n);\n  let onCutGet: props => option(\n  ReactEvent.Clipboard.t => unit\n);\n  let onCut: props => option(\n  ReactEvent.Clipboard.t => unit\n);\n  let onCopyGet: props => option(\n  ReactEvent.Clipboard.t => unit\n);\n  let onCopy: props => option(\n  ReactEvent.Clipboard.t => unit\n);\n  let wrapGet: props => option(string);\n  let wrap: props => option(string);\n  let widthGet: props => option(string);\n  let width: props => option(string);\n  let valueGet: props => option(string);\n  let value: props => option(string);\n  let useMapGet: props => option(string);\n  let useMap: props => option(string);\n  let type_Get: props => option(string);\n  let type_: props => option(string);\n  let targetGet: props => option(string);\n  let target: props => option(string);\n  let summaryGet: props => option(string);\n  let summary: props => option(string);\n  let stepGet: props => option(float);\n  let step: props => option(float);\n  let startGet: props => option(int);\n  let start: props => option(int);\n  let srcSetGet: props => option(string);\n  let srcSet: props => option(string);\n  let srcLangGet: props => option(string);\n  let srcLang: props => option(string);\n  let srcDocGet: props => option(string);\n  let srcDoc: props => option(string);\n  let srcGet: props => option(string);\n  let src: props => option(string);\n  let spanGet: props => option(int);\n  let span: props => option(int);\n  let sizesGet: props => option(string);\n  let sizes: props => option(string);\n  let sizeGet: props => option(int);\n  let size: props => option(int);\n  let shapeGet: props => option(string);\n  let shape: props => option(string);\n  let selectedGet: props => option(bool);\n  let selected: props => option(bool);\n  let scrollingGet: props => option(string);\n  let scrolling: props => option(string);\n  let scopedGet: props => option(bool);\n  let scoped: props => option(bool);\n  let scopeGet: props => option(string);\n  let scope: props => option(string);\n  let sandboxGet: props => option(string);\n  let sandbox: props => option(string);\n  let rowSpanGet: props => option(int);\n  let rowSpan: props => option(int);\n  let rowsGet: props => option(int);\n  let rows: props => option(int);\n  let reversedGet: props => option(bool);\n  let reversed: props => option(bool);\n  let requiredGet: props => option(bool);\n  let required: props => option(bool);\n  let relGet: props => option(string);\n  let rel: props => option(string);\n  let readOnlyGet: props => option(bool);\n  let readOnly: props => option(bool);\n  let radioGroupGet: props => option(string);\n  let radioGroup: props => option(string);\n  let preloadGet: props => option(string);\n  let preload: props => option(string);\n  let posterGet: props => option(string);\n  let poster: props => option(string);\n  let placeholderGet: props => option(string);\n  let placeholder: props => option(string);\n  let patternGet: props => option(string);\n  let pattern: props => option(string);\n  let optimumGet: props => option(int);\n  let optimum: props => option(int);\n  let open_Get: props => option(bool);\n  let open_: props => option(bool);\n  let noValidateGet: props => option(bool);\n  let noValidate: props => option(bool);\n  let nonceGet: props => option(string);\n  let nonce: props => option(string);\n  let nameGet: props => option(string);\n  let name: props => option(string);\n  let mutedGet: props => option(bool);\n  let muted: props => option(bool);\n  let multipleGet: props => option(bool);\n  let multiple: props => option(bool);\n  let minLengthGet: props => option(int);\n  let minLength: props => option(int);\n  let minGet: props => option(int);\n  let min: props => option(int);\n  let methodGet: props => option(string);\n  let method: props => option(string);\n  let mediaGroupGet: props => option(string);\n  let mediaGroup: props => option(string);\n  let mediaGet: props => option(string);\n  let media: props => option(string);\n  let maxLengthGet: props => option(int);\n  let maxLength: props => option(int);\n  let maxGet: props => option(string);\n  let max: props => option(string);\n  let manifestGet: props => option(string);\n  let manifest: props => option(string);\n  let lowGet: props => option(int);\n  let low: props => option(int);\n  let loopGet: props => option(bool);\n  let loop: props => option(bool);\n  let listGet: props => option(string);\n  let list: props => option(string);\n  let labelGet: props => option(string);\n  let label: props => option(string);\n  let kindGet: props => option(string);\n  let kind: props => option(string);\n  let keyTypeGet: props => option(string);\n  let keyType: props => option(string);\n  let integrityGet: props => option(string);\n  let integrity: props => option(string);\n  let inputModeGet: props => option(string);\n  let inputMode: props => option(string);\n  let iconGet: props => option(string);\n  let icon: props => option(string);\n  let httpEquivGet: props => option(string);\n  let httpEquiv: props => option(string);\n  let htmlForGet: props => option(string);\n  let htmlFor: props => option(string);\n  let hrefLangGet: props => option(string);\n  let hrefLang: props => option(string);\n  let hrefGet: props => option(string);\n  let href: props => option(string);\n  let highGet: props => option(int);\n  let high: props => option(int);\n  let heightGet: props => option(string);\n  let height: props => option(string);\n  let headersGet: props => option(string);\n  let headers: props => option(string);\n  let formMethodGet: props => option(string);\n  let formMethod: props => option(string);\n  let formTargetGet: props => option(string);\n  let formTarget: props => option(string);\n  let formActionGet: props => option(string);\n  let formAction: props => option(string);\n  let formGet: props => option(string);\n  let form: props => option(string);\n  let encTypeGet: props => option(string);\n  let encType: props => option(string);\n  let downloadGet: props => option(string);\n  let download: props => option(string);\n  let disabledGet: props => option(bool);\n  let disabled: props => option(bool);\n  let deferGet: props => option(bool);\n  let defer: props => option(bool);\n  let defaultGet: props => option(bool);\n  let default: props => option(bool);\n  let dateTimeGet: props => option(string);\n  let dateTime: props => option(string);\n  let dataGet: props => option(string);\n  let data: props => option(string);\n  let coordsGet: props => option(string);\n  let coords: props => option(string);\n  let controlsGet: props => option(bool);\n  let controls: props => option(bool);\n  let contentGet: props => option(string);\n  let content: props => option(string);\n  let colSpanGet: props => option(int);\n  let colSpan: props => option(int);\n  let colsGet: props => option(int);\n  let cols: props => option(int);\n  let crossoriginGet: props => option(bool);\n  let crossorigin: props => option(bool);\n  let citeGet: props => option(string);\n  let cite: props => option(string);\n  let checkedGet: props => option(bool);\n  let checked: props => option(bool);\n  let charSetGet: props => option(string);\n  let charSet: props => option(string);\n  let challengeGet: props => option(string);\n  let challenge: props => option(string);\n  let autoPlayGet: props => option(bool);\n  let autoPlay: props => option(bool);\n  let autoFocusGet: props => option(bool);\n  let autoFocus: props => option(bool);\n  let autoCompleteGet: props => option(string);\n  let autoComplete: props => option(string);\n  let asyncGet: props => option(bool);\n  let async: props => option(bool);\n  let altGet: props => option(string);\n  let alt: props => option(string);\n  let allowFullScreenGet: props => option(bool);\n  let allowFullScreen: props => option(bool);\n  let actionGet: props => option(string);\n  let action: props => option(string);\n  let acceptCharsetGet: props => option(string);\n  let acceptCharset: props => option(string);\n  let acceptGet: props => option(string);\n  let accept: props => option(string);\n  let itemTypeGet: props => option(string);\n  let itemType: props => option(string);\n  let itemScopeGet: props => option(bool);\n  let itemScope: props => option(bool);\n  let itemRefGet: props => option(string);\n  let itemRef: props => option(string);\n  let itemPropGet: props => option(string);\n  let itemProp: props => option(string);\n  let itemIDGet: props => option(string);\n  let itemID: props => option(string);\n  let titleGet: props => option(string);\n  let title: props => option(string);\n  let tabIndexGet: props => option(int);\n  let tabIndex: props => option(int);\n  let spellCheckGet: props => option(bool);\n  let spellCheck: props => option(bool);\n  let styleGet: props => option(style);\n  let style: props => option(style);\n  let roleGet: props => option(string);\n  let role: props => option(string);\n  let langGet: props => option(string);\n  let lang: props => option(string);\n  let idGet: props => option(string);\n  let id: props => option(string);\n  let hiddenGet: props => option(bool);\n  let hidden: props => option(bool);\n  let draggableGet: props => option(bool);\n  let draggable: props => option(bool);\n  let dirGet: props => option(string);\n  let dir: props => option(string);\n  let contextMenuGet: props => option(string);\n  let contextMenu: props => option(string);\n  let contentEditableGet: props => option(bool);\n  let contentEditable: props => option(bool);\n  let classNameGet: props => option(string);\n  let className: props => option(string);\n  let accessKeyGet: props => option(string);\n  let accessKey: props => option(string);\n  let defaultValueGet: props => option(string);\n  let defaultValue: props => option(string);\n  let defaultCheckedGet: props => option(bool);\n  let defaultChecked: props => option(bool);\n  let ariaSetsizeGet: props => option(int);\n  let ariaSetsize: props => option(int);\n  let ariaRowspanGet: props => option(int);\n  let ariaRowspan: props => option(int);\n  let ariaRowindexGet: props => option(int);\n  let ariaRowindex: props => option(int);\n  let ariaRowcountGet: props => option(int);\n  let ariaRowcount: props => option(int);\n  let ariaPosinsetGet: props => option(int);\n  let ariaPosinset: props => option(int);\n  let ariaOwnsGet: props => option(string);\n  let ariaOwns: props => option(string);\n  let ariaLabelledbyGet: props => option(string);\n  let ariaLabelledby: props => option(string);\n  let ariaFlowtoGet: props => option(string);\n  let ariaFlowto: props => option(string);\n  let ariaErrormessageGet: props => option(string);\n  let ariaErrormessage: props => option(string);\n  let ariaDescribedbyGet: props => option(string);\n  let ariaDescribedby: props => option(string);\n  let ariaControlsGet: props => option(string);\n  let ariaControls: props => option(string);\n  let ariaColspanGet: props => option(int);\n  let ariaColspan: props => option(int);\n  let ariaColindexGet: props => option(int);\n  let ariaColindex: props => option(int);\n  let ariaColcountGet: props => option(int);\n  let ariaColcount: props => option(int);\n  let ariaActivedescendantGet: props => option(string);\n  let ariaActivedescendant: props => option(string);\n  let ariaGrabbedGet: props => option(bool);\n  let ariaGrabbed: props => option(bool);\n  let ariaRelevantGet: props => option(string);\n  let ariaRelevant: props => option(string);\n  let ariaBusyGet: props => option(bool);\n  let ariaBusy: props => option(bool);\n  let ariaAtomicGet: props => option(bool);\n  let ariaAtomic: props => option(bool);\n  let ariaValuetextGet: props => option(string);\n  let ariaValuetext: props => option(string);\n  let ariaValuenowGet: props => option(float);\n  let ariaValuenow: props => option(float);\n  let ariaValueminGet: props => option(float);\n  let ariaValuemin: props => option(float);\n  let ariaValuemaxGet: props => option(float);\n  let ariaValuemax: props => option(float);\n  let ariaSortGet: props => option(string);\n  let ariaSort: props => option(string);\n  let ariaSelectedGet: props => option(bool);\n  let ariaSelected: props => option(bool);\n  let ariaRequiredGet: props => option(bool);\n  let ariaRequired: props => option(bool);\n  let ariaReadonlyGet: props => option(bool);\n  let ariaReadonly: props => option(bool);\n  let ariaPlaceholderGet: props => option(string);\n  let ariaPlaceholder: props => option(string);\n  let ariaMultiselectableGet: props => option(bool);\n  let ariaMultiselectable: props => option(bool);\n  let ariaMultilineGet: props => option(bool);\n  let ariaMultiline: props => option(bool);\n  let ariaModalGet: props => option(bool);\n  let ariaModal: props => option(bool);\n  let ariaLevelGet: props => option(int);\n  let ariaLevel: props => option(int);\n  let ariaExpandedGet: props => option(bool);\n  let ariaExpanded: props => option(bool);\n  let ariaRoledescriptionGet: props => option(string);\n  let ariaRoledescription: props => option(string);\n  let ariaLabelGet: props => option(string);\n  let ariaLabel: props => option(string);\n  let ariaKeyshortcutsGet: props => option(string);\n  let ariaKeyshortcuts: props => option(string);\n  let ariaHiddenGet: props => option(bool);\n  let ariaHidden: props => option(bool);\n  let ariaDisabledGet: props => option(bool);\n  let ariaDisabled: props => option(bool);\n  let ariaDetailsGet: props => option(string);\n  let ariaDetails: props => option(string);\n  let refGet: props => option(\n  Js.nullable(Dom.element) => unit\n);\n  let ref: props => option(\n  Js.nullable(Dom.element) => unit\n);\n  let keyGet: props => option(string);\n  let key: props => option(string);\n  let props: (\n  ~?key: option(string),\n  ~?ref: option(\n    Js.nullable(Dom.element) => unit\n  ),\n  ~?ariaDetails: option(string),\n  ~?ariaDisabled: option(bool),\n  ~?ariaHidden: option(bool),\n  ~?ariaKeyshortcuts: option(string),\n  ~?ariaLabel: option(string),\n  ~?ariaRoledescription: option(string),\n  ~?ariaExpanded: option(bool),\n  ~?ariaLevel: option(int),\n  ~?ariaModal: option(bool),\n  ~?ariaMultiline: option(bool),\n  ~?ariaMultiselectable: option(bool),\n  ~?ariaPlaceholder: option(string),\n  ~?ariaReadonly: option(bool),\n  ~?ariaRequired: option(bool),\n  ~?ariaSelected: option(bool),\n  ~?ariaSort: option(string),\n  ~?ariaValuemax: option(float),\n  ~?ariaValuemin: option(float),\n  ~?ariaValuenow: option(float),\n  ~?ariaValuetext: option(string),\n  ~?ariaAtomic: option(bool),\n  ~?ariaBusy: option(bool),\n  ~?ariaRelevant: option(string),\n  ~?ariaGrabbed: option(bool),\n  ~?ariaActivedescendant: option(\n    string\n  ),\n  ~?ariaColcount: option(int),\n  ~?ariaColindex: option(int),\n  ~?ariaColspan: option(int),\n  ~?ariaControls: option(string),\n  ~?ariaDescribedby: option(string),\n  ~?ariaErrormessage: option(string),\n  ~?ariaFlowto: option(string),\n  ~?ariaLabelledby: option(string),\n  ~?ariaOwns: option(string),\n  ~?ariaPosinset: option(int),\n  ~?ariaRowcount: option(int),\n  ~?ariaRowindex: option(int),\n  ~?ariaRowspan: option(int),\n  ~?ariaSetsize: option(int),\n  ~?defaultChecked: option(bool),\n  ~?defaultValue: option(string),\n  ~?accessKey: option(string),\n  ~?className: option(string),\n  ~?contentEditable: option(bool),\n  ~?contextMenu: option(string),\n  ~?dir: option(string),\n  ~?draggable: option(bool),\n  ~?hidden: option(bool),\n  ~?id: option(string),\n  ~?lang: option(string),\n  ~?role: option(string),\n  ~?style: option(style),\n  ~?spellCheck: option(bool),\n  ~?tabIndex: option(int),\n  ~?title: option(string),\n  ~?itemID: option(string),\n  ~?itemProp: option(string),\n  ~?itemRef: option(string),\n  ~?itemScope: option(bool),\n  ~?itemType: option(string),\n  ~?accept: option(string),\n  ~?acceptCharset: option(string),\n  ~?action: option(string),\n  ~?allowFullScreen: option(bool),\n  ~?alt: option(string),\n  ~?async: option(bool),\n  ~?autoComplete: option(string),\n  ~?autoFocus: option(bool),\n  ~?autoPlay: option(bool),\n  ~?challenge: option(string),\n  ~?charSet: option(string),\n  ~?checked: option(bool),\n  ~?cite: option(string),\n  ~?crossorigin: option(bool),\n  ~?cols: option(int),\n  ~?colSpan: option(int),\n  ~?content: option(string),\n  ~?controls: option(bool),\n  ~?coords: option(string),\n  ~?data: option(string),\n  ~?dateTime: option(string),\n  ~?default: option(bool),\n  ~?defer: option(bool),\n  ~?disabled: option(bool),\n  ~?download: option(string),\n  ~?encType: option(string),\n  ~?form: option(string),\n  ~?formAction: option(string),\n  ~?formTarget: option(string),\n  ~?formMethod: option(string),\n  ~?headers: option(string),\n  ~?height: option(string),\n  ~?high: option(int),\n  ~?href: option(string),\n  ~?hrefLang: option(string),\n  ~?htmlFor: option(string),\n  ~?httpEquiv: option(string),\n  ~?icon: option(string),\n  ~?inputMode: option(string),\n  ~?integrity: option(string),\n  ~?keyType: option(string),\n  ~?kind: option(string),\n  ~?label: option(string),\n  ~?list: option(string),\n  ~?loop: option(bool),\n  ~?low: option(int),\n  ~?manifest: option(string),\n  ~?max: option(string),\n  ~?maxLength: option(int),\n  ~?media: option(string),\n  ~?mediaGroup: option(string),\n  ~?method: option(string),\n  ~?min: option(int),\n  ~?minLength: option(int),\n  ~?multiple: option(bool),\n  ~?muted: option(bool),\n  ~?name: option(string),\n  ~?nonce: option(string),\n  ~?noValidate: option(bool),\n  ~?open_: option(bool),\n  ~?optimum: option(int),\n  ~?pattern: option(string),\n  ~?placeholder: option(string),\n  ~?poster: option(string),\n  ~?preload: option(string),\n  ~?radioGroup: option(string),\n  ~?readOnly: option(bool),\n  ~?rel: option(string),\n  ~?required: option(bool),\n  ~?reversed: option(bool),\n  ~?rows: option(int),\n  ~?rowSpan: option(int),\n  ~?sandbox: option(string),\n  ~?scope: option(string),\n  ~?scoped: option(bool),\n  ~?scrolling: option(string),\n  ~?selected: option(bool),\n  ~?shape: option(string),\n  ~?size: option(int),\n  ~?sizes: option(string),\n  ~?span: option(int),\n  ~?src: option(string),\n  ~?srcDoc: option(string),\n  ~?srcLang: option(string),\n  ~?srcSet: option(string),\n  ~?start: option(int),\n  ~?step: option(float),\n  ~?summary: option(string),\n  ~?target: option(string),\n  ~?type_: option(string),\n  ~?useMap: option(string),\n  ~?value: option(string),\n  ~?width: option(string),\n  ~?wrap: option(string),\n  ~?onCopy: option(\n    ReactEvent.Clipboard.t => unit\n  ),\n  ~?onCut: option(\n    ReactEvent.Clipboard.t => unit\n  ),\n  ~?onPaste: option(\n    ReactEvent.Clipboard.t => unit\n  ),\n  ~?onCompositionEnd: option(\n    ReactEvent.Composition.t => unit\n  ),\n  ~?onCompositionStart: option(\n    ReactEvent.Composition.t => unit\n  ),\n  ~?onCompositionUpdate: option(\n    ReactEvent.Composition.t => unit\n  ),\n  ~?onKeyDown: option(\n    ReactEvent.Keyboard.t => unit\n  ),\n  ~?onKeyPress: option(\n    ReactEvent.Keyboard.t => unit\n  ),\n  ~?onKeyUp: option(\n    ReactEvent.Keyboard.t => unit\n  ),\n  ~?onFocus: option(\n    ReactEvent.Focus.t => unit\n  ),\n  ~?onBlur: option(\n    ReactEvent.Focus.t => unit\n  ),\n  ~?onChange: option(\n    ReactEvent.Form.t => unit\n  ),\n  ~?onInput: option(\n    ReactEvent.Form.t => unit\n  ),\n  ~?onSubmit: option(\n    ReactEvent.Form.t => unit\n  ),\n  ~?onClick: option(\n    ReactEvent.Mouse.t => unit\n  ),\n  ~?onContextMenu: option(\n    ReactEvent.Mouse.t => unit\n  ),\n  ~?onDoubleClick: option(\n    ReactEvent.Mouse.t => unit\n  ),\n  ~?onDrag: option(\n    ReactEvent.Mouse.t => unit\n  ),\n  ~?onDragEnd: option(\n    ReactEvent.Mouse.t => unit\n  ),\n  ~?onDragEnter: option(\n    ReactEvent.Mouse.t => unit\n  ),\n  ~?onDragExit: option(\n    ReactEvent.Mouse.t => unit\n  ),\n  ~?onDragLeave: option(\n    ReactEvent.Mouse.t => unit\n  ),\n  ~?onDragOver: option(\n    ReactEvent.Mouse.t => unit\n  ),\n  ~?onDragStart: option(\n    ReactEvent.Mouse.t => unit\n  ),\n  ~?onDrop: option(\n    ReactEvent.Mouse.t => unit\n  ),\n  ~?onMouseDown: option(\n    ReactEvent.Mouse.t => unit\n  ),\n  ~?onMouseEnter: option(\n    ReactEvent.Mouse.t => unit\n  ),\n  ~?onMouseLeave: option(\n    ReactEvent.Mouse.t => unit\n  ),\n  ~?onMouseMove: option(\n    ReactEvent.Mouse.t => unit\n  ),\n  ~?onMouseOut: option(\n    ReactEvent.Mouse.t => unit\n  ),\n  ~?onMouseOver: option(\n    ReactEvent.Mouse.t => unit\n  ),\n  ~?onMouseUp: option(\n    ReactEvent.Mouse.t => unit\n  ),\n  ~?onSelect: option(\n    ReactEvent.Selection.t => unit\n  ),\n  ~?onTouchCancel: option(\n    ReactEvent.Touch.t => unit\n  ),\n  ~?onTouchEnd: option(\n    ReactEvent.Touch.t => unit\n  ),\n  ~?onTouchMove: option(\n    ReactEvent.Touch.t => unit\n  ),\n  ~?onTouchStart: option(\n    ReactEvent.Touch.t => unit\n  ),\n  ~?onScroll: option(\n    ReactEvent.UI.t => unit\n  ),\n  ~?onWheel: option(\n    ReactEvent.Wheel.t => unit\n  ),\n  ~?onAbort: option(\n    ReactEvent.Media.t => unit\n  ),\n  ~?onCanPlay: option(\n    ReactEvent.Media.t => unit\n  ),\n  ~?onCanPlayThrough: option(\n    ReactEvent.Media.t => unit\n  ),\n  ~?onDurationChange: option(\n    ReactEvent.Media.t => unit\n  ),\n  ~?onEmptied: option(\n    ReactEvent.Media.t => unit\n  ),\n  ~?onEncrypetd: option(\n    ReactEvent.Media.t => unit\n  ),\n  ~?onEnded: option(\n    ReactEvent.Media.t => unit\n  ),\n  ~?onError: option(\n    ReactEvent.Media.t => unit\n  ),\n  ~?onLoadedData: option(\n    ReactEvent.Media.t => unit\n  ),\n  ~?onLoadedMetadata: option(\n    ReactEvent.Media.t => unit\n  ),\n  ~?onLoadStart: option(\n    ReactEvent.Media.t => unit\n  ),\n  ~?onPause: option(\n    ReactEvent.Media.t => unit\n  ),\n  ~?onPlay: option(\n    ReactEvent.Media.t => unit\n  ),\n  ~?onPlaying: option(\n    ReactEvent.Media.t => unit\n  ),\n  ~?onProgress: option(\n    ReactEvent.Media.t => unit\n  ),\n  ~?onRateChange: option(\n    ReactEvent.Media.t => unit\n  ),\n  ~?onSeeked: option(\n    ReactEvent.Media.t => unit\n  ),\n  ~?onSeeking: option(\n    ReactEvent.Media.t => unit\n  ),\n  ~?onStalled: option(\n    ReactEvent.Media.t => unit\n  ),\n  ~?onSuspend: option(\n    ReactEvent.Media.t => unit\n  ),\n  ~?onTimeUpdate: option(\n    ReactEvent.Media.t => unit\n  ),\n  ~?onVolumeChange: option(\n    ReactEvent.Media.t => unit\n  ),\n  ~?onWaiting: option(\n    ReactEvent.Media.t => unit\n  ),\n  ~?onLoad: option(\n    ReactEvent.Image.t => unit\n  ),\n  ~?onAnimationStart: option(\n    ReactEvent.Animation.t => unit\n  ),\n  ~?onAnimationEnd: option(\n    ReactEvent.Animation.t => unit\n  ),\n  ~?onAnimationIteration: option(\n    ReactEvent.Animation.t => unit\n  ),\n  ~?onTransitionEnd: option(\n    ReactEvent.Transition.t => unit\n  ),\n  ~?accentHeight: option(string),\n  ~?accumulate: option(string),\n  ~?additive: option(string),\n  ~?alignmentBaseline: option(string),\n  ~?allowReorder: option(string),\n  ~?alphabetic: option(string),\n  ~?amplitude: option(string),\n  ~?arabicForm: option(string),\n  ~?ascent: option(string),\n  ~?attributeName: option(string),\n  ~?attributeType: option(string),\n  ~?autoReverse: option(string),\n  ~?azimuth: option(string),\n  ~?baseFrequency: option(string),\n  ~?baseProfile: option(string),\n  ~?baselineShift: option(string),\n  ~?bbox: option(string),\n  ~?begin_: option(string),\n  ~?bias: option(string),\n  ~?by: option(string),\n  ~?calcMode: option(string),\n  ~?capHeight: option(string),\n  ~?clip: option(string),\n  ~?clipPath: option(string),\n  ~?clipPathUnits: option(string),\n  ~?clipRule: option(string),\n  ~?colorInterpolation: option(string),\n  ~?colorInterpolationFilters: option(\n    string\n  ),\n  ~?colorProfile: option(string),\n  ~?colorRendering: option(string),\n  ~?contentScriptType: option(string),\n  ~?contentStyleType: option(string),\n  ~?cursor: option(string),\n  ~?cx: option(string),\n  ~?cy: option(string),\n  ~?d: option(string),\n  ~?decelerate: option(string),\n  ~?descent: option(string),\n  ~?diffuseConstant: option(string),\n  ~?direction: option(string),\n  ~?display: option(string),\n  ~?divisor: option(string),\n  ~?dominantBaseline: option(string),\n  ~?dur: option(string),\n  ~?dx: option(string),\n  ~?dy: option(string),\n  ~?edgeMode: option(string),\n  ~?elevation: option(string),\n  ~?enableBackground: option(string),\n  ~?end_: option(string),\n  ~?exponent: option(string),\n  ~?externalResourcesRequired: option(\n    string\n  ),\n  ~?fill: option(string),\n  ~?fillOpacity: option(string),\n  ~?fillRule: option(string),\n  ~?filter: option(string),\n  ~?filterRes: option(string),\n  ~?filterUnits: option(string),\n  ~?floodColor: option(string),\n  ~?floodOpacity: option(string),\n  ~?focusable: option(string),\n  ~?fontFamily: option(string),\n  ~?fontSize: option(string),\n  ~?fontSizeAdjust: option(string),\n  ~?fontStretch: option(string),\n  ~?fontStyle: option(string),\n  ~?fontVariant: option(string),\n  ~?fontWeight: option(string),\n  ~?fomat: option(string),\n  ~?from: option(string),\n  ~?fx: option(string),\n  ~?fy: option(string),\n  ~?g1: option(string),\n  ~?g2: option(string),\n  ~?glyphName: option(string),\n  ~?glyphOrientationHorizontal: option(\n    string\n  ),\n  ~?glyphOrientationVertical: option(\n    string\n  ),\n  ~?glyphRef: option(string),\n  ~?gradientTransform: option(string),\n  ~?gradientUnits: option(string),\n  ~?hanging: option(string),\n  ~?horizAdvX: option(string),\n  ~?horizOriginX: option(string),\n  ~?ideographic: option(string),\n  ~?imageRendering: option(string),\n  ~?in_: option(string),\n  ~?in2: option(string),\n  ~?intercept: option(string),\n  ~?k: option(string),\n  ~?k1: option(string),\n  ~?k2: option(string),\n  ~?k3: option(string),\n  ~?k4: option(string),\n  ~?kernelMatrix: option(string),\n  ~?kernelUnitLength: option(string),\n  ~?kerning: option(string),\n  ~?keyPoints: option(string),\n  ~?keySplines: option(string),\n  ~?keyTimes: option(string),\n  ~?lengthAdjust: option(string),\n  ~?letterSpacing: option(string),\n  ~?lightingColor: option(string),\n  ~?limitingConeAngle: option(string),\n  ~?local: option(string),\n  ~?markerEnd: option(string),\n  ~?markerHeight: option(string),\n  ~?markerMid: option(string),\n  ~?markerStart: option(string),\n  ~?markerUnits: option(string),\n  ~?markerWidth: option(string),\n  ~?mask: option(string),\n  ~?maskContentUnits: option(string),\n  ~?maskUnits: option(string),\n  ~?mathematical: option(string),\n  ~?mode: option(string),\n  ~?numOctaves: option(string),\n  ~?offset: option(string),\n  ~?opacity: option(string),\n  ~?operator: option(string),\n  ~?order: option(string),\n  ~?orient: option(string),\n  ~?orientation: option(string),\n  ~?origin: option(string),\n  ~?overflow: option(string),\n  ~?overflowX: option(string),\n  ~?overflowY: option(string),\n  ~?overlinePosition: option(string),\n  ~?overlineThickness: option(string),\n  ~?paintOrder: option(string),\n  ~?panose1: option(string),\n  ~?pathLength: option(string),\n  ~?patternContentUnits: option(string),\n  ~?patternTransform: option(string),\n  ~?patternUnits: option(string),\n  ~?pointerEvents: option(string),\n  ~?points: option(string),\n  ~?pointsAtX: option(string),\n  ~?pointsAtY: option(string),\n  ~?pointsAtZ: option(string),\n  ~?preserveAlpha: option(string),\n  ~?preserveAspectRatio: option(string),\n  ~?primitiveUnits: option(string),\n  ~?r: option(string),\n  ~?radius: option(string),\n  ~?refX: option(string),\n  ~?refY: option(string),\n  ~?renderingIntent: option(string),\n  ~?repeatCount: option(string),\n  ~?repeatDur: option(string),\n  ~?requiredExtensions: option(string),\n  ~?requiredFeatures: option(string),\n  ~?restart: option(string),\n  ~?result: option(string),\n  ~?rotate: option(string),\n  ~?rx: option(string),\n  ~?ry: option(string),\n  ~?scale: option(string),\n  ~?seed: option(string),\n  ~?shapeRendering: option(string),\n  ~?slope: option(string),\n  ~?spacing: option(string),\n  ~?specularConstant: option(string),\n  ~?specularExponent: option(string),\n  ~?speed: option(string),\n  ~?spreadMethod: option(string),\n  ~?startOffset: option(string),\n  ~?stdDeviation: option(string),\n  ~?stemh: option(string),\n  ~?stemv: option(string),\n  ~?stitchTiles: option(string),\n  ~?stopColor: option(string),\n  ~?stopOpacity: option(string),\n  ~?strikethroughPosition: option(\n    string\n  ),\n  ~?strikethroughThickness: option(\n    string\n  ),\n  ~?string: option(string),\n  ~?stroke: option(string),\n  ~?strokeDasharray: option(string),\n  ~?strokeDashoffset: option(string),\n  ~?strokeLinecap: option(string),\n  ~?strokeLinejoin: option(string),\n  ~?strokeMiterlimit: option(string),\n  ~?strokeOpacity: option(string),\n  ~?strokeWidth: option(string),\n  ~?surfaceScale: option(string),\n  ~?systemLanguage: option(string),\n  ~?tableValues: option(string),\n  ~?targetX: option(string),\n  ~?targetY: option(string),\n  ~?textAnchor: option(string),\n  ~?textDecoration: option(string),\n  ~?textLength: option(string),\n  ~?textRendering: option(string),\n  ~?to_: option(string),\n  ~?transform: option(string),\n  ~?u1: option(string),\n  ~?u2: option(string),\n  ~?underlinePosition: option(string),\n  ~?underlineThickness: option(string),\n  ~?unicode: option(string),\n  ~?unicodeBidi: option(string),\n  ~?unicodeRange: option(string),\n  ~?unitsPerEm: option(string),\n  ~?vAlphabetic: option(string),\n  ~?vHanging: option(string),\n  ~?vIdeographic: option(string),\n  ~?vMathematical: option(string),\n  ~?values: option(string),\n  ~?vectorEffect: option(string),\n  ~?version: option(string),\n  ~?vertAdvX: option(string),\n  ~?vertAdvY: option(string),\n  ~?vertOriginX: option(string),\n  ~?vertOriginY: option(string),\n  ~?viewBox: option(string),\n  ~?viewTarget: option(string),\n  ~?visibility: option(string),\n  ~?widths: option(string),\n  ~?wordSpacing: option(string),\n  ~?writingMode: option(string),\n  ~?x: option(string),\n  ~?x1: option(string),\n  ~?x2: option(string),\n  ~?xChannelSelector: option(string),\n  ~?xHeight: option(string),\n  ~?xlinkActuate: option(string),\n  ~?xlinkArcrole: option(string),\n  ~?xlinkHref: option(string),\n  ~?xlinkRole: option(string),\n  ~?xlinkShow: option(string),\n  ~?xlinkTitle: option(string),\n  ~?xlinkType: option(string),\n  ~?xmlns: option(string),\n  ~?xmlnsXlink: option(string),\n  ~?xmlBase: option(string),\n  ~?xmlLang: option(string),\n  ~?xmlSpace: option(string),\n  ~?y: option(string),\n  ~?y1: option(string),\n  ~?y2: option(string),\n  ~?yChannelSelector: option(string),\n  ~?z: option(string),\n  ~?zoomAndPan: option(string),\n  ~?about: option(string),\n  ~?datatype: option(string),\n  ~?inlist: option(string),\n  ~?prefix: option(string),\n  ~?property: option(string),\n  ~?resource: option(string),\n  ~?typeof: option(string),\n  ~?vocab: option(string),\n  ~?dangerouslySetInnerHTML: option(\n    Js.t(< __html : string >)\n  ),\n  ~?suppressContentEditableWarning: option(\n    bool\n  ),\n  unit\n) => props;\n  type props\n  let objToDOMProps: Js.t(< .. >) => props;\n  type reactDOMProps = props\n  let createElement: (\n  string,\n  ~?props: option(props),\n  array(\n    ReasonReact.reactElement\n  )\n) => ReasonReact.reactElement;\n  let createElementVariadic: (\n  string,\n  ~?props: option(props),\n  array(\n    ReasonReact.reactElement\n  )\n) => ReasonReact.reactElement;\n  module Style;\n}\n```"}}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":22}}
Read message 
{"jsonrpc":"2.0","id":23,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/SimpleRoot.re"},"position":{"line":0,"character":35}}}
[server] Got a method textDocument/hover
[server] processing took 0.00905990600586ms
Getting global Page
FINDING /home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/lib/bs/js/Page.cmt src /home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re
Getting for 1012 in make
Trying for declared Value 1012 in file file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re
Yes!! got it
Sending response {"id": 23, "jsonrpc": "2.0", "result": {"range": {"start": {"line": 0, "character": 34}, "end": {"line": 0, "character": 38}}, "contents": {"kind": "markdown", "value": "```\n(\n  ~message: string,\n  'a\n) => ReasonReact.componentSpec(\n  ReasonReact.stateless,\n  ReasonReact.stateless,\n  ReasonReact.noRetainedProps,\n  ReasonReact.noRetainedProps,\n  ReasonReact.actionless\n)\n```\n\n<root>/assets/js/Page.re"}}}
Read message 
{"jsonrpc":"2.0","id":24,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/SimpleRoot.re"},"position":{"line":0,"character":36}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00977516174316ms
Got a loc for pos
Sending response {"id": 24, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 34}, "end": {"line": 0, "character": 38}}, "kind": 2}]}
Read message 
{"jsonrpc":"2.0","id":25,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/SimpleRoot.re"},"range":{"start":{"line":0,"character":34},"end":{"line":0,"character":38}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0109672546387ms
Sending response {"id": 25, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":26,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/SimpleRoot.re"},"position":{"line":0,"character":18}}}
[server] Got a method textDocument/hover
[server] processing took 0.00619888305664ms
Getting global ReactDOMRe
FINDING /home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/reason-react/lib/bs/src/ReactDOMRe.cmt src /home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/reason-react/src/ReactDOMRe.re
Getting for 1015 in renderToElementWithId
Trying for declared Value 1015 in file file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/reason-react/src/ReactDOMRe.re
Yes!! got it
Sending response {"id": 26, "jsonrpc": "2.0", "result": {"range": {"start": {"line": 0, "character": 11}, "end": {"line": 0, "character": 32}}, "contents": {"kind": "markdown", "value": "```\n(\n  ReasonReact.reactElement,\n  string\n) => unit\n```\n\n<root>/assets/node_modules/reason-react/src/ReactDOMRe.re"}}}
Read message 
{"jsonrpc":"2.0","id":27,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/SimpleRoot.re"},"position":{"line":0,"character":44}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.0100135803223ms
Sending response {"id": 27, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":28,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/SimpleRoot.re"},"range":{"start":{"line":0,"character":39},"end":{"line":0,"character":46}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0100135803223ms
Sending response {"id": 28, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":29,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/SimpleRoot.re"},"position":{"line":0,"character":51}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00500679016113ms
Got a loc for pos
Sending response {"id": 29, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":30,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/SimpleRoot.re"},"range":{"start":{"line":0,"character":48},"end":{"line":0,"character":53}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00691413879395ms
Sending response {"id": 30, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":31,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/SimpleRoot.re"},"position":{"line":0,"character":63}}}
[server] Got a method textDocument/hover
[server] processing took 0.014066696167ms
Sending response {"id": 31, "jsonrpc": "2.0", "result": {"range": {"start": {"line": 0, "character": 60}, "end": {"line": 0, "character": 67}}, "contents": {"kind": "markdown", "value": "string"}}}
Read message 
{"jsonrpc":"2.0","id":32,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/SimpleRoot.re"},"position":{"line":0,"character":64}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00715255737305ms
Got a loc for pos
Sending response {"id": 32, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":33,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/SimpleRoot.re"},"range":{"start":{"line":0,"character":61},"end":{"line":0,"character":66}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00691413879395ms
Sending response {"id": 33, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":34,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/SimpleRoot.re"},"position":{"line":0,"character":62}}}
[server] Got a method textDocument/hover
[server] processing took 0.00810623168945ms
Sending response {"id": 34, "jsonrpc": "2.0", "result": {"range": {"start": {"line": 0, "character": 60}, "end": {"line": 0, "character": 67}}, "contents": {"kind": "markdown", "value": "string"}}}
Read message 
{"jsonrpc":"2.0","id":35,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/SimpleRoot.re"},"position":{"line":0,"character":66}}}
[server] Got a method textDocument/hover
[server] processing took 0.0100135803223ms
Sending response {"id": 35, "jsonrpc": "2.0", "result": {"range": {"start": {"line": 0, "character": 60}, "end": {"line": 0, "character": 67}}, "contents": {"kind": "markdown", "value": "string"}}}
Read message 
{"jsonrpc":"2.0","id":36,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/SimpleRoot.re"},"position":{"line":0,"character":63}}}
[server] Got a method textDocument/hover
[server] processing took 0.00691413879395ms
Sending response {"id": 36, "jsonrpc": "2.0", "result": {"range": {"start": {"line": 0, "character": 60}, "end": {"line": 0, "character": 67}}, "contents": {"kind": "markdown", "value": "string"}}}
Read message 
{"jsonrpc":"2.0","id":37,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/SimpleRoot.re"},"position":{"line":0,"character":33}}}
[server] Got a method textDocument/hover
[server] processing took 0.00619888305664ms
FINDING /home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/lib/bs/js/Page.cmt src /home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re
Sending response {"id": 37, "jsonrpc": "2.0", "result": {"range": {"start": {"line": 0, "character": 29}, "end": {"line": 0, "character": 33}}, "contents": {"kind": "markdown", "value": "```\nmodule Page = {\n  let component: ReasonReact.componentSpec(\n  ReasonReact.stateless,\n  ReasonReact.stateless,\n  ReasonReact.noRetainedProps,\n  ReasonReact.noRetainedProps,\n  ReasonReact.actionless\n);\n  let handleClick: ('a, 'b) => unit;\n  let make: (\n  ~message: string,\n  'a\n) => ReasonReact.componentSpec(\n  ReasonReact.stateless,\n  ReasonReact.stateless,\n  ReasonReact.noRetainedProps,\n  ReasonReact.noRetainedProps,\n  ReasonReact.actionless\n);\n}\n```"}}}
Read message 
{"jsonrpc":"2.0","id":38,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/SimpleRoot.re"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0100135803223ms
Sending response {"id": 38, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":39,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/SimpleRoot.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.00500679016113ms
Sending response {"id": 39, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReactDOMRe, ReasonReact, Page", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":40,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/SimpleRoot.re"},"range":{"start":{"line":0,"character":61},"end":{"line":0,"character":66}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00691413879395ms
Sending response {"id": 40, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/SimpleRoot.re"}}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re","languageId":"reason","version":1,"text":"let component = ReasonReact.statelessComponent(\"Page\");  \nlet handleClick = (_event, _self) => Js.log(\"clicked!\");  \nlet make = (~message, _children) => {  \n  ...component,  \n  render: self =>  \n    <div onClick=(self.handle(handleClick))>  \n      (ReasonReact.string(message))  \n     </div>,  \n};\n"}}}
Read message 
{"jsonrpc":"2.0","id":41,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00905990600586ms
Sending response {"id": 41, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":42,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.00500679016113ms
Sending response {"id": 42, "jsonrpc": "2.0", "result": [{"name": "component", "kind": 13, "location": {"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 54}}, "uri": "file://"}}, {"name": "handleClick", "kind": 12, "location": {"range": {"start": {"line": 1, "character": 0}, "end": {"line": 1, "character": 55}}, "uri": "file://"}}, {"name": "make", "kind": 12, "location": {"range": {"start": {"line": 2, "character": 0}, "end": {"line": 8, "character": 1}}, "uri": "file://"}}]}
Read message 
{"jsonrpc":"2.0","id":43,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.00309944152832ms
Sending response {"id": 43, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReactDOMRe, Js", "command": ""}}]}
Running diagnostics for file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re", "diagnostics": []}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/SimpleRoot.re","languageId":"reason","version":1,"text":"ReactDOMRe.renderToElementWithId(<Page message=\"Hello!\" />, \"index\");\n"}}}
Read message 
{"jsonrpc":"2.0","id":44,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/SimpleRoot.re"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00596046447754ms
Sending response {"id": 44, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":45,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/SimpleRoot.re"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.00596046447754ms
Sending response {"id": 45, "jsonrpc": "2.0", "result": []}
Read message 
{"jsonrpc":"2.0","id":46,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/SimpleRoot.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.00596046447754ms
Sending response {"id": 46, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReactDOMRe, ReasonReact, Page", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":47,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/SimpleRoot.re"},"range":{"start":{"line":0,"character":61},"end":{"line":0,"character":66}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00500679016113ms
Sending response {"id": 47, "jsonrpc": "2.0", "result": null}
Running diagnostics for file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/SimpleRoot.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/SimpleRoot.re", "diagnostics": []}}
Read message 
{"jsonrpc":"2.0","id":48,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0100135803223ms
Sending response {"id": 48, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":49,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0112056732178ms
Sending response {"id": 49, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReactDOMRe, Js", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":50,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re"},"position":{"line":0,"character":57}}}
[server] Got a method textDocument/hover
[server] processing took 0.00715255737305ms
Sending response {"id": 50, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":51,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re"},"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":57}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00905990600586ms
Sending response {"id": 51, "jsonrpc": "2.0", "result": [{"title": "Add to interface file", "command": "reason-language-server.add_to_interface_inner", "arguments": ["file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re", "let component: ReasonReact.componentSpec(\n  ReasonReact.stateless,\n  ReasonReact.stateless,\n  ReasonReact.noRetainedProps,\n  ReasonReact.noRetainedProps,\n  ReasonReact.actionless\n)"]}]}
Read message 
{"jsonrpc":"2.0","id":52,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":57}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0181198120117ms
Sending response {"id": 52, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":53,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re"},"position":{"line":0,"character":46}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00905990600586ms
Got a loc for pos
Sending response {"id": 53, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 28}, "end": {"line": 0, "character": 46}}, "kind": 2}]}
Read message 
{"jsonrpc":"2.0","id":54,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re"},"range":{"start":{"line":0,"character":28},"end":{"line":0,"character":46}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0109672546387ms
Sending response {"id": 54, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":55,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re"},"position":{"line":1,"character":9}}}
[server] Got a method textDocument/hover
[server] processing took 0.00715255737305ms
Trying for declared Value 1009 in file file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re
Sending response {"id": 55, "jsonrpc": "2.0", "result": {"range": {"start": {"line": 1, "character": 4}, "end": {"line": 1, "character": 15}}, "contents": {"kind": "markdown", "value": "```\n('a, 'b) => unit\n```\n\n<root>/assets/js/Page.re"}}}
Read message 
{"jsonrpc":"2.0","id":56,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re"},"position":{"line":1,"character":9}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00500679016113ms
Got a loc for pos
Sending response {"id": 56, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 5, "character": 30}, "end": {"line": 5, "character": 41}}, "kind": 2}, {"range": {"start": {"line": 1, "character": 4}, "end": {"line": 1, "character": 15}}, "kind": 2}]}
Read message 
{"jsonrpc":"2.0","id":57,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re"},"range":{"start":{"line":1,"character":4},"end":{"line":1,"character":15}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00786781311035ms
Sending response {"id": 57, "jsonrpc": "2.0", "result": [{"title": "Add to interface file", "command": "reason-language-server.add_to_interface_inner", "arguments": ["file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re", "let handleClick: ('a, 'b) => unit"]}]}
Read message 
{"jsonrpc":"2.0","id":58,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re"},"position":{"line":1,"character":3}}}
[server] Got a method textDocument/hover
[server] processing took 0.00500679016113ms
Sending response {"id": 58, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":59,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re"},"position":{"line":1,"character":23}}}
[server] Got a method textDocument/hover
[server] processing took 0.0109672546387ms
Trying for declared Value 1010 in file file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re
Sending response {"id": 59, "jsonrpc": "2.0", "result": {"range": {"start": {"line": 1, "character": 19}, "end": {"line": 1, "character": 25}}, "contents": {"kind": "markdown", "value": "```\n'a\n```\n\n<root>/assets/js/Page.re"}}}
Read message 
{"jsonrpc":"2.0","id":60,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re"},"position":{"line":1,"character":23}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.0119209289551ms
Got a loc for pos
Sending response {"id": 60, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 1, "character": 19}, "end": {"line": 1, "character": 25}}, "kind": 2}]}
Read message 
{"jsonrpc":"2.0","id":61,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re"},"range":{"start":{"line":1,"character":19},"end":{"line":1,"character":25}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00905990600586ms
Sending response {"id": 61, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":62,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re"},"position":{"line":1,"character":29}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00905990600586ms
Got a loc for pos
Sending response {"id": 62, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 1, "character": 27}, "end": {"line": 1, "character": 32}}, "kind": 2}]}
Read message 
{"jsonrpc":"2.0","id":63,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re"},"range":{"start":{"line":1,"character":27},"end":{"line":1,"character":32}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0209808349609ms
Sending response {"id": 63, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":64,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re"},"position":{"line":1,"character":35}}}
[server] Got a method textDocument/hover
[server] processing took 0.00905990600586ms
Sending response {"id": 64, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":65,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re"},"position":{"line":1,"character":37}}}
[server] Got a method textDocument/hover
[server] processing took 0.00810623168945ms
FINDING /home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/bs-platform/lib/ocaml/js.cmi src /home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/bs-platform/lib/ocaml/js.ml
Sending response {"id": 65, "jsonrpc": "2.0", "result": {"range": {"start": {"line": 1, "character": 37}, "end": {"line": 1, "character": 39}}, "contents": {"kind": "markdown", "value": "```\nmodule Js = {\n  module Console;\n  module Vector;\n  module List;\n  module Result;\n  module Option;\n  module Int;\n  module Float;\n  module Types;\n  module Typed_array;\n  module Obj;\n  module Math;\n  module Json;\n  module Global;\n  module Dict;\n  module Date;\n  module Promise;\n  module Re;\n  module String;\n  module Array;\n  module Exn;\n  module Null_undefined;\n  module Nullable;\n  module Undefined;\n  module Null;\n  let unsafe_ge: ('a, 'a) => bool;\n  let unsafe_gt: ('a, 'a) => bool;\n  let unsafe_le: ('a, 'a) => bool;\n  let unsafe_lt: ('a, 'a) => bool;\n  let eqNullable: ('a, nullable('a)) => bool;\n  let eqUndefined: ('a, undefined('a)) => bool;\n  let eqNull: ('a, null('a)) => bool;\n  let logMany: array('a) => unit;\n  let log4: ('a, 'b, 'c, 'd) => unit;\n  let log3: ('a, 'b, 'c) => unit;\n  let log2: ('a, 'b) => unit;\n  let log: 'a => unit;\n  let typeof: 'a => string;\n  let undefined: undefined('a);\n  let null: null('a);\n  type promise('a, 'e)\n  let testAny: 'a => bool;\n  let isNullable: nullable('a) => bool;\n  let test: nullable('a) => bool;\n  let nullToOption: null('a) => option('a);\n  let undefinedToOption: undefined('a) => option('a);\n  let toOption: nullable('a) => option('a);\n  type null_undefined('a) = nullable('a)\n  type nullable('a)\n  type undefined('a)\n  type null('a)\n  module Internal;\n  module MapperRt;\n  type t('a)\n}\n```"}}}
Read message 
{"jsonrpc":"2.0","id":66,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re"},"position":{"line":1,"character":42}}}
[server] Got a method textDocument/hover
[server] processing took 0.00786781311035ms
Getting global Js
FINDING /home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/bs-platform/lib/ocaml/js.cmi src /home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/bs-platform/lib/ocaml/js.ml
Getting for 1121 in log
Trying for declared Value 1121 in file file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/bs-platform/lib/ocaml/js.ml
Yes!! got it
Sending response {"id": 66, "jsonrpc": "2.0", "result": {"range": {"start": {"line": 1, "character": 40}, "end": {"line": 1, "character": 43}}, "contents": {"kind": "markdown", "value": "```\n'a => unit\n```\n\n<root>/assets/node_modules/bs-platform/lib/ocaml/js.ml"}}}
Read message 
{"jsonrpc":"2.0","id":67,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re"},"position":{"line":1,"character":36}}}
[server] Got a method textDocument/hover
[server] processing took 0.00500679016113ms
Sending response {"id": 67, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":68,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re"},"position":{"line":1,"character":46}}}
[server] Got a method textDocument/hover
[server] processing took 0.0119209289551ms
Sending response {"id": 68, "jsonrpc": "2.0", "result": {"range": {"start": {"line": 1, "character": 44}, "end": {"line": 1, "character": 54}}, "contents": {"kind": "markdown", "value": "string"}}}
Read message 
{"jsonrpc":"2.0","id":69,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re"},"position":{"line":1,"character":55}}}
[server] Got a method textDocument/hover
[server] processing took 0.00882148742676ms
Sending response {"id": 69, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":70,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re"},"position":{"line":1,"character":21}}}
[server] Got a method textDocument/hover
[server] processing took 0.00500679016113ms
Trying for declared Value 1010 in file file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re
Sending response {"id": 70, "jsonrpc": "2.0", "result": {"range": {"start": {"line": 1, "character": 19}, "end": {"line": 1, "character": 25}}, "contents": {"kind": "markdown", "value": "```\n'a\n```\n\n<root>/assets/js/Page.re"}}}
Read message 
{"jsonrpc":"2.0","id":71,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re"},"position":{"line":1,"character":55}}}
[server] Got a method textDocument/hover
[server] processing took 0.0109672546387ms
Sending response {"id": 71, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":72,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re"},"range":{"start":{"line":1,"character":6},"end":{"line":1,"character":56}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00715255737305ms
Sending response {"id": 72, "jsonrpc": "2.0", "result": [{"title": "Add to interface file", "command": "reason-language-server.add_to_interface_inner", "arguments": ["file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re", "let handleClick: ('a, 'b) => unit"]}]}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re","version":2},"contentChanges":[{"text":"let component = ReasonReact.statelessComponent(\"Page\");  \nlet handleClick = (_event, _self) => Js.log(\"clicked!\"); \nlet make = (~message, _children) => {  \n  ...component,  \n  render: self =>  \n    <div onClick=(self.handle(handleClick))>  \n      (ReasonReact.string(message))  \n     </div>,  \n};\n"}]}}
Read message 
{"jsonrpc":"2.0","id":73,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.00715255737305ms
‚û°Ô∏è running bsc /home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/bs-platform/lib/bsc.exe -c -I '/home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/lib/bs/js' -I '/home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/bs-platform/lib/ocaml' -I '/home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/reason-react/lib/bs/src' -I '/home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -ppx ''\''/home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/bs-platform/lib/reactjs_jsx_ppx_2.exe'\''' -ppx '/home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/.lsp/Page.ast with pwd /home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets
<< Replacing lastDefinitions for file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re
Sending response {"id": 73, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReactDOMRe, Js", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":74,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.00596046447754ms
Sending response {"id": 74, "jsonrpc": "2.0", "result": [{"name": "component", "kind": 13, "location": {"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 54}}, "uri": "file://"}}, {"name": "handleClick", "kind": 12, "location": {"range": {"start": {"line": 1, "character": 0}, "end": {"line": 1, "character": 55}}, "uri": "file://"}}, {"name": "make", "kind": 12, "location": {"range": {"start": {"line": 2, "character": 0}, "end": {"line": 8, "character": 1}}, "uri": "file://"}}]}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re","version":3},"contentChanges":[{"text":"let component = ReasonReact.statelessComponent(\"Page\");  \nlet handleClick = (_event, _self) => Js.log(\"clicked!\");\nlet make = (~message, _children) => {  \n  ...component,  \n  render: self =>  \n    <div onClick=(self.handle(handleClick))>  \n      (ReasonReact.string(message))  \n     </div>,  \n};\n"}]}}
Read message 
{"jsonrpc":"2.0","id":75,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.00596046447754ms
‚û°Ô∏è running bsc /home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/bs-platform/lib/bsc.exe -c -I '/home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/lib/bs/js' -I '/home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/bs-platform/lib/ocaml' -I '/home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/reason-react/lib/bs/src' -I '/home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -ppx ''\''/home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/bs-platform/lib/reactjs_jsx_ppx_2.exe'\''' -ppx '/home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/.lsp/Page.ast with pwd /home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets
<< Replacing lastDefinitions for file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re
Sending response {"id": 75, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReactDOMRe, Js", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":76,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re"},"range":{"start":{"line":1,"character":56},"end":{"line":1,"character":56}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00691413879395ms
Sending response {"id": 76, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re","version":4},"contentChanges":[{"text":"let component = ReasonReact.statelessComponent(\"Page\");  \nlet handleClick = (_event, _self) => Js.log(\"clicked!\");\n\nlet make = (~message, _children) => {  \n  ...component,  \n  render: self =>  \n    <div onClick=(self.handle(handleClick))>  \n      (ReasonReact.string(message))  \n     </div>,  \n};\n"}]}}
Read message 
{"jsonrpc":"2.0","id":77,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.00715255737305ms
‚û°Ô∏è running bsc /home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/bs-platform/lib/bsc.exe -c -I '/home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/lib/bs/js' -I '/home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/bs-platform/lib/ocaml' -I '/home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/reason-react/lib/bs/src' -I '/home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -ppx ''\''/home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/bs-platform/lib/reactjs_jsx_ppx_2.exe'\''' -ppx '/home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/.lsp/Page.ast with pwd /home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets
<< Replacing lastDefinitions for file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re
Sending response {"id": 77, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReactDOMRe, Js", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":78,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.0100135803223ms
Sending response {"id": 78, "jsonrpc": "2.0", "result": [{"name": "component", "kind": 13, "location": {"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 54}}, "uri": "file://"}}, {"name": "handleClick", "kind": 12, "location": {"range": {"start": {"line": 1, "character": 0}, "end": {"line": 1, "character": 55}}, "uri": "file://"}}, {"name": "make", "kind": 12, "location": {"range": {"start": {"line": 3, "character": 0}, "end": {"line": 9, "character": 1}}, "uri": "file://"}}]}
Running diagnostics for file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re", "diagnostics": []}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re","version":4},"contentChanges":[{"text":"let component = ReasonReact.statelessComponent(\"Page\");  \nlet handleClick = (_event, _self) => Js.log(\"clicked!\");\n\nlet make = (~message, _children) => {  \n  ...component,  \n  render: self =>  \n    <div onClick=(self.handle(handleClick))>  \n      (ReasonReact.string(message))  \n     </div>,  \n};\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re","version":4}}}
Read message 
{"jsonrpc":"2.0","id":79,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re"},"position":{"line":3,"character":8}}}
[server] Got a method textDocument/hover
[server] processing took 0.00500679016113ms
‚û°Ô∏è running bsc /home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/bs-platform/lib/bsc.exe -c -I '/home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/lib/bs/js' -I '/home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/bs-platform/lib/ocaml' -I '/home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/reason-react/lib/bs/src' -I '/home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -ppx ''\''/home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/bs-platform/lib/reactjs_jsx_ppx_2.exe'\''' -ppx '/home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/.lsp/Page.ast with pwd /home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets
<< Replacing lastDefinitions for file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re
Trying for declared Value 1012 in file file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re
Sending response {"id": 79, "jsonrpc": "2.0", "result": {"range": {"start": {"line": 3, "character": 4}, "end": {"line": 3, "character": 8}}, "contents": {"kind": "markdown", "value": "```\n(\n  ~message: string,\n  'a\n) => ReasonReact.componentSpec(\n  ReasonReact.stateless,\n  ReasonReact.stateless,\n  ReasonReact.noRetainedProps,\n  ReasonReact.noRetainedProps,\n  ReasonReact.actionless\n)\n```\n\n<root>/assets/js/Page.re"}}}
>> Build system running: /home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/bs-platform/lib/bsb.exe -make-world
>>> stdout
ninja: no work to do.
[1/2] [34mBuilding[39m [2mjs/Page.mlast[22m
[2/2] [34mBuilding[39m [2mjs/Page.mlast.d[22m
[1/2] [34mBuilding[39m [2mjs/Page.cmj[22m
>>> stderr

Affected files: 
Cleaning bsconfig.json
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/bsconfig.json", "diagnostics": []}}
Running diagnostics for file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/SimpleRoot.re
‚û°Ô∏è running bsc /home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/bs-platform/lib/bsc.exe -c -I '/home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/lib/bs/js' -I '/home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/bs-platform/lib/ocaml' -I '/home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/reason-react/lib/bs/src' -I '/home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -ppx ''\''/home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/bs-platform/lib/reactjs_jsx_ppx_2.exe'\''' -ppx '/home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/.lsp/SimpleRoot.ast with pwd /home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets
<< Replacing lastDefinitions for file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/SimpleRoot.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/SimpleRoot.re", "diagnostics": []}}
Running diagnostics for file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re", "diagnostics": []}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":79}}
Read message 
{"jsonrpc":"2.0","id":80,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re"},"position":{"line":3,"character":16}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.0131130218506ms
Got a loc for pos
Sending response {"id": 80, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 7, "character": 26}, "end": {"line": 7, "character": 33}}, "kind": 2}, {"range": {"start": {"line": 3, "character": 13}, "end": {"line": 3, "character": 20}}, "kind": 2}]}
Read message 
{"jsonrpc":"2.0","id":81,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re"},"range":{"start":{"line":3,"character":13},"end":{"line":3,"character":20}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0109672546387ms
Sending response {"id": 81, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":82,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re"},"position":{"line":3,"character":18}}}
[server] Got a method textDocument/hover
[server] processing took 0.00786781311035ms
Trying for declared Value 1013 in file file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re
Sending response {"id": 82, "jsonrpc": "2.0", "result": {"range": {"start": {"line": 3, "character": 13}, "end": {"line": 3, "character": 20}}, "contents": {"kind": "markdown", "value": "```\nstring\n```\n\n<root>/assets/js/Page.re"}}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":82}}
Read message 
{"jsonrpc":"2.0","id":83,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re"},"position":{"line":3,"character":19}}}
[server] Got a method textDocument/hover
[server] processing took 0.0119209289551ms
Trying for declared Value 1013 in file file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re
Sending response {"id": 83, "jsonrpc": "2.0", "result": {"range": {"start": {"line": 3, "character": 13}, "end": {"line": 3, "character": 20}}, "contents": {"kind": "markdown", "value": "```\nstring\n```\n\n<root>/assets/js/Page.re"}}}
Read message 
{"jsonrpc":"2.0","id":84,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re"},"position":{"line":3,"character":28}}}
[server] Got a method textDocument/hover
[server] processing took 0.0159740447998ms
Trying for declared Value 1014 in file file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re
Sending response {"id": 84, "jsonrpc": "2.0", "result": {"range": {"start": {"line": 3, "character": 22}, "end": {"line": 3, "character": 31}}, "contents": {"kind": "markdown", "value": "```\n'a\n```\n\n<root>/assets/js/Page.re"}}}
Read message 
{"jsonrpc":"2.0","id":85,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re"},"position":{"line":3,"character":28}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00882148742676ms
Got a loc for pos
Sending response {"id": 85, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 3, "character": 22}, "end": {"line": 3, "character": 31}}, "kind": 2}]}
Read message 
{"jsonrpc":"2.0","id":86,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re"},"range":{"start":{"line":3,"character":28},"end":{"line":3,"character":28}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0100135803223ms
Sending response {"id": 86, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":87,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re"},"range":{"start":{"line":3,"character":22},"end":{"line":3,"character":31}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0109672546387ms
Sending response {"id": 87, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":88,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re"},"position":{"line":4,"character":10}}}
[server] Got a method textDocument/hover
[server] processing took 0.00786781311035ms
FINDING /home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/reason-react/lib/bs/src/ReasonReact.cmti src /home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/reason-react/src/ReasonReact.rei
Trying for declared Value 1008 in file file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re
Sending response {"id": 88, "jsonrpc": "2.0", "result": {"range": {"start": {"line": 4, "character": 5}, "end": {"line": 4, "character": 14}}, "contents": {"kind": "markdown", "value": "```\nReasonReact.componentSpec(\n  ReasonReact.stateless,\n  ReasonReact.stateless,\n  ReasonReact.noRetainedProps,\n  ReasonReact.noRetainedProps,\n  ReasonReact.actionless\n)\n```\n\n```\ntype componentSpec(\n  'state,\n  'initialState,\n  'retainedProps,\n  'initialRetainedProps,\n  'action\n) = {\n  debugName: string,\n  reactClassInternal: reactClassInternal,\n  mut handedOffState: Pervasives.ref(option('state)),\n  willReceiveProps: self(\n    'state,\n    'retainedProps,\n    'action\n  ) => 'state,\n  didMount: self('state, 'retainedProps, 'action) => unit,\n  didUpdate: oldNewSelf(\n    'state,\n    'retainedProps,\n    'action\n  ) => unit,\n  willUnmount: self(\n    'state,\n    'retainedProps,\n    'action\n  ) => unit,\n  willUpdate: oldNewSelf(\n    'state,\n    'retainedProps,\n    'action\n  ) => unit,\n  shouldUpdate: oldNewSelf(\n    'state,\n    'retainedProps,\n    'action\n  ) => bool,\n  render: self(\n    'state,\n    'retainedProps,\n    'action\n  ) => reactElement,\n  initialState: unit => 'initialState,\n  retainedProps: 'initialRetainedProps,\n  reducer: ('action, 'state) => update(\n    'state,\n    'retainedProps,\n    'action\n  ),\n  jsElementWrapped: jsElementWrapped\n}\n```\n\n<root>/assets/js/Page.re"}}}
Read message 
{"jsonrpc":"2.0","id":89,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re"},"position":{"line":4,"character":10}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00596046447754ms
Got a loc for pos
Sending response {"id": 89, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 4, "character": 5}, "end": {"line": 4, "character": 14}}, "kind": 2}, {"range": {"start": {"line": 0, "character": 4}, "end": {"line": 0, "character": 13}}, "kind": 2}]}
Read message 
{"jsonrpc":"2.0","id":90,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re"},"range":{"start":{"line":4,"character":5},"end":{"line":4,"character":14}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0231266021729ms
Sending response {"id": 90, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":91,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re"},"position":{"line":4,"character":4}}}
[server] Got a method textDocument/hover
[server] processing took 0.0131130218506ms
Sending response {"id": 91, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":92,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re"},"position":{"line":4,"character":3}}}
[server] Got a method textDocument/hover
[server] processing took 0.00810623168945ms
Sending response {"id": 92, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":93,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re"},"position":{"line":4,"character":7}}}
[server] Got a method textDocument/hover
[server] processing took 0.00596046447754ms
FINDING /home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/reason-react/lib/bs/src/ReasonReact.cmti src /home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/reason-react/src/ReasonReact.rei
Trying for declared Value 1008 in file file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re
Sending response {"id": 93, "jsonrpc": "2.0", "result": {"range": {"start": {"line": 4, "character": 5}, "end": {"line": 4, "character": 14}}, "contents": {"kind": "markdown", "value": "```\nReasonReact.componentSpec(\n  ReasonReact.stateless,\n  ReasonReact.stateless,\n  ReasonReact.noRetainedProps,\n  ReasonReact.noRetainedProps,\n  ReasonReact.actionless\n)\n```\n\n```\ntype componentSpec(\n  'state,\n  'initialState,\n  'retainedProps,\n  'initialRetainedProps,\n  'action\n) = {\n  debugName: string,\n  reactClassInternal: reactClassInternal,\n  mut handedOffState: Pervasives.ref(option('state)),\n  willReceiveProps: self(\n    'state,\n    'retainedProps,\n    'action\n  ) => 'state,\n  didMount: self('state, 'retainedProps, 'action) => unit,\n  didUpdate: oldNewSelf(\n    'state,\n    'retainedProps,\n    'action\n  ) => unit,\n  willUnmount: self(\n    'state,\n    'retainedProps,\n    'action\n  ) => unit,\n  willUpdate: oldNewSelf(\n    'state,\n    'retainedProps,\n    'action\n  ) => unit,\n  shouldUpdate: oldNewSelf(\n    'state,\n    'retainedProps,\n    'action\n  ) => bool,\n  render: self(\n    'state,\n    'retainedProps,\n    'action\n  ) => reactElement,\n  initialState: unit => 'initialState,\n  retainedProps: 'initialRetainedProps,\n  reducer: ('action, 'state) => update(\n    'state,\n    'retainedProps,\n    'action\n  ),\n  jsElementWrapped: jsElementWrapped\n}\n```\n\n<root>/assets/js/Page.re"}}}
Read message 
{"jsonrpc":"2.0","id":94,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re"},"position":{"line":5,"character":4}}}
[server] Got a method textDocument/hover
[server] processing took 0.0150203704834ms
FINDING /home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/reason-react/lib/bs/src/ReasonReact.cmti src /home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/reason-react/src/ReasonReact.rei
Getting global ReasonReact
FINDING /home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/reason-react/lib/bs/src/ReasonReact.cmti src /home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/reason-react/src/ReasonReact.rei
Getting for 1038 in componentSpec
Yes!! got it
Sending response {"id": 94, "jsonrpc": "2.0", "result": {"range": {"start": {"line": 5, "character": 2}, "end": {"line": 5, "character": 8}}, "contents": {"kind": "markdown", "value": "```\nReasonReact.componentSpec(\n  'state,\n  'initialState,\n  'retainedProps,\n  'initialRetainedProps,\n  'action\n)\n```\n\n```\ntype componentSpec(\n  'state,\n  'initialState,\n  'retainedProps,\n  'initialRetainedProps,\n  'action\n) = {\n  debugName: string,\n  reactClassInternal: reactClassInternal,\n  mut handedOffState: Pervasives.ref(option('state)),\n  willReceiveProps: self(\n    'state,\n    'retainedProps,\n    'action\n  ) => 'state,\n  didMount: self('state, 'retainedProps, 'action) => unit,\n  didUpdate: oldNewSelf(\n    'state,\n    'retainedProps,\n    'action\n  ) => unit,\n  willUnmount: self(\n    'state,\n    'retainedProps,\n    'action\n  ) => unit,\n  willUpdate: oldNewSelf(\n    'state,\n    'retainedProps,\n    'action\n  ) => unit,\n  shouldUpdate: oldNewSelf(\n    'state,\n    'retainedProps,\n    'action\n  ) => bool,\n  render: self(\n    'state,\n    'retainedProps,\n    'action\n  ) => reactElement,\n  initialState: unit => 'initialState,\n  retainedProps: 'initialRetainedProps,\n  reducer: ('action, 'state) => update(\n    'state,\n    'retainedProps,\n    'action\n  ),\n  jsElementWrapped: jsElementWrapped\n}\n```\n\n<root>/assets/node_modules/reason-react/src/ReasonReact.rei"}}}
Read message 
{"jsonrpc":"2.0","id":95,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re"},"position":{"line":5,"character":11}}}
[server] Got a method textDocument/hover
[server] processing took 0.0190734863281ms
FINDING /home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/reason-react/lib/bs/src/ReasonReact.cmti src /home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/reason-react/src/ReasonReact.rei
Trying for declared Value 1015 in file file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re
Sending response {"id": 95, "jsonrpc": "2.0", "result": {"range": {"start": {"line": 5, "character": 10}, "end": {"line": 5, "character": 14}}, "contents": {"kind": "markdown", "value": "```\nReasonReact.self(\n  ReasonReact.stateless,\n  ReasonReact.noRetainedProps,\n  ReasonReact.actionless\n)\n```\n\n```\ntype self('state, 'retainedProps, 'action) = {\n  handle: 'payload.\n  ('payload -> ('state, 'retainedProps, 'action) self -> unit) ->\n  'payload -> unit,\n  state: 'state,\n  retainedProps: 'retainedProps,\n  send: 'action => unit,\n  onUnmount: unit => unit => unit\n}\n```\n\n<root>/assets/js/Page.re"}}}
Read message 
{"jsonrpc":"2.0","id":96,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re"},"position":{"line":5,"character":12}}}
[server] Got a method textDocument/hover
[server] processing took 0.0240802764893ms
FINDING /home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/reason-react/lib/bs/src/ReasonReact.cmti src /home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/reason-react/src/ReasonReact.rei
Trying for declared Value 1015 in file file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re
Sending response {"id": 96, "jsonrpc": "2.0", "result": {"range": {"start": {"line": 5, "character": 10}, "end": {"line": 5, "character": 14}}, "contents": {"kind": "markdown", "value": "```\nReasonReact.self(\n  ReasonReact.stateless,\n  ReasonReact.noRetainedProps,\n  ReasonReact.actionless\n)\n```\n\n```\ntype self('state, 'retainedProps, 'action) = {\n  handle: 'payload.\n  ('payload -> ('state, 'retainedProps, 'action) self -> unit) ->\n  'payload -> unit,\n  state: 'state,\n  retainedProps: 'retainedProps,\n  send: 'action => unit,\n  onUnmount: unit => unit => unit\n}\n```\n\n<root>/assets/js/Page.re"}}}
Read message 
{"jsonrpc":"2.0","id":97,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re"},"position":{"line":5,"character":11}}}
[server] Got a method textDocument/hover
[server] processing took 0.0228881835938ms
FINDING /home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/reason-react/lib/bs/src/ReasonReact.cmti src /home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/reason-react/src/ReasonReact.rei
Trying for declared Value 1015 in file file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re
Sending response {"id": 97, "jsonrpc": "2.0", "result": {"range": {"start": {"line": 5, "character": 10}, "end": {"line": 5, "character": 14}}, "contents": {"kind": "markdown", "value": "```\nReasonReact.self(\n  ReasonReact.stateless,\n  ReasonReact.noRetainedProps,\n  ReasonReact.actionless\n)\n```\n\n```\ntype self('state, 'retainedProps, 'action) = {\n  handle: 'payload.\n  ('payload -> ('state, 'retainedProps, 'action) self -> unit) ->\n  'payload -> unit,\n  state: 'state,\n  retainedProps: 'retainedProps,\n  send: 'action => unit,\n  onUnmount: unit => unit => unit\n}\n```\n\n<root>/assets/js/Page.re"}}}
Read message 
{"jsonrpc":"2.0","id":98,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re"},"position":{"line":6,"character":2}}}
[server] Got a method textDocument/hover
[server] processing took 0.0150203704834ms
FINDING /home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/reason-react/lib/bs/src/ReactDOMRe.cmt src /home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/reason-react/src/ReactDOMRe.re
Sending response {"id": 98, "jsonrpc": "2.0", "result": {"range": {"start": {"line": 6, "character": -8}, "end": {"line": 6, "character": 2}}, "contents": {"kind": "markdown", "value": "```\nmodule ReactDOMRe = {\n  let render: (\n  ReasonReact.reactElement,\n  Dom.element\n) => unit;\n  let _getElementsByClassName: string => array(Dom.element);\n  let _getElementById: string => option(Dom.element);\n  let renderToElementWithClassName: (\n  ReasonReact.reactElement,\n  string\n) => unit;\n  let renderToElementWithId: (\n  ReasonReact.reactElement,\n  string\n) => unit;\n  let hydrate: (\n  ReasonReact.reactElement,\n  Dom.element\n) => unit;\n  let hydrateToElementWithClassName: (\n  ReasonReact.reactElement,\n  string\n) => unit;\n  let hydrateToElementWithId: (\n  ReasonReact.reactElement,\n  string\n) => unit;\n  let createPortal: (\n  ReasonReact.reactElement,\n  Dom.element\n) => ReasonReact.reactElement;\n  let unmountComponentAtNode: Dom.element => unit;\n  let findDOMNode: ReasonReact.reactRef => Dom.element;\n  let domElementToObj: Dom.element => Js.t(< .. >);\n  type style\n  let suppressContentEditableWarningGet: props => option(bool);\n  let suppressContentEditableWarning: props => option(bool);\n  let dangerouslySetInnerHTMLGet: props => option(\n  Js.t(< __html : string >)\n);\n  let dangerouslySetInnerHTML: props => option(\n  Js.t(< __html : string >)\n);\n  let vocabGet: props => option(string);\n  let vocab: props => option(string);\n  let typeofGet: props => option(string);\n  let typeof: props => option(string);\n  let resourceGet: props => option(string);\n  let resource: props => option(string);\n  let propertyGet: props => option(string);\n  let property: props => option(string);\n  let prefixGet: props => option(string);\n  let prefix: props => option(string);\n  let inlistGet: props => option(string);\n  let inlist: props => option(string);\n  let datatypeGet: props => option(string);\n  let datatype: props => option(string);\n  let aboutGet: props => option(string);\n  let about: props => option(string);\n  let zoomAndPanGet: props => option(string);\n  let zoomAndPan: props => option(string);\n  let zGet: props => option(string);\n  let z: props => option(string);\n  let yChannelSelectorGet: props => option(string);\n  let yChannelSelector: props => option(string);\n  let y2Get: props => option(string);\n  let y2: props => option(string);\n  let y1Get: props => option(string);\n  let y1: props => option(string);\n  let yGet: props => option(string);\n  let y: props => option(string);\n  let xmlSpaceGet: props => option(string);\n  let xmlSpace: props => option(string);\n  let xmlLangGet: props => option(string);\n  let xmlLang: props => option(string);\n  let xmlBaseGet: props => option(string);\n  let xmlBase: props => option(string);\n  let xmlnsXlinkGet: props => option(string);\n  let xmlnsXlink: props => option(string);\n  let xmlnsGet: props => option(string);\n  let xmlns: props => option(string);\n  let xlinkTypeGet: props => option(string);\n  let xlinkType: props => option(string);\n  let xlinkTitleGet: props => option(string);\n  let xlinkTitle: props => option(string);\n  let xlinkShowGet: props => option(string);\n  let xlinkShow: props => option(string);\n  let xlinkRoleGet: props => option(string);\n  let xlinkRole: props => option(string);\n  let xlinkHrefGet: props => option(string);\n  let xlinkHref: props => option(string);\n  let xlinkArcroleGet: props => option(string);\n  let xlinkArcrole: props => option(string);\n  let xlinkActuateGet: props => option(string);\n  let xlinkActuate: props => option(string);\n  let xHeightGet: props => option(string);\n  let xHeight: props => option(string);\n  let xChannelSelectorGet: props => option(string);\n  let xChannelSelector: props => option(string);\n  let x2Get: props => option(string);\n  let x2: props => option(string);\n  let x1Get: props => option(string);\n  let x1: props => option(string);\n  let xGet: props => option(string);\n  let x: props => option(string);\n  let writingModeGet: props => option(string);\n  let writingMode: props => option(string);\n  let wordSpacingGet: props => option(string);\n  let wordSpacing: props => option(string);\n  let widthsGet: props => option(string);\n  let widths: props => option(string);\n  let visibilityGet: props => option(string);\n  let visibility: props => option(string);\n  let viewTargetGet: props => option(string);\n  let viewTarget: props => option(string);\n  let viewBoxGet: props => option(string);\n  let viewBox: props => option(string);\n  let vertOriginYGet: props => option(string);\n  let vertOriginY: props => option(string);\n  let vertOriginXGet: props => option(string);\n  let vertOriginX: props => option(string);\n  let vertAdvYGet: props => option(string);\n  let vertAdvY: props => option(string);\n  let vertAdvXGet: props => option(string);\n  let vertAdvX: props => option(string);\n  let versionGet: props => option(string);\n  let version: props => option(string);\n  let vectorEffectGet: props => option(string);\n  let vectorEffect: props => option(string);\n  let valuesGet: props => option(string);\n  let values: props => option(string);\n  let vMathematicalGet: props => option(string);\n  let vMathematical: props => option(string);\n  let vIdeographicGet: props => option(string);\n  let vIdeographic: props => option(string);\n  let vHangingGet: props => option(string);\n  let vHanging: props => option(string);\n  let vAlphabeticGet: props => option(string);\n  let vAlphabetic: props => option(string);\n  let unitsPerEmGet: props => option(string);\n  let unitsPerEm: props => option(string);\n  let unicodeRangeGet: props => option(string);\n  let unicodeRange: props => option(string);\n  let unicodeBidiGet: props => option(string);\n  let unicodeBidi: props => option(string);\n  let unicodeGet: props => option(string);\n  let unicode: props => option(string);\n  let underlineThicknessGet: props => option(string);\n  let underlineThickness: props => option(string);\n  let underlinePositionGet: props => option(string);\n  let underlinePosition: props => option(string);\n  let u2Get: props => option(string);\n  let u2: props => option(string);\n  let u1Get: props => option(string);\n  let u1: props => option(string);\n  let transformGet: props => option(string);\n  let transform: props => option(string);\n  let to_Get: props => option(string);\n  let to_: props => option(string);\n  let textRenderingGet: props => option(string);\n  let textRendering: props => option(string);\n  let textLengthGet: props => option(string);\n  let textLength: props => option(string);\n  let textDecorationGet: props => option(string);\n  let textDecoration: props => option(string);\n  let textAnchorGet: props => option(string);\n  let textAnchor: props => option(string);\n  let targetYGet: props => option(string);\n  let targetY: props => option(string);\n  let targetXGet: props => option(string);\n  let targetX: props => option(string);\n  let tableValuesGet: props => option(string);\n  let tableValues: props => option(string);\n  let systemLanguageGet: props => option(string);\n  let systemLanguage: props => option(string);\n  let surfaceScaleGet: props => option(string);\n  let surfaceScale: props => option(string);\n  let strokeWidthGet: props => option(string);\n  let strokeWidth: props => option(string);\n  let strokeOpacityGet: props => option(string);\n  let strokeOpacity: props => option(string);\n  let strokeMiterlimitGet: props => option(string);\n  let strokeMiterlimit: props => option(string);\n  let strokeLinejoinGet: props => option(string);\n  let strokeLinejoin: props => option(string);\n  let strokeLinecapGet: props => option(string);\n  let strokeLinecap: props => option(string);\n  let strokeDashoffsetGet: props => option(string);\n  let strokeDashoffset: props => option(string);\n  let strokeDasharrayGet: props => option(string);\n  let strokeDasharray: props => option(string);\n  let strokeGet: props => option(string);\n  let stroke: props => option(string);\n  let stringGet: props => option(string);\n  let string: props => option(string);\n  let strikethroughThicknessGet: props => option(string);\n  let strikethroughThickness: props => option(string);\n  let strikethroughPositionGet: props => option(string);\n  let strikethroughPosition: props => option(string);\n  let stopOpacityGet: props => option(string);\n  let stopOpacity: props => option(string);\n  let stopColorGet: props => option(string);\n  let stopColor: props => option(string);\n  let stitchTilesGet: props => option(string);\n  let stitchTiles: props => option(string);\n  let stemvGet: props => option(string);\n  let stemv: props => option(string);\n  let stemhGet: props => option(string);\n  let stemh: props => option(string);\n  let stdDeviationGet: props => option(string);\n  let stdDeviation: props => option(string);\n  let startOffsetGet: props => option(string);\n  let startOffset: props => option(string);\n  let spreadMethodGet: props => option(string);\n  let spreadMethod: props => option(string);\n  let speedGet: props => option(string);\n  let speed: props => option(string);\n  let specularExponentGet: props => option(string);\n  let specularExponent: props => option(string);\n  let specularConstantGet: props => option(string);\n  let specularConstant: props => option(string);\n  let spacingGet: props => option(string);\n  let spacing: props => option(string);\n  let slopeGet: props => option(string);\n  let slope: props => option(string);\n  let shapeRenderingGet: props => option(string);\n  let shapeRendering: props => option(string);\n  let seedGet: props => option(string);\n  let seed: props => option(string);\n  let scaleGet: props => option(string);\n  let scale: props => option(string);\n  let ryGet: props => option(string);\n  let ry: props => option(string);\n  let rxGet: props => option(string);\n  let rx: props => option(string);\n  let rotateGet: props => option(string);\n  let rotate: props => option(string);\n  let resultGet: props => option(string);\n  let result: props => option(string);\n  let restartGet: props => option(string);\n  let restart: props => option(string);\n  let requiredFeaturesGet: props => option(string);\n  let requiredFeatures: props => option(string);\n  let requiredExtensionsGet: props => option(string);\n  let requiredExtensions: props => option(string);\n  let repeatDurGet: props => option(string);\n  let repeatDur: props => option(string);\n  let repeatCountGet: props => option(string);\n  let repeatCount: props => option(string);\n  let renderingIntentGet: props => option(string);\n  let renderingIntent: props => option(string);\n  let refYGet: props => option(string);\n  let refY: props => option(string);\n  let refXGet: props => option(string);\n  let refX: props => option(string);\n  let radiusGet: props => option(string);\n  let radius: props => option(string);\n  let rGet: props => option(string);\n  let r: props => option(string);\n  let primitiveUnitsGet: props => option(string);\n  let primitiveUnits: props => option(string);\n  let preserveAspectRatioGet: props => option(string);\n  let preserveAspectRatio: props => option(string);\n  let preserveAlphaGet: props => option(string);\n  let preserveAlpha: props => option(string);\n  let pointsAtZGet: props => option(string);\n  let pointsAtZ: props => option(string);\n  let pointsAtYGet: props => option(string);\n  let pointsAtY: props => option(string);\n  let pointsAtXGet: props => option(string);\n  let pointsAtX: props => option(string);\n  let pointsGet: props => option(string);\n  let points: props => option(string);\n  let pointerEventsGet: props => option(string);\n  let pointerEvents: props => option(string);\n  let patternUnitsGet: props => option(string);\n  let patternUnits: props => option(string);\n  let patternTransformGet: props => option(string);\n  let patternTransform: props => option(string);\n  let patternContentUnitsGet: props => option(string);\n  let patternContentUnits: props => option(string);\n  let pathLengthGet: props => option(string);\n  let pathLength: props => option(string);\n  let panose1Get: props => option(string);\n  let panose1: props => option(string);\n  let paintOrderGet: props => option(string);\n  let paintOrder: props => option(string);\n  let overlineThicknessGet: props => option(string);\n  let overlineThickness: props => option(string);\n  let overlinePositionGet: props => option(string);\n  let overlinePosition: props => option(string);\n  let overflowYGet: props => option(string);\n  let overflowY: props => option(string);\n  let overflowXGet: props => option(string);\n  let overflowX: props => option(string);\n  let overflowGet: props => option(string);\n  let overflow: props => option(string);\n  let originGet: props => option(string);\n  let origin: props => option(string);\n  let orientationGet: props => option(string);\n  let orientation: props => option(string);\n  let orientGet: props => option(string);\n  let orient: props => option(string);\n  let orderGet: props => option(string);\n  let order: props => option(string);\n  let operatorGet: props => option(string);\n  let operator: props => option(string);\n  let opacityGet: props => option(string);\n  let opacity: props => option(string);\n  let offsetGet: props => option(string);\n  let offset: props => option(string);\n  let numOctavesGet: props => option(string);\n  let numOctaves: props => option(string);\n  let modeGet: props => option(string);\n  let mode: props => option(string);\n  let mathematicalGet: props => option(string);\n  let mathematical: props => option(string);\n  let maskUnitsGet: props => option(string);\n  let maskUnits: props => option(string);\n  let maskContentUnitsGet: props => option(string);\n  let maskContentUnits: props => option(string);\n  let maskGet: props => option(string);\n  let mask: props => option(string);\n  let markerWidthGet: props => option(string);\n  let markerWidth: props => option(string);\n  let markerUnitsGet: props => option(string);\n  let markerUnits: props => option(string);\n  let markerStartGet: props => option(string);\n  let markerStart: props => option(string);\n  let markerMidGet: props => option(string);\n  let markerMid: props => option(string);\n  let markerHeightGet: props => option(string);\n  let markerHeight: props => option(string);\n  let markerEndGet: props => option(string);\n  let markerEnd: props => option(string);\n  let localGet: props => option(string);\n  let local: props => option(string);\n  let limitingConeAngleGet: props => option(string);\n  let limitingConeAngle: props => option(string);\n  let lightingColorGet: props => option(string);\n  let lightingColor: props => option(string);\n  let letterSpacingGet: props => option(string);\n  let letterSpacing: props => option(string);\n  let lengthAdjustGet: props => option(string);\n  let lengthAdjust: props => option(string);\n  let keyTimesGet: props => option(string);\n  let keyTimes: props => option(string);\n  let keySplinesGet: props => option(string);\n  let keySplines: props => option(string);\n  let keyPointsGet: props => option(string);\n  let keyPoints: props => option(string);\n  let kerningGet: props => option(string);\n  let kerning: props => option(string);\n  let kernelUnitLengthGet: props => option(string);\n  let kernelUnitLength: props => option(string);\n  let kernelMatrixGet: props => option(string);\n  let kernelMatrix: props => option(string);\n  let k4Get: props => option(string);\n  let k4: props => option(string);\n  let k3Get: props => option(string);\n  let k3: props => option(string);\n  let k2Get: props => option(string);\n  let k2: props => option(string);\n  let k1Get: props => option(string);\n  let k1: props => option(string);\n  let kGet: props => option(string);\n  let k: props => option(string);\n  let interceptGet: props => option(string);\n  let intercept: props => option(string);\n  let in2Get: props => option(string);\n  let in2: props => option(string);\n  let in_Get: props => option(string);\n  let in_: props => option(string);\n  let imageRenderingGet: props => option(string);\n  let imageRendering: props => option(string);\n  let ideographicGet: props => option(string);\n  let ideographic: props => option(string);\n  let horizOriginXGet: props => option(string);\n  let horizOriginX: props => option(string);\n  let horizAdvXGet: props => option(string);\n  let horizAdvX: props => option(string);\n  let hangingGet: props => option(string);\n  let hanging: props => option(string);\n  let gradientUnitsGet: props => option(string);\n  let gradientUnits: props => option(string);\n  let gradientTransformGet: props => option(string);\n  let gradientTransform: props => option(string);\n  let glyphRefGet: props => option(string);\n  let glyphRef: props => option(string);\n  let glyphOrientationVerticalGet: props => option(string);\n  let glyphOrientationVertical: props => option(string);\n  let glyphOrientationHorizontalGet: props => option(string);\n  let glyphOrientationHorizontal: props => option(string);\n  let glyphNameGet: props => option(string);\n  let glyphName: props => option(string);\n  let g2Get: props => option(string);\n  let g2: props => option(string);\n  let g1Get: props => option(string);\n  let g1: props => option(string);\n  let fyGet: props => option(string);\n  let fy: props => option(string);\n  let fxGet: props => option(string);\n  let fx: props => option(string);\n  let fromGet: props => option(string);\n  let from: props => option(string);\n  let fomatGet: props => option(string);\n  let fomat: props => option(string);\n  let fontWeightGet: props => option(string);\n  let fontWeight: props => option(string);\n  let fontVariantGet: props => option(string);\n  let fontVariant: props => option(string);\n  let fontStyleGet: props => option(string);\n  let fontStyle: props => option(string);\n  let fontStretchGet: props => option(string);\n  let fontStretch: props => option(string);\n  let fontSizeAdjustGet: props => option(string);\n  let fontSizeAdjust: props => option(string);\n  let fontSizeGet: props => option(string);\n  let fontSize: props => option(string);\n  let fontFamilyGet: props => option(string);\n  let fontFamily: props => option(string);\n  let focusableGet: props => option(string);\n  let focusable: props => option(string);\n  let floodOpacityGet: props => option(string);\n  let floodOpacity: props => option(string);\n  let floodColorGet: props => option(string);\n  let floodColor: props => option(string);\n  let filterUnitsGet: props => option(string);\n  let filterUnits: props => option(string);\n  let filterResGet: props => option(string);\n  let filterRes: props => option(string);\n  let filterGet: props => option(string);\n  let filter: props => option(string);\n  let fillRuleGet: props => option(string);\n  let fillRule: props => option(string);\n  let fillOpacityGet: props => option(string);\n  let fillOpacity: props => option(string);\n  let fillGet: props => option(string);\n  let fill: props => option(string);\n  let externalResourcesRequiredGet: props => option(string);\n  let externalResourcesRequired: props => option(string);\n  let exponentGet: props => option(string);\n  let exponent: props => option(string);\n  let end_Get: props => option(string);\n  let end_: props => option(string);\n  let enableBackgroundGet: props => option(string);\n  let enableBackground: props => option(string);\n  let elevationGet: props => option(string);\n  let elevation: props => option(string);\n  let edgeModeGet: props => option(string);\n  let edgeMode: props => option(string);\n  let dyGet: props => option(string);\n  let dy: props => option(string);\n  let dxGet: props => option(string);\n  let dx: props => option(string);\n  let durGet: props => option(string);\n  let dur: props => option(string);\n  let dominantBaselineGet: props => option(string);\n  let dominantBaseline: props => option(string);\n  let divisorGet: props => option(string);\n  let divisor: props => option(string);\n  let displayGet: props => option(string);\n  let display: props => option(string);\n  let directionGet: props => option(string);\n  let direction: props => option(string);\n  let diffuseConstantGet: props => option(string);\n  let diffuseConstant: props => option(string);\n  let descentGet: props => option(string);\n  let descent: props => option(string);\n  let decelerateGet: props => option(string);\n  let decelerate: props => option(string);\n  let dGet: props => option(string);\n  let d: props => option(string);\n  let cyGet: props => option(string);\n  let cy: props => option(string);\n  let cxGet: props => option(string);\n  let cx: props => option(string);\n  let cursorGet: props => option(string);\n  let cursor: props => option(string);\n  let contentStyleTypeGet: props => option(string);\n  let contentStyleType: props => option(string);\n  let contentScriptTypeGet: props => option(string);\n  let contentScriptType: props => option(string);\n  let colorRenderingGet: props => option(string);\n  let colorRendering: props => option(string);\n  let colorProfileGet: props => option(string);\n  let colorProfile: props => option(string);\n  let colorInterpolationFiltersGet: props => option(string);\n  let colorInterpolationFilters: props => option(string);\n  let colorInterpolationGet: props => option(string);\n  let colorInterpolation: props => option(string);\n  let clipRuleGet: props => option(string);\n  let clipRule: props => option(string);\n  let clipPathUnitsGet: props => option(string);\n  let clipPathUnits: props => option(string);\n  let clipPathGet: props => option(string);\n  let clipPath: props => option(string);\n  let clipGet: props => option(string);\n  let clip: props => option(string);\n  let capHeightGet: props => option(string);\n  let capHeight: props => option(string);\n  let calcModeGet: props => option(string);\n  let calcMode: props => option(string);\n  let byGet: props => option(string);\n  let by: props => option(string);\n  let biasGet: props => option(string);\n  let bias: props => option(string);\n  let begin_Get: props => option(string);\n  let begin_: props => option(string);\n  let bboxGet: props => option(string);\n  let bbox: props => option(string);\n  let baselineShiftGet: props => option(string);\n  let baselineShift: props => option(string);\n  let baseProfileGet: props => option(string);\n  let baseProfile: props => option(string);\n  let baseFrequencyGet: props => option(string);\n  let baseFrequency: props => option(string);\n  let azimuthGet: props => option(string);\n  let azimuth: props => option(string);\n  let autoReverseGet: props => option(string);\n  let autoReverse: props => option(string);\n  let attributeTypeGet: props => option(string);\n  let attributeType: props => option(string);\n  let attributeNameGet: props => option(string);\n  let attributeName: props => option(string);\n  let ascentGet: props => option(string);\n  let ascent: props => option(string);\n  let arabicFormGet: props => option(string);\n  let arabicForm: props => option(string);\n  let amplitudeGet: props => option(string);\n  let amplitude: props => option(string);\n  let alphabeticGet: props => option(string);\n  let alphabetic: props => option(string);\n  let allowReorderGet: props => option(string);\n  let allowReorder: props => option(string);\n  let alignmentBaselineGet: props => option(string);\n  let alignmentBaseline: props => option(string);\n  let additiveGet: props => option(string);\n  let additive: props => option(string);\n  let accumulateGet: props => option(string);\n  let accumulate: props => option(string);\n  let accentHeightGet: props => option(string);\n  let accentHeight: props => option(string);\n  let onTransitionEndGet: props => option(\n  ReactEvent.Transition.t => unit\n);\n  let onTransitionEnd: props => option(\n  ReactEvent.Transition.t => unit\n);\n  let onAnimationIterationGet: props => option(\n  ReactEvent.Animation.t => unit\n);\n  let onAnimationIteration: props => option(\n  ReactEvent.Animation.t => unit\n);\n  let onAnimationEndGet: props => option(\n  ReactEvent.Animation.t => unit\n);\n  let onAnimationEnd: props => option(\n  ReactEvent.Animation.t => unit\n);\n  let onAnimationStartGet: props => option(\n  ReactEvent.Animation.t => unit\n);\n  let onAnimationStart: props => option(\n  ReactEvent.Animation.t => unit\n);\n  let onLoadGet: props => option(\n  ReactEvent.Image.t => unit\n);\n  let onLoad: props => option(\n  ReactEvent.Image.t => unit\n);\n  let onWaitingGet: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onWaiting: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onVolumeChangeGet: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onVolumeChange: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onTimeUpdateGet: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onTimeUpdate: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onSuspendGet: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onSuspend: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onStalledGet: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onStalled: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onSeekingGet: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onSeeking: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onSeekedGet: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onSeeked: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onRateChangeGet: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onRateChange: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onProgressGet: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onProgress: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onPlayingGet: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onPlaying: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onPlayGet: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onPlay: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onPauseGet: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onPause: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onLoadStartGet: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onLoadStart: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onLoadedMetadataGet: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onLoadedMetadata: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onLoadedDataGet: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onLoadedData: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onErrorGet: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onError: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onEndedGet: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onEnded: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onEncrypetdGet: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onEncrypetd: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onEmptiedGet: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onEmptied: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onDurationChangeGet: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onDurationChange: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onCanPlayThroughGet: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onCanPlayThrough: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onCanPlayGet: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onCanPlay: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onAbortGet: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onAbort: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onWheelGet: props => option(\n  ReactEvent.Wheel.t => unit\n);\n  let onWheel: props => option(\n  ReactEvent.Wheel.t => unit\n);\n  let onScrollGet: props => option(ReactEvent.UI.t => unit);\n  let onScroll: props => option(ReactEvent.UI.t => unit);\n  let onTouchStartGet: props => option(\n  ReactEvent.Touch.t => unit\n);\n  let onTouchStart: props => option(\n  ReactEvent.Touch.t => unit\n);\n  let onTouchMoveGet: props => option(\n  ReactEvent.Touch.t => unit\n);\n  let onTouchMove: props => option(\n  ReactEvent.Touch.t => unit\n);\n  let onTouchEndGet: props => option(\n  ReactEvent.Touch.t => unit\n);\n  let onTouchEnd: props => option(\n  ReactEvent.Touch.t => unit\n);\n  let onTouchCancelGet: props => option(\n  ReactEvent.Touch.t => unit\n);\n  let onTouchCancel: props => option(\n  ReactEvent.Touch.t => unit\n);\n  let onSelectGet: props => option(\n  ReactEvent.Selection.t => unit\n);\n  let onSelect: props => option(\n  ReactEvent.Selection.t => unit\n);\n  let onMouseUpGet: props => option(\n  ReactEvent.Mouse.t => unit\n);\n  let onMouseUp: props => option(\n  ReactEvent.Mouse.t => unit\n);\n  let onMouseOverGet: props => option(\n  ReactEvent.Mouse.t => unit\n);\n  let onMouseOver: props => option(\n  ReactEvent.Mouse.t => unit\n);\n  let onMouseOutGet: props => option(\n  ReactEvent.Mouse.t => unit\n);\n  let onMouseOut: props => option(\n  ReactEvent.Mouse.t => unit\n);\n  let onMouseMoveGet: props => option(\n  ReactEvent.Mouse.t => unit\n);\n  let onMouseMove: props => option(\n  ReactEvent.Mouse.t => unit\n);\n  let onMouseLeaveGet: props => option(\n  ReactEvent.Mouse.t => unit\n);\n  let onMouseLeave: props => option(\n  ReactEvent.Mouse.t => unit\n);\n  let onMouseEnterGet: props => option(\n  ReactEvent.Mouse.t => unit\n);\n  let onMouseEnter: props => option(\n  ReactEvent.Mouse.t => unit\n);\n  let onMouseDownGet: props => option(\n  ReactEvent.Mouse.t => unit\n);\n  let onMouseDown: props => option(\n  ReactEvent.Mouse.t => unit\n);\n  let onDropGet: props => option(\n  ReactEvent.Mouse.t => unit\n);\n  let onDrop: props => option(\n  ReactEvent.Mouse.t => unit\n);\n  let onDragStartGet: props => option(\n  ReactEvent.Mouse.t => unit\n);\n  let onDragStart: props => option(\n  ReactEvent.Mouse.t => unit\n);\n  let onDragOverGet: props => option(\n  ReactEvent.Mouse.t => unit\n);\n  let onDragOver: props => option(\n  ReactEvent.Mouse.t => unit\n);\n  let onDragLeaveGet: props => option(\n  ReactEvent.Mouse.t => unit\n);\n  let onDragLeave: props => option(\n  ReactEvent.Mouse.t => unit\n);\n  let onDragExitGet: props => option(\n  ReactEvent.Mouse.t => unit\n);\n  let onDragExit: props => option(\n  ReactEvent.Mouse.t => unit\n);\n  let onDragEnterGet: props => option(\n  ReactEvent.Mouse.t => unit\n);\n  let onDragEnter: props => option(\n  ReactEvent.Mouse.t => unit\n);\n  let onDragEndGet: props => option(\n  ReactEvent.Mouse.t => unit\n);\n  let onDragEnd: props => option(\n  ReactEvent.Mouse.t => unit\n);\n  let onDragGet: props => option(\n  ReactEvent.Mouse.t => unit\n);\n  let onDrag: props => option(\n  ReactEvent.Mouse.t => unit\n);\n  let onDoubleClickGet: props => option(\n  ReactEvent.Mouse.t => unit\n);\n  let onDoubleClick: props => option(\n  ReactEvent.Mouse.t => unit\n);\n  let onContextMenuGet: props => option(\n  ReactEvent.Mouse.t => unit\n);\n  let onContextMenu: props => option(\n  ReactEvent.Mouse.t => unit\n);\n  let onClickGet: props => option(\n  ReactEvent.Mouse.t => unit\n);\n  let onClick: props => option(\n  ReactEvent.Mouse.t => unit\n);\n  let onSubmitGet: props => option(\n  ReactEvent.Form.t => unit\n);\n  let onSubmit: props => option(\n  ReactEvent.Form.t => unit\n);\n  let onInputGet: props => option(\n  ReactEvent.Form.t => unit\n);\n  let onInput: props => option(\n  ReactEvent.Form.t => unit\n);\n  let onChangeGet: props => option(\n  ReactEvent.Form.t => unit\n);\n  let onChange: props => option(\n  ReactEvent.Form.t => unit\n);\n  let onBlurGet: props => option(\n  ReactEvent.Focus.t => unit\n);\n  let onBlur: props => option(\n  ReactEvent.Focus.t => unit\n);\n  let onFocusGet: props => option(\n  ReactEvent.Focus.t => unit\n);\n  let onFocus: props => option(\n  ReactEvent.Focus.t => unit\n);\n  let onKeyUpGet: props => option(\n  ReactEvent.Keyboard.t => unit\n);\n  let onKeyUp: props => option(\n  ReactEvent.Keyboard.t => unit\n);\n  let onKeyPressGet: props => option(\n  ReactEvent.Keyboard.t => unit\n);\n  let onKeyPress: props => option(\n  ReactEvent.Keyboard.t => unit\n);\n  let onKeyDownGet: props => option(\n  ReactEvent.Keyboard.t => unit\n);\n  let onKeyDown: props => option(\n  ReactEvent.Keyboard.t => unit\n);\n  let onCompositionUpdateGet: props => option(\n  ReactEvent.Composition.t => unit\n);\n  let onCompositionUpdate: props => option(\n  ReactEvent.Composition.t => unit\n);\n  let onCompositionStartGet: props => option(\n  ReactEvent.Composition.t => unit\n);\n  let onCompositionStart: props => option(\n  ReactEvent.Composition.t => unit\n);\n  let onCompositionEndGet: props => option(\n  ReactEvent.Composition.t => unit\n);\n  let onCompositionEnd: props => option(\n  ReactEvent.Composition.t => unit\n);\n  let onPasteGet: props => option(\n  ReactEvent.Clipboard.t => unit\n);\n  let onPaste: props => option(\n  ReactEvent.Clipboard.t => unit\n);\n  let onCutGet: props => option(\n  ReactEvent.Clipboard.t => unit\n);\n  let onCut: props => option(\n  ReactEvent.Clipboard.t => unit\n);\n  let onCopyGet: props => option(\n  ReactEvent.Clipboard.t => unit\n);\n  let onCopy: props => option(\n  ReactEvent.Clipboard.t => unit\n);\n  let wrapGet: props => option(string);\n  let wrap: props => option(string);\n  let widthGet: props => option(string);\n  let width: props => option(string);\n  let valueGet: props => option(string);\n  let value: props => option(string);\n  let useMapGet: props => option(string);\n  let useMap: props => option(string);\n  let type_Get: props => option(string);\n  let type_: props => option(string);\n  let targetGet: props => option(string);\n  let target: props => option(string);\n  let summaryGet: props => option(string);\n  let summary: props => option(string);\n  let stepGet: props => option(float);\n  let step: props => option(float);\n  let startGet: props => option(int);\n  let start: props => option(int);\n  let srcSetGet: props => option(string);\n  let srcSet: props => option(string);\n  let srcLangGet: props => option(string);\n  let srcLang: props => option(string);\n  let srcDocGet: props => option(string);\n  let srcDoc: props => option(string);\n  let srcGet: props => option(string);\n  let src: props => option(string);\n  let spanGet: props => option(int);\n  let span: props => option(int);\n  let sizesGet: props => option(string);\n  let sizes: props => option(string);\n  let sizeGet: props => option(int);\n  let size: props => option(int);\n  let shapeGet: props => option(string);\n  let shape: props => option(string);\n  let selectedGet: props => option(bool);\n  let selected: props => option(bool);\n  let scrollingGet: props => option(string);\n  let scrolling: props => option(string);\n  let scopedGet: props => option(bool);\n  let scoped: props => option(bool);\n  let scopeGet: props => option(string);\n  let scope: props => option(string);\n  let sandboxGet: props => option(string);\n  let sandbox: props => option(string);\n  let rowSpanGet: props => option(int);\n  let rowSpan: props => option(int);\n  let rowsGet: props => option(int);\n  let rows: props => option(int);\n  let reversedGet: props => option(bool);\n  let reversed: props => option(bool);\n  let requiredGet: props => option(bool);\n  let required: props => option(bool);\n  let relGet: props => option(string);\n  let rel: props => option(string);\n  let readOnlyGet: props => option(bool);\n  let readOnly: props => option(bool);\n  let radioGroupGet: props => option(string);\n  let radioGroup: props => option(string);\n  let preloadGet: props => option(string);\n  let preload: props => option(string);\n  let posterGet: props => option(string);\n  let poster: props => option(string);\n  let placeholderGet: props => option(string);\n  let placeholder: props => option(string);\n  let patternGet: props => option(string);\n  let pattern: props => option(string);\n  let optimumGet: props => option(int);\n  let optimum: props => option(int);\n  let open_Get: props => option(bool);\n  let open_: props => option(bool);\n  let noValidateGet: props => option(bool);\n  let noValidate: props => option(bool);\n  let nonceGet: props => option(string);\n  let nonce: props => option(string);\n  let nameGet: props => option(string);\n  let name: props => option(string);\n  let mutedGet: props => option(bool);\n  let muted: props => option(bool);\n  let multipleGet: props => option(bool);\n  let multiple: props => option(bool);\n  let minLengthGet: props => option(int);\n  let minLength: props => option(int);\n  let minGet: props => option(int);\n  let min: props => option(int);\n  let methodGet: props => option(string);\n  let method: props => option(string);\n  let mediaGroupGet: props => option(string);\n  let mediaGroup: props => option(string);\n  let mediaGet: props => option(string);\n  let media: props => option(string);\n  let maxLengthGet: props => option(int);\n  let maxLength: props => option(int);\n  let maxGet: props => option(string);\n  let max: props => option(string);\n  let manifestGet: props => option(string);\n  let manifest: props => option(string);\n  let lowGet: props => option(int);\n  let low: props => option(int);\n  let loopGet: props => option(bool);\n  let loop: props => option(bool);\n  let listGet: props => option(string);\n  let list: props => option(string);\n  let labelGet: props => option(string);\n  let label: props => option(string);\n  let kindGet: props => option(string);\n  let kind: props => option(string);\n  let keyTypeGet: props => option(string);\n  let keyType: props => option(string);\n  let integrityGet: props => option(string);\n  let integrity: props => option(string);\n  let inputModeGet: props => option(string);\n  let inputMode: props => option(string);\n  let iconGet: props => option(string);\n  let icon: props => option(string);\n  let httpEquivGet: props => option(string);\n  let httpEquiv: props => option(string);\n  let htmlForGet: props => option(string);\n  let htmlFor: props => option(string);\n  let hrefLangGet: props => option(string);\n  let hrefLang: props => option(string);\n  let hrefGet: props => option(string);\n  let href: props => option(string);\n  let highGet: props => option(int);\n  let high: props => option(int);\n  let heightGet: props => option(string);\n  let height: props => option(string);\n  let headersGet: props => option(string);\n  let headers: props => option(string);\n  let formMethodGet: props => option(string);\n  let formMethod: props => option(string);\n  let formTargetGet: props => option(string);\n  let formTarget: props => option(string);\n  let formActionGet: props => option(string);\n  let formAction: props => option(string);\n  let formGet: props => option(string);\n  let form: props => option(string);\n  let encTypeGet: props => option(string);\n  let encType: props => option(string);\n  let downloadGet: props => option(string);\n  let download: props => option(string);\n  let disabledGet: props => option(bool);\n  let disabled: props => option(bool);\n  let deferGet: props => option(bool);\n  let defer: props => option(bool);\n  let defaultGet: props => option(bool);\n  let default: props => option(bool);\n  let dateTimeGet: props => option(string);\n  let dateTime: props => option(string);\n  let dataGet: props => option(string);\n  let data: props => option(string);\n  let coordsGet: props => option(string);\n  let coords: props => option(string);\n  let controlsGet: props => option(bool);\n  let controls: props => option(bool);\n  let contentGet: props => option(string);\n  let content: props => option(string);\n  let colSpanGet: props => option(int);\n  let colSpan: props => option(int);\n  let colsGet: props => option(int);\n  let cols: props => option(int);\n  let crossoriginGet: props => option(bool);\n  let crossorigin: props => option(bool);\n  let citeGet: props => option(string);\n  let cite: props => option(string);\n  let checkedGet: props => option(bool);\n  let checked: props => option(bool);\n  let charSetGet: props => option(string);\n  let charSet: props => option(string);\n  let challengeGet: props => option(string);\n  let challenge: props => option(string);\n  let autoPlayGet: props => option(bool);\n  let autoPlay: props => option(bool);\n  let autoFocusGet: props => option(bool);\n  let autoFocus: props => option(bool);\n  let autoCompleteGet: props => option(string);\n  let autoComplete: props => option(string);\n  let asyncGet: props => option(bool);\n  let async: props => option(bool);\n  let altGet: props => option(string);\n  let alt: props => option(string);\n  let allowFullScreenGet: props => option(bool);\n  let allowFullScreen: props => option(bool);\n  let actionGet: props => option(string);\n  let action: props => option(string);\n  let acceptCharsetGet: props => option(string);\n  let acceptCharset: props => option(string);\n  let acceptGet: props => option(string);\n  let accept: props => option(string);\n  let itemTypeGet: props => option(string);\n  let itemType: props => option(string);\n  let itemScopeGet: props => option(bool);\n  let itemScope: props => option(bool);\n  let itemRefGet: props => option(string);\n  let itemRef: props => option(string);\n  let itemPropGet: props => option(string);\n  let itemProp: props => option(string);\n  let itemIDGet: props => option(string);\n  let itemID: props => option(string);\n  let titleGet: props => option(string);\n  let title: props => option(string);\n  let tabIndexGet: props => option(int);\n  let tabIndex: props => option(int);\n  let spellCheckGet: props => option(bool);\n  let spellCheck: props => option(bool);\n  let styleGet: props => option(style);\n  let style: props => option(style);\n  let roleGet: props => option(string);\n  let role: props => option(string);\n  let langGet: props => option(string);\n  let lang: props => option(string);\n  let idGet: props => option(string);\n  let id: props => option(string);\n  let hiddenGet: props => option(bool);\n  let hidden: props => option(bool);\n  let draggableGet: props => option(bool);\n  let draggable: props => option(bool);\n  let dirGet: props => option(string);\n  let dir: props => option(string);\n  let contextMenuGet: props => option(string);\n  let contextMenu: props => option(string);\n  let contentEditableGet: props => option(bool);\n  let contentEditable: props => option(bool);\n  let classNameGet: props => option(string);\n  let className: props => option(string);\n  let accessKeyGet: props => option(string);\n  let accessKey: props => option(string);\n  let defaultValueGet: props => option(string);\n  let defaultValue: props => option(string);\n  let defaultCheckedGet: props => option(bool);\n  let defaultChecked: props => option(bool);\n  let ariaSetsizeGet: props => option(int);\n  let ariaSetsize: props => option(int);\n  let ariaRowspanGet: props => option(int);\n  let ariaRowspan: props => option(int);\n  let ariaRowindexGet: props => option(int);\n  let ariaRowindex: props => option(int);\n  let ariaRowcountGet: props => option(int);\n  let ariaRowcount: props => option(int);\n  let ariaPosinsetGet: props => option(int);\n  let ariaPosinset: props => option(int);\n  let ariaOwnsGet: props => option(string);\n  let ariaOwns: props => option(string);\n  let ariaLabelledbyGet: props => option(string);\n  let ariaLabelledby: props => option(string);\n  let ariaFlowtoGet: props => option(string);\n  let ariaFlowto: props => option(string);\n  let ariaErrormessageGet: props => option(string);\n  let ariaErrormessage: props => option(string);\n  let ariaDescribedbyGet: props => option(string);\n  let ariaDescribedby: props => option(string);\n  let ariaControlsGet: props => option(string);\n  let ariaControls: props => option(string);\n  let ariaColspanGet: props => option(int);\n  let ariaColspan: props => option(int);\n  let ariaColindexGet: props => option(int);\n  let ariaColindex: props => option(int);\n  let ariaColcountGet: props => option(int);\n  let ariaColcount: props => option(int);\n  let ariaActivedescendantGet: props => option(string);\n  let ariaActivedescendant: props => option(string);\n  let ariaGrabbedGet: props => option(bool);\n  let ariaGrabbed: props => option(bool);\n  let ariaRelevantGet: props => option(string);\n  let ariaRelevant: props => option(string);\n  let ariaBusyGet: props => option(bool);\n  let ariaBusy: props => option(bool);\n  let ariaAtomicGet: props => option(bool);\n  let ariaAtomic: props => option(bool);\n  let ariaValuetextGet: props => option(string);\n  let ariaValuetext: props => option(string);\n  let ariaValuenowGet: props => option(float);\n  let ariaValuenow: props => option(float);\n  let ariaValueminGet: props => option(float);\n  let ariaValuemin: props => option(float);\n  let ariaValuemaxGet: props => option(float);\n  let ariaValuemax: props => option(float);\n  let ariaSortGet: props => option(string);\n  let ariaSort: props => option(string);\n  let ariaSelectedGet: props => option(bool);\n  let ariaSelected: props => option(bool);\n  let ariaRequiredGet: props => option(bool);\n  let ariaRequired: props => option(bool);\n  let ariaReadonlyGet: props => option(bool);\n  let ariaReadonly: props => option(bool);\n  let ariaPlaceholderGet: props => option(string);\n  let ariaPlaceholder: props => option(string);\n  let ariaMultiselectableGet: props => option(bool);\n  let ariaMultiselectable: props => option(bool);\n  let ariaMultilineGet: props => option(bool);\n  let ariaMultiline: props => option(bool);\n  let ariaModalGet: props => option(bool);\n  let ariaModal: props => option(bool);\n  let ariaLevelGet: props => option(int);\n  let ariaLevel: props => option(int);\n  let ariaExpandedGet: props => option(bool);\n  let ariaExpanded: props => option(bool);\n  let ariaRoledescriptionGet: props => option(string);\n  let ariaRoledescription: props => option(string);\n  let ariaLabelGet: props => option(string);\n  let ariaLabel: props => option(string);\n  let ariaKeyshortcutsGet: props => option(string);\n  let ariaKeyshortcuts: props => option(string);\n  let ariaHiddenGet: props => option(bool);\n  let ariaHidden: props => option(bool);\n  let ariaDisabledGet: props => option(bool);\n  let ariaDisabled: props => option(bool);\n  let ariaDetailsGet: props => option(string);\n  let ariaDetails: props => option(string);\n  let refGet: props => option(\n  Js.nullable(Dom.element) => unit\n);\n  let ref: props => option(\n  Js.nullable(Dom.element) => unit\n);\n  let keyGet: props => option(string);\n  let key: props => option(string);\n  let props: (\n  ~?key: option(string),\n  ~?ref: option(\n    Js.nullable(Dom.element) => unit\n  ),\n  ~?ariaDetails: option(string),\n  ~?ariaDisabled: option(bool),\n  ~?ariaHidden: option(bool),\n  ~?ariaKeyshortcuts: option(string),\n  ~?ariaLabel: option(string),\n  ~?ariaRoledescription: option(string),\n  ~?ariaExpanded: option(bool),\n  ~?ariaLevel: option(int),\n  ~?ariaModal: option(bool),\n  ~?ariaMultiline: option(bool),\n  ~?ariaMultiselectable: option(bool),\n  ~?ariaPlaceholder: option(string),\n  ~?ariaReadonly: option(bool),\n  ~?ariaRequired: option(bool),\n  ~?ariaSelected: option(bool),\n  ~?ariaSort: option(string),\n  ~?ariaValuemax: option(float),\n  ~?ariaValuemin: option(float),\n  ~?ariaValuenow: option(float),\n  ~?ariaValuetext: option(string),\n  ~?ariaAtomic: option(bool),\n  ~?ariaBusy: option(bool),\n  ~?ariaRelevant: option(string),\n  ~?ariaGrabbed: option(bool),\n  ~?ariaActivedescendant: option(\n    string\n  ),\n  ~?ariaColcount: option(int),\n  ~?ariaColindex: option(int),\n  ~?ariaColspan: option(int),\n  ~?ariaControls: option(string),\n  ~?ariaDescribedby: option(string),\n  ~?ariaErrormessage: option(string),\n  ~?ariaFlowto: option(string),\n  ~?ariaLabelledby: option(string),\n  ~?ariaOwns: option(string),\n  ~?ariaPosinset: option(int),\n  ~?ariaRowcount: option(int),\n  ~?ariaRowindex: option(int),\n  ~?ariaRowspan: option(int),\n  ~?ariaSetsize: option(int),\n  ~?defaultChecked: option(bool),\n  ~?defaultValue: option(string),\n  ~?accessKey: option(string),\n  ~?className: option(string),\n  ~?contentEditable: option(bool),\n  ~?contextMenu: option(string),\n  ~?dir: option(string),\n  ~?draggable: option(bool),\n  ~?hidden: option(bool),\n  ~?id: option(string),\n  ~?lang: option(string),\n  ~?role: option(string),\n  ~?style: option(style),\n  ~?spellCheck: option(bool),\n  ~?tabIndex: option(int),\n  ~?title: option(string),\n  ~?itemID: option(string),\n  ~?itemProp: option(string),\n  ~?itemRef: option(string),\n  ~?itemScope: option(bool),\n  ~?itemType: option(string),\n  ~?accept: option(string),\n  ~?acceptCharset: option(string),\n  ~?action: option(string),\n  ~?allowFullScreen: option(bool),\n  ~?alt: option(string),\n  ~?async: option(bool),\n  ~?autoComplete: option(string),\n  ~?autoFocus: option(bool),\n  ~?autoPlay: option(bool),\n  ~?challenge: option(string),\n  ~?charSet: option(string),\n  ~?checked: option(bool),\n  ~?cite: option(string),\n  ~?crossorigin: option(bool),\n  ~?cols: option(int),\n  ~?colSpan: option(int),\n  ~?content: option(string),\n  ~?controls: option(bool),\n  ~?coords: option(string),\n  ~?data: option(string),\n  ~?dateTime: option(string),\n  ~?default: option(bool),\n  ~?defer: option(bool),\n  ~?disabled: option(bool),\n  ~?download: option(string),\n  ~?encType: option(string),\n  ~?form: option(string),\n  ~?formAction: option(string),\n  ~?formTarget: option(string),\n  ~?formMethod: option(string),\n  ~?headers: option(string),\n  ~?height: option(string),\n  ~?high: option(int),\n  ~?href: option(string),\n  ~?hrefLang: option(string),\n  ~?htmlFor: option(string),\n  ~?httpEquiv: option(string),\n  ~?icon: option(string),\n  ~?inputMode: option(string),\n  ~?integrity: option(string),\n  ~?keyType: option(string),\n  ~?kind: option(string),\n  ~?label: option(string),\n  ~?list: option(string),\n  ~?loop: option(bool),\n  ~?low: option(int),\n  ~?manifest: option(string),\n  ~?max: option(string),\n  ~?maxLength: option(int),\n  ~?media: option(string),\n  ~?mediaGroup: option(string),\n  ~?method: option(string),\n  ~?min: option(int),\n  ~?minLength: option(int),\n  ~?multiple: option(bool),\n  ~?muted: option(bool),\n  ~?name: option(string),\n  ~?nonce: option(string),\n  ~?noValidate: option(bool),\n  ~?open_: option(bool),\n  ~?optimum: option(int),\n  ~?pattern: option(string),\n  ~?placeholder: option(string),\n  ~?poster: option(string),\n  ~?preload: option(string),\n  ~?radioGroup: option(string),\n  ~?readOnly: option(bool),\n  ~?rel: option(string),\n  ~?required: option(bool),\n  ~?reversed: option(bool),\n  ~?rows: option(int),\n  ~?rowSpan: option(int),\n  ~?sandbox: option(string),\n  ~?scope: option(string),\n  ~?scoped: option(bool),\n  ~?scrolling: option(string),\n  ~?selected: option(bool),\n  ~?shape: option(string),\n  ~?size: option(int),\n  ~?sizes: option(string),\n  ~?span: option(int),\n  ~?src: option(string),\n  ~?srcDoc: option(string),\n  ~?srcLang: option(string),\n  ~?srcSet: option(string),\n  ~?start: option(int),\n  ~?step: option(float),\n  ~?summary: option(string),\n  ~?target: option(string),\n  ~?type_: option(string),\n  ~?useMap: option(string),\n  ~?value: option(string),\n  ~?width: option(string),\n  ~?wrap: option(string),\n  ~?onCopy: option(\n    ReactEvent.Clipboard.t => unit\n  ),\n  ~?onCut: option(\n    ReactEvent.Clipboard.t => unit\n  ),\n  ~?onPaste: option(\n    ReactEvent.Clipboard.t => unit\n  ),\n  ~?onCompositionEnd: option(\n    ReactEvent.Composition.t => unit\n  ),\n  ~?onCompositionStart: option(\n    ReactEvent.Composition.t => unit\n  ),\n  ~?onCompositionUpdate: option(\n    ReactEvent.Composition.t => unit\n  ),\n  ~?onKeyDown: option(\n    ReactEvent.Keyboard.t => unit\n  ),\n  ~?onKeyPress: option(\n    ReactEvent.Keyboard.t => unit\n  ),\n  ~?onKeyUp: option(\n    ReactEvent.Keyboard.t => unit\n  ),\n  ~?onFocus: option(\n    ReactEvent.Focus.t => unit\n  ),\n  ~?onBlur: option(\n    ReactEvent.Focus.t => unit\n  ),\n  ~?onChange: option(\n    ReactEvent.Form.t => unit\n  ),\n  ~?onInput: option(\n    ReactEvent.Form.t => unit\n  ),\n  ~?onSubmit: option(\n    ReactEvent.Form.t => unit\n  ),\n  ~?onClick: option(\n    ReactEvent.Mouse.t => unit\n  ),\n  ~?onContextMenu: option(\n    ReactEvent.Mouse.t => unit\n  ),\n  ~?onDoubleClick: option(\n    ReactEvent.Mouse.t => unit\n  ),\n  ~?onDrag: option(\n    ReactEvent.Mouse.t => unit\n  ),\n  ~?onDragEnd: option(\n    ReactEvent.Mouse.t => unit\n  ),\n  ~?onDragEnter: option(\n    ReactEvent.Mouse.t => unit\n  ),\n  ~?onDragExit: option(\n    ReactEvent.Mouse.t => unit\n  ),\n  ~?onDragLeave: option(\n    ReactEvent.Mouse.t => unit\n  ),\n  ~?onDragOver: option(\n    ReactEvent.Mouse.t => unit\n  ),\n  ~?onDragStart: option(\n    ReactEvent.Mouse.t => unit\n  ),\n  ~?onDrop: option(\n    ReactEvent.Mouse.t => unit\n  ),\n  ~?onMouseDown: option(\n    ReactEvent.Mouse.t => unit\n  ),\n  ~?onMouseEnter: option(\n    ReactEvent.Mouse.t => unit\n  ),\n  ~?onMouseLeave: option(\n    ReactEvent.Mouse.t => unit\n  ),\n  ~?onMouseMove: option(\n    ReactEvent.Mouse.t => unit\n  ),\n  ~?onMouseOut: option(\n    ReactEvent.Mouse.t => unit\n  ),\n  ~?onMouseOver: option(\n    ReactEvent.Mouse.t => unit\n  ),\n  ~?onMouseUp: option(\n    ReactEvent.Mouse.t => unit\n  ),\n  ~?onSelect: option(\n    ReactEvent.Selection.t => unit\n  ),\n  ~?onTouchCancel: option(\n    ReactEvent.Touch.t => unit\n  ),\n  ~?onTouchEnd: option(\n    ReactEvent.Touch.t => unit\n  ),\n  ~?onTouchMove: option(\n    ReactEvent.Touch.t => unit\n  ),\n  ~?onTouchStart: option(\n    ReactEvent.Touch.t => unit\n  ),\n  ~?onScroll: option(\n    ReactEvent.UI.t => unit\n  ),\n  ~?onWheel: option(\n    ReactEvent.Wheel.t => unit\n  ),\n  ~?onAbort: option(\n    ReactEvent.Media.t => unit\n  ),\n  ~?onCanPlay: option(\n    ReactEvent.Media.t => unit\n  ),\n  ~?onCanPlayThrough: option(\n    ReactEvent.Media.t => unit\n  ),\n  ~?onDurationChange: option(\n    ReactEvent.Media.t => unit\n  ),\n  ~?onEmptied: option(\n    ReactEvent.Media.t => unit\n  ),\n  ~?onEncrypetd: option(\n    ReactEvent.Media.t => unit\n  ),\n  ~?onEnded: option(\n    ReactEvent.Media.t => unit\n  ),\n  ~?onError: option(\n    ReactEvent.Media.t => unit\n  ),\n  ~?onLoadedData: option(\n    ReactEvent.Media.t => unit\n  ),\n  ~?onLoadedMetadata: option(\n    ReactEvent.Media.t => unit\n  ),\n  ~?onLoadStart: option(\n    ReactEvent.Media.t => unit\n  ),\n  ~?onPause: option(\n    ReactEvent.Media.t => unit\n  ),\n  ~?onPlay: option(\n    ReactEvent.Media.t => unit\n  ),\n  ~?onPlaying: option(\n    ReactEvent.Media.t => unit\n  ),\n  ~?onProgress: option(\n    ReactEvent.Media.t => unit\n  ),\n  ~?onRateChange: option(\n    ReactEvent.Media.t => unit\n  ),\n  ~?onSeeked: option(\n    ReactEvent.Media.t => unit\n  ),\n  ~?onSeeking: option(\n    ReactEvent.Media.t => unit\n  ),\n  ~?onStalled: option(\n    ReactEvent.Media.t => unit\n  ),\n  ~?onSuspend: option(\n    ReactEvent.Media.t => unit\n  ),\n  ~?onTimeUpdate: option(\n    ReactEvent.Media.t => unit\n  ),\n  ~?onVolumeChange: option(\n    ReactEvent.Media.t => unit\n  ),\n  ~?onWaiting: option(\n    ReactEvent.Media.t => unit\n  ),\n  ~?onLoad: option(\n    ReactEvent.Image.t => unit\n  ),\n  ~?onAnimationStart: option(\n    ReactEvent.Animation.t => unit\n  ),\n  ~?onAnimationEnd: option(\n    ReactEvent.Animation.t => unit\n  ),\n  ~?onAnimationIteration: option(\n    ReactEvent.Animation.t => unit\n  ),\n  ~?onTransitionEnd: option(\n    ReactEvent.Transition.t => unit\n  ),\n  ~?accentHeight: option(string),\n  ~?accumulate: option(string),\n  ~?additive: option(string),\n  ~?alignmentBaseline: option(string),\n  ~?allowReorder: option(string),\n  ~?alphabetic: option(string),\n  ~?amplitude: option(string),\n  ~?arabicForm: option(string),\n  ~?ascent: option(string),\n  ~?attributeName: option(string),\n  ~?attributeType: option(string),\n  ~?autoReverse: option(string),\n  ~?azimuth: option(string),\n  ~?baseFrequency: option(string),\n  ~?baseProfile: option(string),\n  ~?baselineShift: option(string),\n  ~?bbox: option(string),\n  ~?begin_: option(string),\n  ~?bias: option(string),\n  ~?by: option(string),\n  ~?calcMode: option(string),\n  ~?capHeight: option(string),\n  ~?clip: option(string),\n  ~?clipPath: option(string),\n  ~?clipPathUnits: option(string),\n  ~?clipRule: option(string),\n  ~?colorInterpolation: option(string),\n  ~?colorInterpolationFilters: option(\n    string\n  ),\n  ~?colorProfile: option(string),\n  ~?colorRendering: option(string),\n  ~?contentScriptType: option(string),\n  ~?contentStyleType: option(string),\n  ~?cursor: option(string),\n  ~?cx: option(string),\n  ~?cy: option(string),\n  ~?d: option(string),\n  ~?decelerate: option(string),\n  ~?descent: option(string),\n  ~?diffuseConstant: option(string),\n  ~?direction: option(string),\n  ~?display: option(string),\n  ~?divisor: option(string),\n  ~?dominantBaseline: option(string),\n  ~?dur: option(string),\n  ~?dx: option(string),\n  ~?dy: option(string),\n  ~?edgeMode: option(string),\n  ~?elevation: option(string),\n  ~?enableBackground: option(string),\n  ~?end_: option(string),\n  ~?exponent: option(string),\n  ~?externalResourcesRequired: option(\n    string\n  ),\n  ~?fill: option(string),\n  ~?fillOpacity: option(string),\n  ~?fillRule: option(string),\n  ~?filter: option(string),\n  ~?filterRes: option(string),\n  ~?filterUnits: option(string),\n  ~?floodColor: option(string),\n  ~?floodOpacity: option(string),\n  ~?focusable: option(string),\n  ~?fontFamily: option(string),\n  ~?fontSize: option(string),\n  ~?fontSizeAdjust: option(string),\n  ~?fontStretch: option(string),\n  ~?fontStyle: option(string),\n  ~?fontVariant: option(string),\n  ~?fontWeight: option(string),\n  ~?fomat: option(string),\n  ~?from: option(string),\n  ~?fx: option(string),\n  ~?fy: option(string),\n  ~?g1: option(string),\n  ~?g2: option(string),\n  ~?glyphName: option(string),\n  ~?glyphOrientationHorizontal: option(\n    string\n  ),\n  ~?glyphOrientationVertical: option(\n    string\n  ),\n  ~?glyphRef: option(string),\n  ~?gradientTransform: option(string),\n  ~?gradientUnits: option(string),\n  ~?hanging: option(string),\n  ~?horizAdvX: option(string),\n  ~?horizOriginX: option(string),\n  ~?ideographic: option(string),\n  ~?imageRendering: option(string),\n  ~?in_: option(string),\n  ~?in2: option(string),\n  ~?intercept: option(string),\n  ~?k: option(string),\n  ~?k1: option(string),\n  ~?k2: option(string),\n  ~?k3: option(string),\n  ~?k4: option(string),\n  ~?kernelMatrix: option(string),\n  ~?kernelUnitLength: option(string),\n  ~?kerning: option(string),\n  ~?keyPoints: option(string),\n  ~?keySplines: option(string),\n  ~?keyTimes: option(string),\n  ~?lengthAdjust: option(string),\n  ~?letterSpacing: option(string),\n  ~?lightingColor: option(string),\n  ~?limitingConeAngle: option(string),\n  ~?local: option(string),\n  ~?markerEnd: option(string),\n  ~?markerHeight: option(string),\n  ~?markerMid: option(string),\n  ~?markerStart: option(string),\n  ~?markerUnits: option(string),\n  ~?markerWidth: option(string),\n  ~?mask: option(string),\n  ~?maskContentUnits: option(string),\n  ~?maskUnits: option(string),\n  ~?mathematical: option(string),\n  ~?mode: option(string),\n  ~?numOctaves: option(string),\n  ~?offset: option(string),\n  ~?opacity: option(string),\n  ~?operator: option(string),\n  ~?order: option(string),\n  ~?orient: option(string),\n  ~?orientation: option(string),\n  ~?origin: option(string),\n  ~?overflow: option(string),\n  ~?overflowX: option(string),\n  ~?overflowY: option(string),\n  ~?overlinePosition: option(string),\n  ~?overlineThickness: option(string),\n  ~?paintOrder: option(string),\n  ~?panose1: option(string),\n  ~?pathLength: option(string),\n  ~?patternContentUnits: option(string),\n  ~?patternTransform: option(string),\n  ~?patternUnits: option(string),\n  ~?pointerEvents: option(string),\n  ~?points: option(string),\n  ~?pointsAtX: option(string),\n  ~?pointsAtY: option(string),\n  ~?pointsAtZ: option(string),\n  ~?preserveAlpha: option(string),\n  ~?preserveAspectRatio: option(string),\n  ~?primitiveUnits: option(string),\n  ~?r: option(string),\n  ~?radius: option(string),\n  ~?refX: option(string),\n  ~?refY: option(string),\n  ~?renderingIntent: option(string),\n  ~?repeatCount: option(string),\n  ~?repeatDur: option(string),\n  ~?requiredExtensions: option(string),\n  ~?requiredFeatures: option(string),\n  ~?restart: option(string),\n  ~?result: option(string),\n  ~?rotate: option(string),\n  ~?rx: option(string),\n  ~?ry: option(string),\n  ~?scale: option(string),\n  ~?seed: option(string),\n  ~?shapeRendering: option(string),\n  ~?slope: option(string),\n  ~?spacing: option(string),\n  ~?specularConstant: option(string),\n  ~?specularExponent: option(string),\n  ~?speed: option(string),\n  ~?spreadMethod: option(string),\n  ~?startOffset: option(string),\n  ~?stdDeviation: option(string),\n  ~?stemh: option(string),\n  ~?stemv: option(string),\n  ~?stitchTiles: option(string),\n  ~?stopColor: option(string),\n  ~?stopOpacity: option(string),\n  ~?strikethroughPosition: option(\n    string\n  ),\n  ~?strikethroughThickness: option(\n    string\n  ),\n  ~?string: option(string),\n  ~?stroke: option(string),\n  ~?strokeDasharray: option(string),\n  ~?strokeDashoffset: option(string),\n  ~?strokeLinecap: option(string),\n  ~?strokeLinejoin: option(string),\n  ~?strokeMiterlimit: option(string),\n  ~?strokeOpacity: option(string),\n  ~?strokeWidth: option(string),\n  ~?surfaceScale: option(string),\n  ~?systemLanguage: option(string),\n  ~?tableValues: option(string),\n  ~?targetX: option(string),\n  ~?targetY: option(string),\n  ~?textAnchor: option(string),\n  ~?textDecoration: option(string),\n  ~?textLength: option(string),\n  ~?textRendering: option(string),\n  ~?to_: option(string),\n  ~?transform: option(string),\n  ~?u1: option(string),\n  ~?u2: option(string),\n  ~?underlinePosition: option(string),\n  ~?underlineThickness: option(string),\n  ~?unicode: option(string),\n  ~?unicodeBidi: option(string),\n  ~?unicodeRange: option(string),\n  ~?unitsPerEm: option(string),\n  ~?vAlphabetic: option(string),\n  ~?vHanging: option(string),\n  ~?vIdeographic: option(string),\n  ~?vMathematical: option(string),\n  ~?values: option(string),\n  ~?vectorEffect: option(string),\n  ~?version: option(string),\n  ~?vertAdvX: option(string),\n  ~?vertAdvY: option(string),\n  ~?vertOriginX: option(string),\n  ~?vertOriginY: option(string),\n  ~?viewBox: option(string),\n  ~?viewTarget: option(string),\n  ~?visibility: option(string),\n  ~?widths: option(string),\n  ~?wordSpacing: option(string),\n  ~?writingMode: option(string),\n  ~?x: option(string),\n  ~?x1: option(string),\n  ~?x2: option(string),\n  ~?xChannelSelector: option(string),\n  ~?xHeight: option(string),\n  ~?xlinkActuate: option(string),\n  ~?xlinkArcrole: option(string),\n  ~?xlinkHref: option(string),\n  ~?xlinkRole: option(string),\n  ~?xlinkShow: option(string),\n  ~?xlinkTitle: option(string),\n  ~?xlinkType: option(string),\n  ~?xmlns: option(string),\n  ~?xmlnsXlink: option(string),\n  ~?xmlBase: option(string),\n  ~?xmlLang: option(string),\n  ~?xmlSpace: option(string),\n  ~?y: option(string),\n  ~?y1: option(string),\n  ~?y2: option(string),\n  ~?yChannelSelector: option(string),\n  ~?z: option(string),\n  ~?zoomAndPan: option(string),\n  ~?about: option(string),\n  ~?datatype: option(string),\n  ~?inlist: option(string),\n  ~?prefix: option(string),\n  ~?property: option(string),\n  ~?resource: option(string),\n  ~?typeof: option(string),\n  ~?vocab: option(string),\n  ~?dangerouslySetInnerHTML: option(\n    Js.t(< __html : string >)\n  ),\n  ~?suppressContentEditableWarning: option(\n    bool\n  ),\n  unit\n) => props;\n  type props\n  let objToDOMProps: Js.t(< .. >) => props;\n  type reactDOMProps = props\n  let createElement: (\n  string,\n  ~?props: option(props),\n  array(\n    ReasonReact.reactElement\n  )\n) => ReasonReact.reactElement;\n  let createElementVariadic: (\n  string,\n  ~?props: option(props),\n  array(\n    ReasonReact.reactElement\n  )\n) => ReasonReact.reactElement;\n  module Style;\n}\n```"}}}
Read message 
{"jsonrpc":"2.0","id":99,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re"},"position":{"line":6,"character":2}}}
[server] Got a method textDocument/hover
[server] processing took 0.0190734863281ms
FINDING /home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/reason-react/lib/bs/src/ReactDOMRe.cmt src /home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/reason-react/src/ReactDOMRe.re
Sending response {"id": 99, "jsonrpc": "2.0", "result": {"range": {"start": {"line": 6, "character": -8}, "end": {"line": 6, "character": 2}}, "contents": {"kind": "markdown", "value": "```\nmodule ReactDOMRe = {\n  let render: (\n  ReasonReact.reactElement,\n  Dom.element\n) => unit;\n  let _getElementsByClassName: string => array(Dom.element);\n  let _getElementById: string => option(Dom.element);\n  let renderToElementWithClassName: (\n  ReasonReact.reactElement,\n  string\n) => unit;\n  let renderToElementWithId: (\n  ReasonReact.reactElement,\n  string\n) => unit;\n  let hydrate: (\n  ReasonReact.reactElement,\n  Dom.element\n) => unit;\n  let hydrateToElementWithClassName: (\n  ReasonReact.reactElement,\n  string\n) => unit;\n  let hydrateToElementWithId: (\n  ReasonReact.reactElement,\n  string\n) => unit;\n  let createPortal: (\n  ReasonReact.reactElement,\n  Dom.element\n) => ReasonReact.reactElement;\n  let unmountComponentAtNode: Dom.element => unit;\n  let findDOMNode: ReasonReact.reactRef => Dom.element;\n  let domElementToObj: Dom.element => Js.t(< .. >);\n  type style\n  let suppressContentEditableWarningGet: props => option(bool);\n  let suppressContentEditableWarning: props => option(bool);\n  let dangerouslySetInnerHTMLGet: props => option(\n  Js.t(< __html : string >)\n);\n  let dangerouslySetInnerHTML: props => option(\n  Js.t(< __html : string >)\n);\n  let vocabGet: props => option(string);\n  let vocab: props => option(string);\n  let typeofGet: props => option(string);\n  let typeof: props => option(string);\n  let resourceGet: props => option(string);\n  let resource: props => option(string);\n  let propertyGet: props => option(string);\n  let property: props => option(string);\n  let prefixGet: props => option(string);\n  let prefix: props => option(string);\n  let inlistGet: props => option(string);\n  let inlist: props => option(string);\n  let datatypeGet: props => option(string);\n  let datatype: props => option(string);\n  let aboutGet: props => option(string);\n  let about: props => option(string);\n  let zoomAndPanGet: props => option(string);\n  let zoomAndPan: props => option(string);\n  let zGet: props => option(string);\n  let z: props => option(string);\n  let yChannelSelectorGet: props => option(string);\n  let yChannelSelector: props => option(string);\n  let y2Get: props => option(string);\n  let y2: props => option(string);\n  let y1Get: props => option(string);\n  let y1: props => option(string);\n  let yGet: props => option(string);\n  let y: props => option(string);\n  let xmlSpaceGet: props => option(string);\n  let xmlSpace: props => option(string);\n  let xmlLangGet: props => option(string);\n  let xmlLang: props => option(string);\n  let xmlBaseGet: props => option(string);\n  let xmlBase: props => option(string);\n  let xmlnsXlinkGet: props => option(string);\n  let xmlnsXlink: props => option(string);\n  let xmlnsGet: props => option(string);\n  let xmlns: props => option(string);\n  let xlinkTypeGet: props => option(string);\n  let xlinkType: props => option(string);\n  let xlinkTitleGet: props => option(string);\n  let xlinkTitle: props => option(string);\n  let xlinkShowGet: props => option(string);\n  let xlinkShow: props => option(string);\n  let xlinkRoleGet: props => option(string);\n  let xlinkRole: props => option(string);\n  let xlinkHrefGet: props => option(string);\n  let xlinkHref: props => option(string);\n  let xlinkArcroleGet: props => option(string);\n  let xlinkArcrole: props => option(string);\n  let xlinkActuateGet: props => option(string);\n  let xlinkActuate: props => option(string);\n  let xHeightGet: props => option(string);\n  let xHeight: props => option(string);\n  let xChannelSelectorGet: props => option(string);\n  let xChannelSelector: props => option(string);\n  let x2Get: props => option(string);\n  let x2: props => option(string);\n  let x1Get: props => option(string);\n  let x1: props => option(string);\n  let xGet: props => option(string);\n  let x: props => option(string);\n  let writingModeGet: props => option(string);\n  let writingMode: props => option(string);\n  let wordSpacingGet: props => option(string);\n  let wordSpacing: props => option(string);\n  let widthsGet: props => option(string);\n  let widths: props => option(string);\n  let visibilityGet: props => option(string);\n  let visibility: props => option(string);\n  let viewTargetGet: props => option(string);\n  let viewTarget: props => option(string);\n  let viewBoxGet: props => option(string);\n  let viewBox: props => option(string);\n  let vertOriginYGet: props => option(string);\n  let vertOriginY: props => option(string);\n  let vertOriginXGet: props => option(string);\n  let vertOriginX: props => option(string);\n  let vertAdvYGet: props => option(string);\n  let vertAdvY: props => option(string);\n  let vertAdvXGet: props => option(string);\n  let vertAdvX: props => option(string);\n  let versionGet: props => option(string);\n  let version: props => option(string);\n  let vectorEffectGet: props => option(string);\n  let vectorEffect: props => option(string);\n  let valuesGet: props => option(string);\n  let values: props => option(string);\n  let vMathematicalGet: props => option(string);\n  let vMathematical: props => option(string);\n  let vIdeographicGet: props => option(string);\n  let vIdeographic: props => option(string);\n  let vHangingGet: props => option(string);\n  let vHanging: props => option(string);\n  let vAlphabeticGet: props => option(string);\n  let vAlphabetic: props => option(string);\n  let unitsPerEmGet: props => option(string);\n  let unitsPerEm: props => option(string);\n  let unicodeRangeGet: props => option(string);\n  let unicodeRange: props => option(string);\n  let unicodeBidiGet: props => option(string);\n  let unicodeBidi: props => option(string);\n  let unicodeGet: props => option(string);\n  let unicode: props => option(string);\n  let underlineThicknessGet: props => option(string);\n  let underlineThickness: props => option(string);\n  let underlinePositionGet: props => option(string);\n  let underlinePosition: props => option(string);\n  let u2Get: props => option(string);\n  let u2: props => option(string);\n  let u1Get: props => option(string);\n  let u1: props => option(string);\n  let transformGet: props => option(string);\n  let transform: props => option(string);\n  let to_Get: props => option(string);\n  let to_: props => option(string);\n  let textRenderingGet: props => option(string);\n  let textRendering: props => option(string);\n  let textLengthGet: props => option(string);\n  let textLength: props => option(string);\n  let textDecorationGet: props => option(string);\n  let textDecoration: props => option(string);\n  let textAnchorGet: props => option(string);\n  let textAnchor: props => option(string);\n  let targetYGet: props => option(string);\n  let targetY: props => option(string);\n  let targetXGet: props => option(string);\n  let targetX: props => option(string);\n  let tableValuesGet: props => option(string);\n  let tableValues: props => option(string);\n  let systemLanguageGet: props => option(string);\n  let systemLanguage: props => option(string);\n  let surfaceScaleGet: props => option(string);\n  let surfaceScale: props => option(string);\n  let strokeWidthGet: props => option(string);\n  let strokeWidth: props => option(string);\n  let strokeOpacityGet: props => option(string);\n  let strokeOpacity: props => option(string);\n  let strokeMiterlimitGet: props => option(string);\n  let strokeMiterlimit: props => option(string);\n  let strokeLinejoinGet: props => option(string);\n  let strokeLinejoin: props => option(string);\n  let strokeLinecapGet: props => option(string);\n  let strokeLinecap: props => option(string);\n  let strokeDashoffsetGet: props => option(string);\n  let strokeDashoffset: props => option(string);\n  let strokeDasharrayGet: props => option(string);\n  let strokeDasharray: props => option(string);\n  let strokeGet: props => option(string);\n  let stroke: props => option(string);\n  let stringGet: props => option(string);\n  let string: props => option(string);\n  let strikethroughThicknessGet: props => option(string);\n  let strikethroughThickness: props => option(string);\n  let strikethroughPositionGet: props => option(string);\n  let strikethroughPosition: props => option(string);\n  let stopOpacityGet: props => option(string);\n  let stopOpacity: props => option(string);\n  let stopColorGet: props => option(string);\n  let stopColor: props => option(string);\n  let stitchTilesGet: props => option(string);\n  let stitchTiles: props => option(string);\n  let stemvGet: props => option(string);\n  let stemv: props => option(string);\n  let stemhGet: props => option(string);\n  let stemh: props => option(string);\n  let stdDeviationGet: props => option(string);\n  let stdDeviation: props => option(string);\n  let startOffsetGet: props => option(string);\n  let startOffset: props => option(string);\n  let spreadMethodGet: props => option(string);\n  let spreadMethod: props => option(string);\n  let speedGet: props => option(string);\n  let speed: props => option(string);\n  let specularExponentGet: props => option(string);\n  let specularExponent: props => option(string);\n  let specularConstantGet: props => option(string);\n  let specularConstant: props => option(string);\n  let spacingGet: props => option(string);\n  let spacing: props => option(string);\n  let slopeGet: props => option(string);\n  let slope: props => option(string);\n  let shapeRenderingGet: props => option(string);\n  let shapeRendering: props => option(string);\n  let seedGet: props => option(string);\n  let seed: props => option(string);\n  let scaleGet: props => option(string);\n  let scale: props => option(string);\n  let ryGet: props => option(string);\n  let ry: props => option(string);\n  let rxGet: props => option(string);\n  let rx: props => option(string);\n  let rotateGet: props => option(string);\n  let rotate: props => option(string);\n  let resultGet: props => option(string);\n  let result: props => option(string);\n  let restartGet: props => option(string);\n  let restart: props => option(string);\n  let requiredFeaturesGet: props => option(string);\n  let requiredFeatures: props => option(string);\n  let requiredExtensionsGet: props => option(string);\n  let requiredExtensions: props => option(string);\n  let repeatDurGet: props => option(string);\n  let repeatDur: props => option(string);\n  let repeatCountGet: props => option(string);\n  let repeatCount: props => option(string);\n  let renderingIntentGet: props => option(string);\n  let renderingIntent: props => option(string);\n  let refYGet: props => option(string);\n  let refY: props => option(string);\n  let refXGet: props => option(string);\n  let refX: props => option(string);\n  let radiusGet: props => option(string);\n  let radius: props => option(string);\n  let rGet: props => option(string);\n  let r: props => option(string);\n  let primitiveUnitsGet: props => option(string);\n  let primitiveUnits: props => option(string);\n  let preserveAspectRatioGet: props => option(string);\n  let preserveAspectRatio: props => option(string);\n  let preserveAlphaGet: props => option(string);\n  let preserveAlpha: props => option(string);\n  let pointsAtZGet: props => option(string);\n  let pointsAtZ: props => option(string);\n  let pointsAtYGet: props => option(string);\n  let pointsAtY: props => option(string);\n  let pointsAtXGet: props => option(string);\n  let pointsAtX: props => option(string);\n  let pointsGet: props => option(string);\n  let points: props => option(string);\n  let pointerEventsGet: props => option(string);\n  let pointerEvents: props => option(string);\n  let patternUnitsGet: props => option(string);\n  let patternUnits: props => option(string);\n  let patternTransformGet: props => option(string);\n  let patternTransform: props => option(string);\n  let patternContentUnitsGet: props => option(string);\n  let patternContentUnits: props => option(string);\n  let pathLengthGet: props => option(string);\n  let pathLength: props => option(string);\n  let panose1Get: props => option(string);\n  let panose1: props => option(string);\n  let paintOrderGet: props => option(string);\n  let paintOrder: props => option(string);\n  let overlineThicknessGet: props => option(string);\n  let overlineThickness: props => option(string);\n  let overlinePositionGet: props => option(string);\n  let overlinePosition: props => option(string);\n  let overflowYGet: props => option(string);\n  let overflowY: props => option(string);\n  let overflowXGet: props => option(string);\n  let overflowX: props => option(string);\n  let overflowGet: props => option(string);\n  let overflow: props => option(string);\n  let originGet: props => option(string);\n  let origin: props => option(string);\n  let orientationGet: props => option(string);\n  let orientation: props => option(string);\n  let orientGet: props => option(string);\n  let orient: props => option(string);\n  let orderGet: props => option(string);\n  let order: props => option(string);\n  let operatorGet: props => option(string);\n  let operator: props => option(string);\n  let opacityGet: props => option(string);\n  let opacity: props => option(string);\n  let offsetGet: props => option(string);\n  let offset: props => option(string);\n  let numOctavesGet: props => option(string);\n  let numOctaves: props => option(string);\n  let modeGet: props => option(string);\n  let mode: props => option(string);\n  let mathematicalGet: props => option(string);\n  let mathematical: props => option(string);\n  let maskUnitsGet: props => option(string);\n  let maskUnits: props => option(string);\n  let maskContentUnitsGet: props => option(string);\n  let maskContentUnits: props => option(string);\n  let maskGet: props => option(string);\n  let mask: props => option(string);\n  let markerWidthGet: props => option(string);\n  let markerWidth: props => option(string);\n  let markerUnitsGet: props => option(string);\n  let markerUnits: props => option(string);\n  let markerStartGet: props => option(string);\n  let markerStart: props => option(string);\n  let markerMidGet: props => option(string);\n  let markerMid: props => option(string);\n  let markerHeightGet: props => option(string);\n  let markerHeight: props => option(string);\n  let markerEndGet: props => option(string);\n  let markerEnd: props => option(string);\n  let localGet: props => option(string);\n  let local: props => option(string);\n  let limitingConeAngleGet: props => option(string);\n  let limitingConeAngle: props => option(string);\n  let lightingColorGet: props => option(string);\n  let lightingColor: props => option(string);\n  let letterSpacingGet: props => option(string);\n  let letterSpacing: props => option(string);\n  let lengthAdjustGet: props => option(string);\n  let lengthAdjust: props => option(string);\n  let keyTimesGet: props => option(string);\n  let keyTimes: props => option(string);\n  let keySplinesGet: props => option(string);\n  let keySplines: props => option(string);\n  let keyPointsGet: props => option(string);\n  let keyPoints: props => option(string);\n  let kerningGet: props => option(string);\n  let kerning: props => option(string);\n  let kernelUnitLengthGet: props => option(string);\n  let kernelUnitLength: props => option(string);\n  let kernelMatrixGet: props => option(string);\n  let kernelMatrix: props => option(string);\n  let k4Get: props => option(string);\n  let k4: props => option(string);\n  let k3Get: props => option(string);\n  let k3: props => option(string);\n  let k2Get: props => option(string);\n  let k2: props => option(string);\n  let k1Get: props => option(string);\n  let k1: props => option(string);\n  let kGet: props => option(string);\n  let k: props => option(string);\n  let interceptGet: props => option(string);\n  let intercept: props => option(string);\n  let in2Get: props => option(string);\n  let in2: props => option(string);\n  let in_Get: props => option(string);\n  let in_: props => option(string);\n  let imageRenderingGet: props => option(string);\n  let imageRendering: props => option(string);\n  let ideographicGet: props => option(string);\n  let ideographic: props => option(string);\n  let horizOriginXGet: props => option(string);\n  let horizOriginX: props => option(string);\n  let horizAdvXGet: props => option(string);\n  let horizAdvX: props => option(string);\n  let hangingGet: props => option(string);\n  let hanging: props => option(string);\n  let gradientUnitsGet: props => option(string);\n  let gradientUnits: props => option(string);\n  let gradientTransformGet: props => option(string);\n  let gradientTransform: props => option(string);\n  let glyphRefGet: props => option(string);\n  let glyphRef: props => option(string);\n  let glyphOrientationVerticalGet: props => option(string);\n  let glyphOrientationVertical: props => option(string);\n  let glyphOrientationHorizontalGet: props => option(string);\n  let glyphOrientationHorizontal: props => option(string);\n  let glyphNameGet: props => option(string);\n  let glyphName: props => option(string);\n  let g2Get: props => option(string);\n  let g2: props => option(string);\n  let g1Get: props => option(string);\n  let g1: props => option(string);\n  let fyGet: props => option(string);\n  let fy: props => option(string);\n  let fxGet: props => option(string);\n  let fx: props => option(string);\n  let fromGet: props => option(string);\n  let from: props => option(string);\n  let fomatGet: props => option(string);\n  let fomat: props => option(string);\n  let fontWeightGet: props => option(string);\n  let fontWeight: props => option(string);\n  let fontVariantGet: props => option(string);\n  let fontVariant: props => option(string);\n  let fontStyleGet: props => option(string);\n  let fontStyle: props => option(string);\n  let fontStretchGet: props => option(string);\n  let fontStretch: props => option(string);\n  let fontSizeAdjustGet: props => option(string);\n  let fontSizeAdjust: props => option(string);\n  let fontSizeGet: props => option(string);\n  let fontSize: props => option(string);\n  let fontFamilyGet: props => option(string);\n  let fontFamily: props => option(string);\n  let focusableGet: props => option(string);\n  let focusable: props => option(string);\n  let floodOpacityGet: props => option(string);\n  let floodOpacity: props => option(string);\n  let floodColorGet: props => option(string);\n  let floodColor: props => option(string);\n  let filterUnitsGet: props => option(string);\n  let filterUnits: props => option(string);\n  let filterResGet: props => option(string);\n  let filterRes: props => option(string);\n  let filterGet: props => option(string);\n  let filter: props => option(string);\n  let fillRuleGet: props => option(string);\n  let fillRule: props => option(string);\n  let fillOpacityGet: props => option(string);\n  let fillOpacity: props => option(string);\n  let fillGet: props => option(string);\n  let fill: props => option(string);\n  let externalResourcesRequiredGet: props => option(string);\n  let externalResourcesRequired: props => option(string);\n  let exponentGet: props => option(string);\n  let exponent: props => option(string);\n  let end_Get: props => option(string);\n  let end_: props => option(string);\n  let enableBackgroundGet: props => option(string);\n  let enableBackground: props => option(string);\n  let elevationGet: props => option(string);\n  let elevation: props => option(string);\n  let edgeModeGet: props => option(string);\n  let edgeMode: props => option(string);\n  let dyGet: props => option(string);\n  let dy: props => option(string);\n  let dxGet: props => option(string);\n  let dx: props => option(string);\n  let durGet: props => option(string);\n  let dur: props => option(string);\n  let dominantBaselineGet: props => option(string);\n  let dominantBaseline: props => option(string);\n  let divisorGet: props => option(string);\n  let divisor: props => option(string);\n  let displayGet: props => option(string);\n  let display: props => option(string);\n  let directionGet: props => option(string);\n  let direction: props => option(string);\n  let diffuseConstantGet: props => option(string);\n  let diffuseConstant: props => option(string);\n  let descentGet: props => option(string);\n  let descent: props => option(string);\n  let decelerateGet: props => option(string);\n  let decelerate: props => option(string);\n  let dGet: props => option(string);\n  let d: props => option(string);\n  let cyGet: props => option(string);\n  let cy: props => option(string);\n  let cxGet: props => option(string);\n  let cx: props => option(string);\n  let cursorGet: props => option(string);\n  let cursor: props => option(string);\n  let contentStyleTypeGet: props => option(string);\n  let contentStyleType: props => option(string);\n  let contentScriptTypeGet: props => option(string);\n  let contentScriptType: props => option(string);\n  let colorRenderingGet: props => option(string);\n  let colorRendering: props => option(string);\n  let colorProfileGet: props => option(string);\n  let colorProfile: props => option(string);\n  let colorInterpolationFiltersGet: props => option(string);\n  let colorInterpolationFilters: props => option(string);\n  let colorInterpolationGet: props => option(string);\n  let colorInterpolation: props => option(string);\n  let clipRuleGet: props => option(string);\n  let clipRule: props => option(string);\n  let clipPathUnitsGet: props => option(string);\n  let clipPathUnits: props => option(string);\n  let clipPathGet: props => option(string);\n  let clipPath: props => option(string);\n  let clipGet: props => option(string);\n  let clip: props => option(string);\n  let capHeightGet: props => option(string);\n  let capHeight: props => option(string);\n  let calcModeGet: props => option(string);\n  let calcMode: props => option(string);\n  let byGet: props => option(string);\n  let by: props => option(string);\n  let biasGet: props => option(string);\n  let bias: props => option(string);\n  let begin_Get: props => option(string);\n  let begin_: props => option(string);\n  let bboxGet: props => option(string);\n  let bbox: props => option(string);\n  let baselineShiftGet: props => option(string);\n  let baselineShift: props => option(string);\n  let baseProfileGet: props => option(string);\n  let baseProfile: props => option(string);\n  let baseFrequencyGet: props => option(string);\n  let baseFrequency: props => option(string);\n  let azimuthGet: props => option(string);\n  let azimuth: props => option(string);\n  let autoReverseGet: props => option(string);\n  let autoReverse: props => option(string);\n  let attributeTypeGet: props => option(string);\n  let attributeType: props => option(string);\n  let attributeNameGet: props => option(string);\n  let attributeName: props => option(string);\n  let ascentGet: props => option(string);\n  let ascent: props => option(string);\n  let arabicFormGet: props => option(string);\n  let arabicForm: props => option(string);\n  let amplitudeGet: props => option(string);\n  let amplitude: props => option(string);\n  let alphabeticGet: props => option(string);\n  let alphabetic: props => option(string);\n  let allowReorderGet: props => option(string);\n  let allowReorder: props => option(string);\n  let alignmentBaselineGet: props => option(string);\n  let alignmentBaseline: props => option(string);\n  let additiveGet: props => option(string);\n  let additive: props => option(string);\n  let accumulateGet: props => option(string);\n  let accumulate: props => option(string);\n  let accentHeightGet: props => option(string);\n  let accentHeight: props => option(string);\n  let onTransitionEndGet: props => option(\n  ReactEvent.Transition.t => unit\n);\n  let onTransitionEnd: props => option(\n  ReactEvent.Transition.t => unit\n);\n  let onAnimationIterationGet: props => option(\n  ReactEvent.Animation.t => unit\n);\n  let onAnimationIteration: props => option(\n  ReactEvent.Animation.t => unit\n);\n  let onAnimationEndGet: props => option(\n  ReactEvent.Animation.t => unit\n);\n  let onAnimationEnd: props => option(\n  ReactEvent.Animation.t => unit\n);\n  let onAnimationStartGet: props => option(\n  ReactEvent.Animation.t => unit\n);\n  let onAnimationStart: props => option(\n  ReactEvent.Animation.t => unit\n);\n  let onLoadGet: props => option(\n  ReactEvent.Image.t => unit\n);\n  let onLoad: props => option(\n  ReactEvent.Image.t => unit\n);\n  let onWaitingGet: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onWaiting: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onVolumeChangeGet: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onVolumeChange: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onTimeUpdateGet: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onTimeUpdate: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onSuspendGet: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onSuspend: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onStalledGet: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onStalled: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onSeekingGet: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onSeeking: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onSeekedGet: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onSeeked: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onRateChangeGet: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onRateChange: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onProgressGet: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onProgress: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onPlayingGet: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onPlaying: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onPlayGet: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onPlay: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onPauseGet: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onPause: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onLoadStartGet: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onLoadStart: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onLoadedMetadataGet: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onLoadedMetadata: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onLoadedDataGet: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onLoadedData: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onErrorGet: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onError: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onEndedGet: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onEnded: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onEncrypetdGet: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onEncrypetd: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onEmptiedGet: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onEmptied: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onDurationChangeGet: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onDurationChange: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onCanPlayThroughGet: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onCanPlayThrough: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onCanPlayGet: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onCanPlay: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onAbortGet: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onAbort: props => option(\n  ReactEvent.Media.t => unit\n);\n  let onWheelGet: props => option(\n  ReactEvent.Wheel.t => unit\n);\n  let onWheel: props => option(\n  ReactEvent.Wheel.t => unit\n);\n  let onScrollGet: props => option(ReactEvent.UI.t => unit);\n  let onScroll: props => option(ReactEvent.UI.t => unit);\n  let onTouchStartGet: props => option(\n  ReactEvent.Touch.t => unit\n);\n  let onTouchStart: props => option(\n  ReactEvent.Touch.t => unit\n);\n  let onTouchMoveGet: props => option(\n  ReactEvent.Touch.t => unit\n);\n  let onTouchMove: props => option(\n  ReactEvent.Touch.t => unit\n);\n  let onTouchEndGet: props => option(\n  ReactEvent.Touch.t => unit\n);\n  let onTouchEnd: props => option(\n  ReactEvent.Touch.t => unit\n);\n  let onTouchCancelGet: props => option(\n  ReactEvent.Touch.t => unit\n);\n  let onTouchCancel: props => option(\n  ReactEvent.Touch.t => unit\n);\n  let onSelectGet: props => option(\n  ReactEvent.Selection.t => unit\n);\n  let onSelect: props => option(\n  ReactEvent.Selection.t => unit\n);\n  let onMouseUpGet: props => option(\n  ReactEvent.Mouse.t => unit\n);\n  let onMouseUp: props => option(\n  ReactEvent.Mouse.t => unit\n);\n  let onMouseOverGet: props => option(\n  ReactEvent.Mouse.t => unit\n);\n  let onMouseOver: props => option(\n  ReactEvent.Mouse.t => unit\n);\n  let onMouseOutGet: props => option(\n  ReactEvent.Mouse.t => unit\n);\n  let onMouseOut: props => option(\n  ReactEvent.Mouse.t => unit\n);\n  let onMouseMoveGet: props => option(\n  ReactEvent.Mouse.t => unit\n);\n  let onMouseMove: props => option(\n  ReactEvent.Mouse.t => unit\n);\n  let onMouseLeaveGet: props => option(\n  ReactEvent.Mouse.t => unit\n);\n  let onMouseLeave: props => option(\n  ReactEvent.Mouse.t => unit\n);\n  let onMouseEnterGet: props => option(\n  ReactEvent.Mouse.t => unit\n);\n  let onMouseEnter: props => option(\n  ReactEvent.Mouse.t => unit\n);\n  let onMouseDownGet: props => option(\n  ReactEvent.Mouse.t => unit\n);\n  let onMouseDown: props => option(\n  ReactEvent.Mouse.t => unit\n);\n  let onDropGet: props => option(\n  ReactEvent.Mouse.t => unit\n);\n  let onDrop: props => option(\n  ReactEvent.Mouse.t => unit\n);\n  let onDragStartGet: props => option(\n  ReactEvent.Mouse.t => unit\n);\n  let onDragStart: props => option(\n  ReactEvent.Mouse.t => unit\n);\n  let onDragOverGet: props => option(\n  ReactEvent.Mouse.t => unit\n);\n  let onDragOver: props => option(\n  ReactEvent.Mouse.t => unit\n);\n  let onDragLeaveGet: props => option(\n  ReactEvent.Mouse.t => unit\n);\n  let onDragLeave: props => option(\n  ReactEvent.Mouse.t => unit\n);\n  let onDragExitGet: props => option(\n  ReactEvent.Mouse.t => unit\n);\n  let onDragExit: props => option(\n  ReactEvent.Mouse.t => unit\n);\n  let onDragEnterGet: props => option(\n  ReactEvent.Mouse.t => unit\n);\n  let onDragEnter: props => option(\n  ReactEvent.Mouse.t => unit\n);\n  let onDragEndGet: props => option(\n  ReactEvent.Mouse.t => unit\n);\n  let onDragEnd: props => option(\n  ReactEvent.Mouse.t => unit\n);\n  let onDragGet: props => option(\n  ReactEvent.Mouse.t => unit\n);\n  let onDrag: props => option(\n  ReactEvent.Mouse.t => unit\n);\n  let onDoubleClickGet: props => option(\n  ReactEvent.Mouse.t => unit\n);\n  let onDoubleClick: props => option(\n  ReactEvent.Mouse.t => unit\n);\n  let onContextMenuGet: props => option(\n  ReactEvent.Mouse.t => unit\n);\n  let onContextMenu: props => option(\n  ReactEvent.Mouse.t => unit\n);\n  let onClickGet: props => option(\n  ReactEvent.Mouse.t => unit\n);\n  let onClick: props => option(\n  ReactEvent.Mouse.t => unit\n);\n  let onSubmitGet: props => option(\n  ReactEvent.Form.t => unit\n);\n  let onSubmit: props => option(\n  ReactEvent.Form.t => unit\n);\n  let onInputGet: props => option(\n  ReactEvent.Form.t => unit\n);\n  let onInput: props => option(\n  ReactEvent.Form.t => unit\n);\n  let onChangeGet: props => option(\n  ReactEvent.Form.t => unit\n);\n  let onChange: props => option(\n  ReactEvent.Form.t => unit\n);\n  let onBlurGet: props => option(\n  ReactEvent.Focus.t => unit\n);\n  let onBlur: props => option(\n  ReactEvent.Focus.t => unit\n);\n  let onFocusGet: props => option(\n  ReactEvent.Focus.t => unit\n);\n  let onFocus: props => option(\n  ReactEvent.Focus.t => unit\n);\n  let onKeyUpGet: props => option(\n  ReactEvent.Keyboard.t => unit\n);\n  let onKeyUp: props => option(\n  ReactEvent.Keyboard.t => unit\n);\n  let onKeyPressGet: props => option(\n  ReactEvent.Keyboard.t => unit\n);\n  let onKeyPress: props => option(\n  ReactEvent.Keyboard.t => unit\n);\n  let onKeyDownGet: props => option(\n  ReactEvent.Keyboard.t => unit\n);\n  let onKeyDown: props => option(\n  ReactEvent.Keyboard.t => unit\n);\n  let onCompositionUpdateGet: props => option(\n  ReactEvent.Composition.t => unit\n);\n  let onCompositionUpdate: props => option(\n  ReactEvent.Composition.t => unit\n);\n  let onCompositionStartGet: props => option(\n  ReactEvent.Composition.t => unit\n);\n  let onCompositionStart: props => option(\n  ReactEvent.Composition.t => unit\n);\n  let onCompositionEndGet: props => option(\n  ReactEvent.Composition.t => unit\n);\n  let onCompositionEnd: props => option(\n  ReactEvent.Composition.t => unit\n);\n  let onPasteGet: props => option(\n  ReactEvent.Clipboard.t => unit\n);\n  let onPaste: props => option(\n  ReactEvent.Clipboard.t => unit\n);\n  let onCutGet: props => option(\n  ReactEvent.Clipboard.t => unit\n);\n  let onCut: props => option(\n  ReactEvent.Clipboard.t => unit\n);\n  let onCopyGet: props => option(\n  ReactEvent.Clipboard.t => unit\n);\n  let onCopy: props => option(\n  ReactEvent.Clipboard.t => unit\n);\n  let wrapGet: props => option(string);\n  let wrap: props => option(string);\n  let widthGet: props => option(string);\n  let width: props => option(string);\n  let valueGet: props => option(string);\n  let value: props => option(string);\n  let useMapGet: props => option(string);\n  let useMap: props => option(string);\n  let type_Get: props => option(string);\n  let type_: props => option(string);\n  let targetGet: props => option(string);\n  let target: props => option(string);\n  let summaryGet: props => option(string);\n  let summary: props => option(string);\n  let stepGet: props => option(float);\n  let step: props => option(float);\n  let startGet: props => option(int);\n  let start: props => option(int);\n  let srcSetGet: props => option(string);\n  let srcSet: props => option(string);\n  let srcLangGet: props => option(string);\n  let srcLang: props => option(string);\n  let srcDocGet: props => option(string);\n  let srcDoc: props => option(string);\n  let srcGet: props => option(string);\n  let src: props => option(string);\n  let spanGet: props => option(int);\n  let span: props => option(int);\n  let sizesGet: props => option(string);\n  let sizes: props => option(string);\n  let sizeGet: props => option(int);\n  let size: props => option(int);\n  let shapeGet: props => option(string);\n  let shape: props => option(string);\n  let selectedGet: props => option(bool);\n  let selected: props => option(bool);\n  let scrollingGet: props => option(string);\n  let scrolling: props => option(string);\n  let scopedGet: props => option(bool);\n  let scoped: props => option(bool);\n  let scopeGet: props => option(string);\n  let scope: props => option(string);\n  let sandboxGet: props => option(string);\n  let sandbox: props => option(string);\n  let rowSpanGet: props => option(int);\n  let rowSpan: props => option(int);\n  let rowsGet: props => option(int);\n  let rows: props => option(int);\n  let reversedGet: props => option(bool);\n  let reversed: props => option(bool);\n  let requiredGet: props => option(bool);\n  let required: props => option(bool);\n  let relGet: props => option(string);\n  let rel: props => option(string);\n  let readOnlyGet: props => option(bool);\n  let readOnly: props => option(bool);\n  let radioGroupGet: props => option(string);\n  let radioGroup: props => option(string);\n  let preloadGet: props => option(string);\n  let preload: props => option(string);\n  let posterGet: props => option(string);\n  let poster: props => option(string);\n  let placeholderGet: props => option(string);\n  let placeholder: props => option(string);\n  let patternGet: props => option(string);\n  let pattern: props => option(string);\n  let optimumGet: props => option(int);\n  let optimum: props => option(int);\n  let open_Get: props => option(bool);\n  let open_: props => option(bool);\n  let noValidateGet: props => option(bool);\n  let noValidate: props => option(bool);\n  let nonceGet: props => option(string);\n  let nonce: props => option(string);\n  let nameGet: props => option(string);\n  let name: props => option(string);\n  let mutedGet: props => option(bool);\n  let muted: props => option(bool);\n  let multipleGet: props => option(bool);\n  let multiple: props => option(bool);\n  let minLengthGet: props => option(int);\n  let minLength: props => option(int);\n  let minGet: props => option(int);\n  let min: props => option(int);\n  let methodGet: props => option(string);\n  let method: props => option(string);\n  let mediaGroupGet: props => option(string);\n  let mediaGroup: props => option(string);\n  let mediaGet: props => option(string);\n  let media: props => option(string);\n  let maxLengthGet: props => option(int);\n  let maxLength: props => option(int);\n  let maxGet: props => option(string);\n  let max: props => option(string);\n  let manifestGet: props => option(string);\n  let manifest: props => option(string);\n  let lowGet: props => option(int);\n  let low: props => option(int);\n  let loopGet: props => option(bool);\n  let loop: props => option(bool);\n  let listGet: props => option(string);\n  let list: props => option(string);\n  let labelGet: props => option(string);\n  let label: props => option(string);\n  let kindGet: props => option(string);\n  let kind: props => option(string);\n  let keyTypeGet: props => option(string);\n  let keyType: props => option(string);\n  let integrityGet: props => option(string);\n  let integrity: props => option(string);\n  let inputModeGet: props => option(string);\n  let inputMode: props => option(string);\n  let iconGet: props => option(string);\n  let icon: props => option(string);\n  let httpEquivGet: props => option(string);\n  let httpEquiv: props => option(string);\n  let htmlForGet: props => option(string);\n  let htmlFor: props => option(string);\n  let hrefLangGet: props => option(string);\n  let hrefLang: props => option(string);\n  let hrefGet: props => option(string);\n  let href: props => option(string);\n  let highGet: props => option(int);\n  let high: props => option(int);\n  let heightGet: props => option(string);\n  let height: props => option(string);\n  let headersGet: props => option(string);\n  let headers: props => option(string);\n  let formMethodGet: props => option(string);\n  let formMethod: props => option(string);\n  let formTargetGet: props => option(string);\n  let formTarget: props => option(string);\n  let formActionGet: props => option(string);\n  let formAction: props => option(string);\n  let formGet: props => option(string);\n  let form: props => option(string);\n  let encTypeGet: props => option(string);\n  let encType: props => option(string);\n  let downloadGet: props => option(string);\n  let download: props => option(string);\n  let disabledGet: props => option(bool);\n  let disabled: props => option(bool);\n  let deferGet: props => option(bool);\n  let defer: props => option(bool);\n  let defaultGet: props => option(bool);\n  let default: props => option(bool);\n  let dateTimeGet: props => option(string);\n  let dateTime: props => option(string);\n  let dataGet: props => option(string);\n  let data: props => option(string);\n  let coordsGet: props => option(string);\n  let coords: props => option(string);\n  let controlsGet: props => option(bool);\n  let controls: props => option(bool);\n  let contentGet: props => option(string);\n  let content: props => option(string);\n  let colSpanGet: props => option(int);\n  let colSpan: props => option(int);\n  let colsGet: props => option(int);\n  let cols: props => option(int);\n  let crossoriginGet: props => option(bool);\n  let crossorigin: props => option(bool);\n  let citeGet: props => option(string);\n  let cite: props => option(string);\n  let checkedGet: props => option(bool);\n  let checked: props => option(bool);\n  let charSetGet: props => option(string);\n  let charSet: props => option(string);\n  let challengeGet: props => option(string);\n  let challenge: props => option(string);\n  let autoPlayGet: props => option(bool);\n  let autoPlay: props => option(bool);\n  let autoFocusGet: props => option(bool);\n  let autoFocus: props => option(bool);\n  let autoCompleteGet: props => option(string);\n  let autoComplete: props => option(string);\n  let asyncGet: props => option(bool);\n  let async: props => option(bool);\n  let altGet: props => option(string);\n  let alt: props => option(string);\n  let allowFullScreenGet: props => option(bool);\n  let allowFullScreen: props => option(bool);\n  let actionGet: props => option(string);\n  let action: props => option(string);\n  let acceptCharsetGet: props => option(string);\n  let acceptCharset: props => option(string);\n  let acceptGet: props => option(string);\n  let accept: props => option(string);\n  let itemTypeGet: props => option(string);\n  let itemType: props => option(string);\n  let itemScopeGet: props => option(bool);\n  let itemScope: props => option(bool);\n  let itemRefGet: props => option(string);\n  let itemRef: props => option(string);\n  let itemPropGet: props => option(string);\n  let itemProp: props => option(string);\n  let itemIDGet: props => option(string);\n  let itemID: props => option(string);\n  let titleGet: props => option(string);\n  let title: props => option(string);\n  let tabIndexGet: props => option(int);\n  let tabIndex: props => option(int);\n  let spellCheckGet: props => option(bool);\n  let spellCheck: props => option(bool);\n  let styleGet: props => option(style);\n  let style: props => option(style);\n  let roleGet: props => option(string);\n  let role: props => option(string);\n  let langGet: props => option(string);\n  let lang: props => option(string);\n  let idGet: props => option(string);\n  let id: props => option(string);\n  let hiddenGet: props => option(bool);\n  let hidden: props => option(bool);\n  let draggableGet: props => option(bool);\n  let draggable: props => option(bool);\n  let dirGet: props => option(string);\n  let dir: props => option(string);\n  let contextMenuGet: props => option(string);\n  let contextMenu: props => option(string);\n  let contentEditableGet: props => option(bool);\n  let contentEditable: props => option(bool);\n  let classNameGet: props => option(string);\n  let className: props => option(string);\n  let accessKeyGet: props => option(string);\n  let accessKey: props => option(string);\n  let defaultValueGet: props => option(string);\n  let defaultValue: props => option(string);\n  let defaultCheckedGet: props => option(bool);\n  let defaultChecked: props => option(bool);\n  let ariaSetsizeGet: props => option(int);\n  let ariaSetsize: props => option(int);\n  let ariaRowspanGet: props => option(int);\n  let ariaRowspan: props => option(int);\n  let ariaRowindexGet: props => option(int);\n  let ariaRowindex: props => option(int);\n  let ariaRowcountGet: props => option(int);\n  let ariaRowcount: props => option(int);\n  let ariaPosinsetGet: props => option(int);\n  let ariaPosinset: props => option(int);\n  let ariaOwnsGet: props => option(string);\n  let ariaOwns: props => option(string);\n  let ariaLabelledbyGet: props => option(string);\n  let ariaLabelledby: props => option(string);\n  let ariaFlowtoGet: props => option(string);\n  let ariaFlowto: props => option(string);\n  let ariaErrormessageGet: props => option(string);\n  let ariaErrormessage: props => option(string);\n  let ariaDescribedbyGet: props => option(string);\n  let ariaDescribedby: props => option(string);\n  let ariaControlsGet: props => option(string);\n  let ariaControls: props => option(string);\n  let ariaColspanGet: props => option(int);\n  let ariaColspan: props => option(int);\n  let ariaColindexGet: props => option(int);\n  let ariaColindex: props => option(int);\n  let ariaColcountGet: props => option(int);\n  let ariaColcount: props => option(int);\n  let ariaActivedescendantGet: props => option(string);\n  let ariaActivedescendant: props => option(string);\n  let ariaGrabbedGet: props => option(bool);\n  let ariaGrabbed: props => option(bool);\n  let ariaRelevantGet: props => option(string);\n  let ariaRelevant: props => option(string);\n  let ariaBusyGet: props => option(bool);\n  let ariaBusy: props => option(bool);\n  let ariaAtomicGet: props => option(bool);\n  let ariaAtomic: props => option(bool);\n  let ariaValuetextGet: props => option(string);\n  let ariaValuetext: props => option(string);\n  let ariaValuenowGet: props => option(float);\n  let ariaValuenow: props => option(float);\n  let ariaValueminGet: props => option(float);\n  let ariaValuemin: props => option(float);\n  let ariaValuemaxGet: props => option(float);\n  let ariaValuemax: props => option(float);\n  let ariaSortGet: props => option(string);\n  let ariaSort: props => option(string);\n  let ariaSelectedGet: props => option(bool);\n  let ariaSelected: props => option(bool);\n  let ariaRequiredGet: props => option(bool);\n  let ariaRequired: props => option(bool);\n  let ariaReadonlyGet: props => option(bool);\n  let ariaReadonly: props => option(bool);\n  let ariaPlaceholderGet: props => option(string);\n  let ariaPlaceholder: props => option(string);\n  let ariaMultiselectableGet: props => option(bool);\n  let ariaMultiselectable: props => option(bool);\n  let ariaMultilineGet: props => option(bool);\n  let ariaMultiline: props => option(bool);\n  let ariaModalGet: props => option(bool);\n  let ariaModal: props => option(bool);\n  let ariaLevelGet: props => option(int);\n  let ariaLevel: props => option(int);\n  let ariaExpandedGet: props => option(bool);\n  let ariaExpanded: props => option(bool);\n  let ariaRoledescriptionGet: props => option(string);\n  let ariaRoledescription: props => option(string);\n  let ariaLabelGet: props => option(string);\n  let ariaLabel: props => option(string);\n  let ariaKeyshortcutsGet: props => option(string);\n  let ariaKeyshortcuts: props => option(string);\n  let ariaHiddenGet: props => option(bool);\n  let ariaHidden: props => option(bool);\n  let ariaDisabledGet: props => option(bool);\n  let ariaDisabled: props => option(bool);\n  let ariaDetailsGet: props => option(string);\n  let ariaDetails: props => option(string);\n  let refGet: props => option(\n  Js.nullable(Dom.element) => unit\n);\n  let ref: props => option(\n  Js.nullable(Dom.element) => unit\n);\n  let keyGet: props => option(string);\n  let key: props => option(string);\n  let props: (\n  ~?key: option(string),\n  ~?ref: option(\n    Js.nullable(Dom.element) => unit\n  ),\n  ~?ariaDetails: option(string),\n  ~?ariaDisabled: option(bool),\n  ~?ariaHidden: option(bool),\n  ~?ariaKeyshortcuts: option(string),\n  ~?ariaLabel: option(string),\n  ~?ariaRoledescription: option(string),\n  ~?ariaExpanded: option(bool),\n  ~?ariaLevel: option(int),\n  ~?ariaModal: option(bool),\n  ~?ariaMultiline: option(bool),\n  ~?ariaMultiselectable: option(bool),\n  ~?ariaPlaceholder: option(string),\n  ~?ariaReadonly: option(bool),\n  ~?ariaRequired: option(bool),\n  ~?ariaSelected: option(bool),\n  ~?ariaSort: option(string),\n  ~?ariaValuemax: option(float),\n  ~?ariaValuemin: option(float),\n  ~?ariaValuenow: option(float),\n  ~?ariaValuetext: option(string),\n  ~?ariaAtomic: option(bool),\n  ~?ariaBusy: option(bool),\n  ~?ariaRelevant: option(string),\n  ~?ariaGrabbed: option(bool),\n  ~?ariaActivedescendant: option(\n    string\n  ),\n  ~?ariaColcount: option(int),\n  ~?ariaColindex: option(int),\n  ~?ariaColspan: option(int),\n  ~?ariaControls: option(string),\n  ~?ariaDescribedby: option(string),\n  ~?ariaErrormessage: option(string),\n  ~?ariaFlowto: option(string),\n  ~?ariaLabelledby: option(string),\n  ~?ariaOwns: option(string),\n  ~?ariaPosinset: option(int),\n  ~?ariaRowcount: option(int),\n  ~?ariaRowindex: option(int),\n  ~?ariaRowspan: option(int),\n  ~?ariaSetsize: option(int),\n  ~?defaultChecked: option(bool),\n  ~?defaultValue: option(string),\n  ~?accessKey: option(string),\n  ~?className: option(string),\n  ~?contentEditable: option(bool),\n  ~?contextMenu: option(string),\n  ~?dir: option(string),\n  ~?draggable: option(bool),\n  ~?hidden: option(bool),\n  ~?id: option(string),\n  ~?lang: option(string),\n  ~?role: option(string),\n  ~?style: option(style),\n  ~?spellCheck: option(bool),\n  ~?tabIndex: option(int),\n  ~?title: option(string),\n  ~?itemID: option(string),\n  ~?itemProp: option(string),\n  ~?itemRef: option(string),\n  ~?itemScope: option(bool),\n  ~?itemType: option(string),\n  ~?accept: option(string),\n  ~?acceptCharset: option(string),\n  ~?action: option(string),\n  ~?allowFullScreen: option(bool),\n  ~?alt: option(string),\n  ~?async: option(bool),\n  ~?autoComplete: option(string),\n  ~?autoFocus: option(bool),\n  ~?autoPlay: option(bool),\n  ~?challenge: option(string),\n  ~?charSet: option(string),\n  ~?checked: option(bool),\n  ~?cite: option(string),\n  ~?crossorigin: option(bool),\n  ~?cols: option(int),\n  ~?colSpan: option(int),\n  ~?content: option(string),\n  ~?controls: option(bool),\n  ~?coords: option(string),\n  ~?data: option(string),\n  ~?dateTime: option(string),\n  ~?default: option(bool),\n  ~?defer: option(bool),\n  ~?disabled: option(bool),\n  ~?download: option(string),\n  ~?encType: option(string),\n  ~?form: option(string),\n  ~?formAction: option(string),\n  ~?formTarget: option(string),\n  ~?formMethod: option(string),\n  ~?headers: option(string),\n  ~?height: option(string),\n  ~?high: option(int),\n  ~?href: option(string),\n  ~?hrefLang: option(string),\n  ~?htmlFor: option(string),\n  ~?httpEquiv: option(string),\n  ~?icon: option(string),\n  ~?inputMode: option(string),\n  ~?integrity: option(string),\n  ~?keyType: option(string),\n  ~?kind: option(string),\n  ~?label: option(string),\n  ~?list: option(string),\n  ~?loop: option(bool),\n  ~?low: option(int),\n  ~?manifest: option(string),\n  ~?max: option(string),\n  ~?maxLength: option(int),\n  ~?media: option(string),\n  ~?mediaGroup: option(string),\n  ~?method: option(string),\n  ~?min: option(int),\n  ~?minLength: option(int),\n  ~?multiple: option(bool),\n  ~?muted: option(bool),\n  ~?name: option(string),\n  ~?nonce: option(string),\n  ~?noValidate: option(bool),\n  ~?open_: option(bool),\n  ~?optimum: option(int),\n  ~?pattern: option(string),\n  ~?placeholder: option(string),\n  ~?poster: option(string),\n  ~?preload: option(string),\n  ~?radioGroup: option(string),\n  ~?readOnly: option(bool),\n  ~?rel: option(string),\n  ~?required: option(bool),\n  ~?reversed: option(bool),\n  ~?rows: option(int),\n  ~?rowSpan: option(int),\n  ~?sandbox: option(string),\n  ~?scope: option(string),\n  ~?scoped: option(bool),\n  ~?scrolling: option(string),\n  ~?selected: option(bool),\n  ~?shape: option(string),\n  ~?size: option(int),\n  ~?sizes: option(string),\n  ~?span: option(int),\n  ~?src: option(string),\n  ~?srcDoc: option(string),\n  ~?srcLang: option(string),\n  ~?srcSet: option(string),\n  ~?start: option(int),\n  ~?step: option(float),\n  ~?summary: option(string),\n  ~?target: option(string),\n  ~?type_: option(string),\n  ~?useMap: option(string),\n  ~?value: option(string),\n  ~?width: option(string),\n  ~?wrap: option(string),\n  ~?onCopy: option(\n    ReactEvent.Clipboard.t => unit\n  ),\n  ~?onCut: option(\n    ReactEvent.Clipboard.t => unit\n  ),\n  ~?onPaste: option(\n    ReactEvent.Clipboard.t => unit\n  ),\n  ~?onCompositionEnd: option(\n    ReactEvent.Composition.t => unit\n  ),\n  ~?onCompositionStart: option(\n    ReactEvent.Composition.t => unit\n  ),\n  ~?onCompositionUpdate: option(\n    ReactEvent.Composition.t => unit\n  ),\n  ~?onKeyDown: option(\n    ReactEvent.Keyboard.t => unit\n  ),\n  ~?onKeyPress: option(\n    ReactEvent.Keyboard.t => unit\n  ),\n  ~?onKeyUp: option(\n    ReactEvent.Keyboard.t => unit\n  ),\n  ~?onFocus: option(\n    ReactEvent.Focus.t => unit\n  ),\n  ~?onBlur: option(\n    ReactEvent.Focus.t => unit\n  ),\n  ~?onChange: option(\n    ReactEvent.Form.t => unit\n  ),\n  ~?onInput: option(\n    ReactEvent.Form.t => unit\n  ),\n  ~?onSubmit: option(\n    ReactEvent.Form.t => unit\n  ),\n  ~?onClick: option(\n    ReactEvent.Mouse.t => unit\n  ),\n  ~?onContextMenu: option(\n    ReactEvent.Mouse.t => unit\n  ),\n  ~?onDoubleClick: option(\n    ReactEvent.Mouse.t => unit\n  ),\n  ~?onDrag: option(\n    ReactEvent.Mouse.t => unit\n  ),\n  ~?onDragEnd: option(\n    ReactEvent.Mouse.t => unit\n  ),\n  ~?onDragEnter: option(\n    ReactEvent.Mouse.t => unit\n  ),\n  ~?onDragExit: option(\n    ReactEvent.Mouse.t => unit\n  ),\n  ~?onDragLeave: option(\n    ReactEvent.Mouse.t => unit\n  ),\n  ~?onDragOver: option(\n    ReactEvent.Mouse.t => unit\n  ),\n  ~?onDragStart: option(\n    ReactEvent.Mouse.t => unit\n  ),\n  ~?onDrop: option(\n    ReactEvent.Mouse.t => unit\n  ),\n  ~?onMouseDown: option(\n    ReactEvent.Mouse.t => unit\n  ),\n  ~?onMouseEnter: option(\n    ReactEvent.Mouse.t => unit\n  ),\n  ~?onMouseLeave: option(\n    ReactEvent.Mouse.t => unit\n  ),\n  ~?onMouseMove: option(\n    ReactEvent.Mouse.t => unit\n  ),\n  ~?onMouseOut: option(\n    ReactEvent.Mouse.t => unit\n  ),\n  ~?onMouseOver: option(\n    ReactEvent.Mouse.t => unit\n  ),\n  ~?onMouseUp: option(\n    ReactEvent.Mouse.t => unit\n  ),\n  ~?onSelect: option(\n    ReactEvent.Selection.t => unit\n  ),\n  ~?onTouchCancel: option(\n    ReactEvent.Touch.t => unit\n  ),\n  ~?onTouchEnd: option(\n    ReactEvent.Touch.t => unit\n  ),\n  ~?onTouchMove: option(\n    ReactEvent.Touch.t => unit\n  ),\n  ~?onTouchStart: option(\n    ReactEvent.Touch.t => unit\n  ),\n  ~?onScroll: option(\n    ReactEvent.UI.t => unit\n  ),\n  ~?onWheel: option(\n    ReactEvent.Wheel.t => unit\n  ),\n  ~?onAbort: option(\n    ReactEvent.Media.t => unit\n  ),\n  ~?onCanPlay: option(\n    ReactEvent.Media.t => unit\n  ),\n  ~?onCanPlayThrough: option(\n    ReactEvent.Media.t => unit\n  ),\n  ~?onDurationChange: option(\n    ReactEvent.Media.t => unit\n  ),\n  ~?onEmptied: option(\n    ReactEvent.Media.t => unit\n  ),\n  ~?onEncrypetd: option(\n    ReactEvent.Media.t => unit\n  ),\n  ~?onEnded: option(\n    ReactEvent.Media.t => unit\n  ),\n  ~?onError: option(\n    ReactEvent.Media.t => unit\n  ),\n  ~?onLoadedData: option(\n    ReactEvent.Media.t => unit\n  ),\n  ~?onLoadedMetadata: option(\n    ReactEvent.Media.t => unit\n  ),\n  ~?onLoadStart: option(\n    ReactEvent.Media.t => unit\n  ),\n  ~?onPause: option(\n    ReactEvent.Media.t => unit\n  ),\n  ~?onPlay: option(\n    ReactEvent.Media.t => unit\n  ),\n  ~?onPlaying: option(\n    ReactEvent.Media.t => unit\n  ),\n  ~?onProgress: option(\n    ReactEvent.Media.t => unit\n  ),\n  ~?onRateChange: option(\n    ReactEvent.Media.t => unit\n  ),\n  ~?onSeeked: option(\n    ReactEvent.Media.t => unit\n  ),\n  ~?onSeeking: option(\n    ReactEvent.Media.t => unit\n  ),\n  ~?onStalled: option(\n    ReactEvent.Media.t => unit\n  ),\n  ~?onSuspend: option(\n    ReactEvent.Media.t => unit\n  ),\n  ~?onTimeUpdate: option(\n    ReactEvent.Media.t => unit\n  ),\n  ~?onVolumeChange: option(\n    ReactEvent.Media.t => unit\n  ),\n  ~?onWaiting: option(\n    ReactEvent.Media.t => unit\n  ),\n  ~?onLoad: option(\n    ReactEvent.Image.t => unit\n  ),\n  ~?onAnimationStart: option(\n    ReactEvent.Animation.t => unit\n  ),\n  ~?onAnimationEnd: option(\n    ReactEvent.Animation.t => unit\n  ),\n  ~?onAnimationIteration: option(\n    ReactEvent.Animation.t => unit\n  ),\n  ~?onTransitionEnd: option(\n    ReactEvent.Transition.t => unit\n  ),\n  ~?accentHeight: option(string),\n  ~?accumulate: option(string),\n  ~?additive: option(string),\n  ~?alignmentBaseline: option(string),\n  ~?allowReorder: option(string),\n  ~?alphabetic: option(string),\n  ~?amplitude: option(string),\n  ~?arabicForm: option(string),\n  ~?ascent: option(string),\n  ~?attributeName: option(string),\n  ~?attributeType: option(string),\n  ~?autoReverse: option(string),\n  ~?azimuth: option(string),\n  ~?baseFrequency: option(string),\n  ~?baseProfile: option(string),\n  ~?baselineShift: option(string),\n  ~?bbox: option(string),\n  ~?begin_: option(string),\n  ~?bias: option(string),\n  ~?by: option(string),\n  ~?calcMode: option(string),\n  ~?capHeight: option(string),\n  ~?clip: option(string),\n  ~?clipPath: option(string),\n  ~?clipPathUnits: option(string),\n  ~?clipRule: option(string),\n  ~?colorInterpolation: option(string),\n  ~?colorInterpolationFilters: option(\n    string\n  ),\n  ~?colorProfile: option(string),\n  ~?colorRendering: option(string),\n  ~?contentScriptType: option(string),\n  ~?contentStyleType: option(string),\n  ~?cursor: option(string),\n  ~?cx: option(string),\n  ~?cy: option(string),\n  ~?d: option(string),\n  ~?decelerate: option(string),\n  ~?descent: option(string),\n  ~?diffuseConstant: option(string),\n  ~?direction: option(string),\n  ~?display: option(string),\n  ~?divisor: option(string),\n  ~?dominantBaseline: option(string),\n  ~?dur: option(string),\n  ~?dx: option(string),\n  ~?dy: option(string),\n  ~?edgeMode: option(string),\n  ~?elevation: option(string),\n  ~?enableBackground: option(string),\n  ~?end_: option(string),\n  ~?exponent: option(string),\n  ~?externalResourcesRequired: option(\n    string\n  ),\n  ~?fill: option(string),\n  ~?fillOpacity: option(string),\n  ~?fillRule: option(string),\n  ~?filter: option(string),\n  ~?filterRes: option(string),\n  ~?filterUnits: option(string),\n  ~?floodColor: option(string),\n  ~?floodOpacity: option(string),\n  ~?focusable: option(string),\n  ~?fontFamily: option(string),\n  ~?fontSize: option(string),\n  ~?fontSizeAdjust: option(string),\n  ~?fontStretch: option(string),\n  ~?fontStyle: option(string),\n  ~?fontVariant: option(string),\n  ~?fontWeight: option(string),\n  ~?fomat: option(string),\n  ~?from: option(string),\n  ~?fx: option(string),\n  ~?fy: option(string),\n  ~?g1: option(string),\n  ~?g2: option(string),\n  ~?glyphName: option(string),\n  ~?glyphOrientationHorizontal: option(\n    string\n  ),\n  ~?glyphOrientationVertical: option(\n    string\n  ),\n  ~?glyphRef: option(string),\n  ~?gradientTransform: option(string),\n  ~?gradientUnits: option(string),\n  ~?hanging: option(string),\n  ~?horizAdvX: option(string),\n  ~?horizOriginX: option(string),\n  ~?ideographic: option(string),\n  ~?imageRendering: option(string),\n  ~?in_: option(string),\n  ~?in2: option(string),\n  ~?intercept: option(string),\n  ~?k: option(string),\n  ~?k1: option(string),\n  ~?k2: option(string),\n  ~?k3: option(string),\n  ~?k4: option(string),\n  ~?kernelMatrix: option(string),\n  ~?kernelUnitLength: option(string),\n  ~?kerning: option(string),\n  ~?keyPoints: option(string),\n  ~?keySplines: option(string),\n  ~?keyTimes: option(string),\n  ~?lengthAdjust: option(string),\n  ~?letterSpacing: option(string),\n  ~?lightingColor: option(string),\n  ~?limitingConeAngle: option(string),\n  ~?local: option(string),\n  ~?markerEnd: option(string),\n  ~?markerHeight: option(string),\n  ~?markerMid: option(string),\n  ~?markerStart: option(string),\n  ~?markerUnits: option(string),\n  ~?markerWidth: option(string),\n  ~?mask: option(string),\n  ~?maskContentUnits: option(string),\n  ~?maskUnits: option(string),\n  ~?mathematical: option(string),\n  ~?mode: option(string),\n  ~?numOctaves: option(string),\n  ~?offset: option(string),\n  ~?opacity: option(string),\n  ~?operator: option(string),\n  ~?order: option(string),\n  ~?orient: option(string),\n  ~?orientation: option(string),\n  ~?origin: option(string),\n  ~?overflow: option(string),\n  ~?overflowX: option(string),\n  ~?overflowY: option(string),\n  ~?overlinePosition: option(string),\n  ~?overlineThickness: option(string),\n  ~?paintOrder: option(string),\n  ~?panose1: option(string),\n  ~?pathLength: option(string),\n  ~?patternContentUnits: option(string),\n  ~?patternTransform: option(string),\n  ~?patternUnits: option(string),\n  ~?pointerEvents: option(string),\n  ~?points: option(string),\n  ~?pointsAtX: option(string),\n  ~?pointsAtY: option(string),\n  ~?pointsAtZ: option(string),\n  ~?preserveAlpha: option(string),\n  ~?preserveAspectRatio: option(string),\n  ~?primitiveUnits: option(string),\n  ~?r: option(string),\n  ~?radius: option(string),\n  ~?refX: option(string),\n  ~?refY: option(string),\n  ~?renderingIntent: option(string),\n  ~?repeatCount: option(string),\n  ~?repeatDur: option(string),\n  ~?requiredExtensions: option(string),\n  ~?requiredFeatures: option(string),\n  ~?restart: option(string),\n  ~?result: option(string),\n  ~?rotate: option(string),\n  ~?rx: option(string),\n  ~?ry: option(string),\n  ~?scale: option(string),\n  ~?seed: option(string),\n  ~?shapeRendering: option(string),\n  ~?slope: option(string),\n  ~?spacing: option(string),\n  ~?specularConstant: option(string),\n  ~?specularExponent: option(string),\n  ~?speed: option(string),\n  ~?spreadMethod: option(string),\n  ~?startOffset: option(string),\n  ~?stdDeviation: option(string),\n  ~?stemh: option(string),\n  ~?stemv: option(string),\n  ~?stitchTiles: option(string),\n  ~?stopColor: option(string),\n  ~?stopOpacity: option(string),\n  ~?strikethroughPosition: option(\n    string\n  ),\n  ~?strikethroughThickness: option(\n    string\n  ),\n  ~?string: option(string),\n  ~?stroke: option(string),\n  ~?strokeDasharray: option(string),\n  ~?strokeDashoffset: option(string),\n  ~?strokeLinecap: option(string),\n  ~?strokeLinejoin: option(string),\n  ~?strokeMiterlimit: option(string),\n  ~?strokeOpacity: option(string),\n  ~?strokeWidth: option(string),\n  ~?surfaceScale: option(string),\n  ~?systemLanguage: option(string),\n  ~?tableValues: option(string),\n  ~?targetX: option(string),\n  ~?targetY: option(string),\n  ~?textAnchor: option(string),\n  ~?textDecoration: option(string),\n  ~?textLength: option(string),\n  ~?textRendering: option(string),\n  ~?to_: option(string),\n  ~?transform: option(string),\n  ~?u1: option(string),\n  ~?u2: option(string),\n  ~?underlinePosition: option(string),\n  ~?underlineThickness: option(string),\n  ~?unicode: option(string),\n  ~?unicodeBidi: option(string),\n  ~?unicodeRange: option(string),\n  ~?unitsPerEm: option(string),\n  ~?vAlphabetic: option(string),\n  ~?vHanging: option(string),\n  ~?vIdeographic: option(string),\n  ~?vMathematical: option(string),\n  ~?values: option(string),\n  ~?vectorEffect: option(string),\n  ~?version: option(string),\n  ~?vertAdvX: option(string),\n  ~?vertAdvY: option(string),\n  ~?vertOriginX: option(string),\n  ~?vertOriginY: option(string),\n  ~?viewBox: option(string),\n  ~?viewTarget: option(string),\n  ~?visibility: option(string),\n  ~?widths: option(string),\n  ~?wordSpacing: option(string),\n  ~?writingMode: option(string),\n  ~?x: option(string),\n  ~?x1: option(string),\n  ~?x2: option(string),\n  ~?xChannelSelector: option(string),\n  ~?xHeight: option(string),\n  ~?xlinkActuate: option(string),\n  ~?xlinkArcrole: option(string),\n  ~?xlinkHref: option(string),\n  ~?xlinkRole: option(string),\n  ~?xlinkShow: option(string),\n  ~?xlinkTitle: option(string),\n  ~?xlinkType: option(string),\n  ~?xmlns: option(string),\n  ~?xmlnsXlink: option(string),\n  ~?xmlBase: option(string),\n  ~?xmlLang: option(string),\n  ~?xmlSpace: option(string),\n  ~?y: option(string),\n  ~?y1: option(string),\n  ~?y2: option(string),\n  ~?yChannelSelector: option(string),\n  ~?z: option(string),\n  ~?zoomAndPan: option(string),\n  ~?about: option(string),\n  ~?datatype: option(string),\n  ~?inlist: option(string),\n  ~?prefix: option(string),\n  ~?property: option(string),\n  ~?resource: option(string),\n  ~?typeof: option(string),\n  ~?vocab: option(string),\n  ~?dangerouslySetInnerHTML: option(\n    Js.t(< __html : string >)\n  ),\n  ~?suppressContentEditableWarning: option(\n    bool\n  ),\n  unit\n) => props;\n  type props\n  let objToDOMProps: Js.t(< .. >) => props;\n  type reactDOMProps = props\n  let createElement: (\n  string,\n  ~?props: option(props),\n  array(\n    ReasonReact.reactElement\n  )\n) => ReasonReact.reactElement;\n  let createElementVariadic: (\n  string,\n  ~?props: option(props),\n  array(\n    ReasonReact.reactElement\n  )\n) => ReasonReact.reactElement;\n  module Style;\n}\n```"}}}
Read message 
{"jsonrpc":"2.0","id":100,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re"},"position":{"line":6,"character":11}}}
[server] Got a method textDocument/hover
[server] processing took 0.0190734863281ms
Sending response {"id": 100, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":101,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re"},"position":{"line":6,"character":12}}}
[server] Got a method textDocument/hover
[server] processing took 0.014066696167ms
Sending response {"id": 101, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":102,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re"},"position":{"line":6,"character":13}}}
[server] Got a method textDocument/hover
[server] processing took 0.0240802764893ms
Sending response {"id": 102, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":103,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re"},"position":{"line":6,"character":20}}}
[server] Got a method textDocument/hover
[server] processing took 0.0181198120117ms
FINDING /home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/reason-react/lib/bs/src/ReasonReact.cmti src /home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/reason-react/src/ReasonReact.rei
Trying for declared Value 1015 in file file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re
Sending response {"id": 103, "jsonrpc": "2.0", "result": {"range": {"start": {"line": 6, "character": 18}, "end": {"line": 6, "character": 22}}, "contents": {"kind": "markdown", "value": "```\nReasonReact.self(\n  ReasonReact.stateless,\n  ReasonReact.noRetainedProps,\n  ReasonReact.actionless\n)\n```\n\n```\ntype self('state, 'retainedProps, 'action) = {\n  handle: 'payload.\n  ('payload -> ('state, 'retainedProps, 'action) self -> unit) ->\n  'payload -> unit,\n  state: 'state,\n  retainedProps: 'retainedProps,\n  send: 'action => unit,\n  onUnmount: unit => unit => unit\n}\n```\n\n<root>/assets/js/Page.re"}}}
Read message 
{"jsonrpc":"2.0","id":104,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re"},"position":{"line":6,"character":38}}}
[server] Got a method textDocument/hover
[server] processing took 0.00596046447754ms
Trying for declared Value 1009 in file file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re
Sending response {"id": 104, "jsonrpc": "2.0", "result": {"range": {"start": {"line": 6, "character": 30}, "end": {"line": 6, "character": 41}}, "contents": {"kind": "markdown", "value": "```\n('a, 'b) => unit\n```\n\n<root>/assets/js/Page.re"}}}
Read message 
{"jsonrpc":"2.0","id":105,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re"},"position":{"line":6,"character":39}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00810623168945ms
Got a loc for pos
Sending response {"id": 105, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 6, "character": 30}, "end": {"line": 6, "character": 41}}, "kind": 2}, {"range": {"start": {"line": 1, "character": 4}, "end": {"line": 1, "character": 15}}, "kind": 2}]}
Read message 
{"jsonrpc":"2.0","id":106,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re"},"range":{"start":{"line":6,"character":30},"end":{"line":6,"character":41}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0181198120117ms
Sending response {"id": 106, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":107,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re"},"position":{"line":7,"character":10}}}
[server] Got a method textDocument/hover
[server] processing took 0.018835067749ms
FINDING /home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/reason-react/lib/bs/src/ReasonReact.cmti src /home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/reason-react/src/ReasonReact.rei
Sending response {"id": 107, "jsonrpc": "2.0", "result": {"range": {"start": {"line": 7, "character": 7}, "end": {"line": 7, "character": 18}}, "contents": {"kind": "markdown", "value": "```\nmodule ReasonReact = {\n  type reactClass\n  type reactElement\n  type reactRef\n  let null: reactElement;\n  let string: string => reactElement;\n  let array: array(reactElement) => reactElement;\n  let refToJsObj: reactRef => Js.t(< .. >);\n  let createElement: (\n  reactClass,\n  ~?props: option(Js.t(< .. >)),\n  array(reactElement)\n) => reactElement;\n  let cloneElement: (\n  reactElement,\n  ~?props: option(Js.t(< .. >)),\n  array(reactElement)\n) => reactElement;\n  type renderNotImplemented = | RenderNotImplemented\n\n  type stateless = unit\n  type noRetainedProps\n  type actionless = unit\n  type update('state, 'retainedProps, 'action) = \n  | NoUpdate\n  | Update('state)\n  | SideEffects(\n    self('state, 'retainedProps, 'action) => unit\n  )\n  | UpdateWithSideEffects(\n    'state,\n    self('state, 'retainedProps, 'action) => unit\n  )\n\n  type self('state, 'retainedProps, 'action) = {\n  handle: 'payload.\n  ('payload -> ('state, 'retainedProps, 'action) self -> unit) ->\n  'payload -> unit,\n  state: 'state,\n  retainedProps: 'retainedProps,\n  send: 'action => unit,\n  onUnmount: unit => unit => unit\n}\n  type reactClassInternal\n  type jsElementWrapped\n  type oldNewSelf('state, 'retainedProps, 'action) = {\n  oldSelf: self('state, 'retainedProps, 'action),\n  newSelf: self('state, 'retainedProps, 'action)\n}\n  type componentSpec(\n  'state,\n  'initialState,\n  'retainedProps,\n  'initialRetainedProps,\n  'action\n) = {\n  debugName: string,\n  reactClassInternal: reactClassInternal,\n  mut handedOffState: Pervasives.ref(option('state)),\n  willReceiveProps: self(\n    'state,\n    'retainedProps,\n    'action\n  ) => 'state,\n  didMount: self('state, 'retainedProps, 'action) => unit,\n  didUpdate: oldNewSelf(\n    'state,\n    'retainedProps,\n    'action\n  ) => unit,\n  willUnmount: self(\n    'state,\n    'retainedProps,\n    'action\n  ) => unit,\n  willUpdate: oldNewSelf(\n    'state,\n    'retainedProps,\n    'action\n  ) => unit,\n  shouldUpdate: oldNewSelf(\n    'state,\n    'retainedProps,\n    'action\n  ) => bool,\n  render: self(\n    'state,\n    'retainedProps,\n    'action\n  ) => reactElement,\n  initialState: unit => 'initialState,\n  retainedProps: 'initialRetainedProps,\n  reducer: ('action, 'state) => update(\n    'state,\n    'retainedProps,\n    'action\n  ),\n  jsElementWrapped: jsElementWrapped\n}\n  type component(\n  'state,\n  'retainedProps,\n  'action\n) = componentSpec(\n  'state,\n  'state,\n  'retainedProps,\n  'retainedProps,\n  'action\n)\n  let statelessComponent: string => componentSpec(\n  stateless,\n  stateless,\n  noRetainedProps,\n  noRetainedProps,\n  actionless\n);\n  let statelessComponentWithRetainedProps: string => componentSpec(\n  stateless,\n  stateless,\n  'retainedProps,\n  noRetainedProps,\n  actionless\n);\n  let reducerComponent: string => componentSpec(\n  'state,\n  stateless,\n  noRetainedProps,\n  noRetainedProps,\n  'action\n);\n  let reducerComponentWithRetainedProps: string => componentSpec(\n  'state,\n  stateless,\n  'retainedProps,\n  noRetainedProps,\n  'action\n);\n  let element: (\n  ~?key: option(string),\n  ~?ref: option(\n    Js.nullable(reactRef) => unit\n  ),\n  component(\n    'state,\n    'retainedProps,\n    'action\n  )\n) => reactElement;\n  type jsPropsToReason(\n  'jsProps,\n  'state,\n  'retainedProps,\n  'action\n) = 'jsProps => component('state, 'retainedProps, 'action)\n  let wrapReasonForJs: (\n  ~component: componentSpec(\n    'state,\n    'initialState,\n    'retainedProps,\n    'initialRetainedProps,\n    'action\n  ),\n  jsPropsToReason(\n    'a,\n    'b,\n    'c,\n    'd\n  )\n) => reactClass;\n  let createDomElement: (\n  string,\n  ~props: Js.t(< .. >),\n  array(reactElement)\n) => reactElement;\n  let wrapJsForReason: (\n  ~reactClass: reactClass,\n  ~props: 'a,\n  'b\n) => component(\n  stateless,\n  noRetainedProps,\n  actionless\n);\n  module Router;\n  let fragment: 'a;\n}\n```"}}}
Read message 
{"jsonrpc":"2.0","id":108,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re"},"position":{"line":7,"character":10}}}
[server] Got a method textDocument/hover
[server] processing took 0.0190734863281ms
FINDING /home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/reason-react/lib/bs/src/ReasonReact.cmti src /home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/reason-react/src/ReasonReact.rei
Sending response {"id": 108, "jsonrpc": "2.0", "result": {"range": {"start": {"line": 7, "character": 7}, "end": {"line": 7, "character": 18}}, "contents": {"kind": "markdown", "value": "```\nmodule ReasonReact = {\n  type reactClass\n  type reactElement\n  type reactRef\n  let null: reactElement;\n  let string: string => reactElement;\n  let array: array(reactElement) => reactElement;\n  let refToJsObj: reactRef => Js.t(< .. >);\n  let createElement: (\n  reactClass,\n  ~?props: option(Js.t(< .. >)),\n  array(reactElement)\n) => reactElement;\n  let cloneElement: (\n  reactElement,\n  ~?props: option(Js.t(< .. >)),\n  array(reactElement)\n) => reactElement;\n  type renderNotImplemented = | RenderNotImplemented\n\n  type stateless = unit\n  type noRetainedProps\n  type actionless = unit\n  type update('state, 'retainedProps, 'action) = \n  | NoUpdate\n  | Update('state)\n  | SideEffects(\n    self('state, 'retainedProps, 'action) => unit\n  )\n  | UpdateWithSideEffects(\n    'state,\n    self('state, 'retainedProps, 'action) => unit\n  )\n\n  type self('state, 'retainedProps, 'action) = {\n  handle: 'payload.\n  ('payload -> ('state, 'retainedProps, 'action) self -> unit) ->\n  'payload -> unit,\n  state: 'state,\n  retainedProps: 'retainedProps,\n  send: 'action => unit,\n  onUnmount: unit => unit => unit\n}\n  type reactClassInternal\n  type jsElementWrapped\n  type oldNewSelf('state, 'retainedProps, 'action) = {\n  oldSelf: self('state, 'retainedProps, 'action),\n  newSelf: self('state, 'retainedProps, 'action)\n}\n  type componentSpec(\n  'state,\n  'initialState,\n  'retainedProps,\n  'initialRetainedProps,\n  'action\n) = {\n  debugName: string,\n  reactClassInternal: reactClassInternal,\n  mut handedOffState: Pervasives.ref(option('state)),\n  willReceiveProps: self(\n    'state,\n    'retainedProps,\n    'action\n  ) => 'state,\n  didMount: self('state, 'retainedProps, 'action) => unit,\n  didUpdate: oldNewSelf(\n    'state,\n    'retainedProps,\n    'action\n  ) => unit,\n  willUnmount: self(\n    'state,\n    'retainedProps,\n    'action\n  ) => unit,\n  willUpdate: oldNewSelf(\n    'state,\n    'retainedProps,\n    'action\n  ) => unit,\n  shouldUpdate: oldNewSelf(\n    'state,\n    'retainedProps,\n    'action\n  ) => bool,\n  render: self(\n    'state,\n    'retainedProps,\n    'action\n  ) => reactElement,\n  initialState: unit => 'initialState,\n  retainedProps: 'initialRetainedProps,\n  reducer: ('action, 'state) => update(\n    'state,\n    'retainedProps,\n    'action\n  ),\n  jsElementWrapped: jsElementWrapped\n}\n  type component(\n  'state,\n  'retainedProps,\n  'action\n) = componentSpec(\n  'state,\n  'state,\n  'retainedProps,\n  'retainedProps,\n  'action\n)\n  let statelessComponent: string => componentSpec(\n  stateless,\n  stateless,\n  noRetainedProps,\n  noRetainedProps,\n  actionless\n);\n  let statelessComponentWithRetainedProps: string => componentSpec(\n  stateless,\n  stateless,\n  'retainedProps,\n  noRetainedProps,\n  actionless\n);\n  let reducerComponent: string => componentSpec(\n  'state,\n  stateless,\n  noRetainedProps,\n  noRetainedProps,\n  'action\n);\n  let reducerComponentWithRetainedProps: string => componentSpec(\n  'state,\n  stateless,\n  'retainedProps,\n  noRetainedProps,\n  'action\n);\n  let element: (\n  ~?key: option(string),\n  ~?ref: option(\n    Js.nullable(reactRef) => unit\n  ),\n  component(\n    'state,\n    'retainedProps,\n    'action\n  )\n) => reactElement;\n  type jsPropsToReason(\n  'jsProps,\n  'state,\n  'retainedProps,\n  'action\n) = 'jsProps => component('state, 'retainedProps, 'action)\n  let wrapReasonForJs: (\n  ~component: componentSpec(\n    'state,\n    'initialState,\n    'retainedProps,\n    'initialRetainedProps,\n    'action\n  ),\n  jsPropsToReason(\n    'a,\n    'b,\n    'c,\n    'd\n  )\n) => reactClass;\n  let createDomElement: (\n  string,\n  ~props: Js.t(< .. >),\n  array(reactElement)\n) => reactElement;\n  let wrapJsForReason: (\n  ~reactClass: reactClass,\n  ~props: 'a,\n  'b\n) => component(\n  stateless,\n  noRetainedProps,\n  actionless\n);\n  module Router;\n  let fragment: 'a;\n}\n```"}}}
Read message 
{"jsonrpc":"2.0","id":109,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re"},"position":{"line":7,"character":11}}}
[server] Got a method textDocument/hover
[server] processing took 0.0181198120117ms
FINDING /home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/reason-react/lib/bs/src/ReasonReact.cmti src /home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/reason-react/src/ReasonReact.rei
Sending response {"id": 109, "jsonrpc": "2.0", "result": {"range": {"start": {"line": 7, "character": 7}, "end": {"line": 7, "character": 18}}, "contents": {"kind": "markdown", "value": "```\nmodule ReasonReact = {\n  type reactClass\n  type reactElement\n  type reactRef\n  let null: reactElement;\n  let string: string => reactElement;\n  let array: array(reactElement) => reactElement;\n  let refToJsObj: reactRef => Js.t(< .. >);\n  let createElement: (\n  reactClass,\n  ~?props: option(Js.t(< .. >)),\n  array(reactElement)\n) => reactElement;\n  let cloneElement: (\n  reactElement,\n  ~?props: option(Js.t(< .. >)),\n  array(reactElement)\n) => reactElement;\n  type renderNotImplemented = | RenderNotImplemented\n\n  type stateless = unit\n  type noRetainedProps\n  type actionless = unit\n  type update('state, 'retainedProps, 'action) = \n  | NoUpdate\n  | Update('state)\n  | SideEffects(\n    self('state, 'retainedProps, 'action) => unit\n  )\n  | UpdateWithSideEffects(\n    'state,\n    self('state, 'retainedProps, 'action) => unit\n  )\n\n  type self('state, 'retainedProps, 'action) = {\n  handle: 'payload.\n  ('payload -> ('state, 'retainedProps, 'action) self -> unit) ->\n  'payload -> unit,\n  state: 'state,\n  retainedProps: 'retainedProps,\n  send: 'action => unit,\n  onUnmount: unit => unit => unit\n}\n  type reactClassInternal\n  type jsElementWrapped\n  type oldNewSelf('state, 'retainedProps, 'action) = {\n  oldSelf: self('state, 'retainedProps, 'action),\n  newSelf: self('state, 'retainedProps, 'action)\n}\n  type componentSpec(\n  'state,\n  'initialState,\n  'retainedProps,\n  'initialRetainedProps,\n  'action\n) = {\n  debugName: string,\n  reactClassInternal: reactClassInternal,\n  mut handedOffState: Pervasives.ref(option('state)),\n  willReceiveProps: self(\n    'state,\n    'retainedProps,\n    'action\n  ) => 'state,\n  didMount: self('state, 'retainedProps, 'action) => unit,\n  didUpdate: oldNewSelf(\n    'state,\n    'retainedProps,\n    'action\n  ) => unit,\n  willUnmount: self(\n    'state,\n    'retainedProps,\n    'action\n  ) => unit,\n  willUpdate: oldNewSelf(\n    'state,\n    'retainedProps,\n    'action\n  ) => unit,\n  shouldUpdate: oldNewSelf(\n    'state,\n    'retainedProps,\n    'action\n  ) => bool,\n  render: self(\n    'state,\n    'retainedProps,\n    'action\n  ) => reactElement,\n  initialState: unit => 'initialState,\n  retainedProps: 'initialRetainedProps,\n  reducer: ('action, 'state) => update(\n    'state,\n    'retainedProps,\n    'action\n  ),\n  jsElementWrapped: jsElementWrapped\n}\n  type component(\n  'state,\n  'retainedProps,\n  'action\n) = componentSpec(\n  'state,\n  'state,\n  'retainedProps,\n  'retainedProps,\n  'action\n)\n  let statelessComponent: string => componentSpec(\n  stateless,\n  stateless,\n  noRetainedProps,\n  noRetainedProps,\n  actionless\n);\n  let statelessComponentWithRetainedProps: string => componentSpec(\n  stateless,\n  stateless,\n  'retainedProps,\n  noRetainedProps,\n  actionless\n);\n  let reducerComponent: string => componentSpec(\n  'state,\n  stateless,\n  noRetainedProps,\n  noRetainedProps,\n  'action\n);\n  let reducerComponentWithRetainedProps: string => componentSpec(\n  'state,\n  stateless,\n  'retainedProps,\n  noRetainedProps,\n  'action\n);\n  let element: (\n  ~?key: option(string),\n  ~?ref: option(\n    Js.nullable(reactRef) => unit\n  ),\n  component(\n    'state,\n    'retainedProps,\n    'action\n  )\n) => reactElement;\n  type jsPropsToReason(\n  'jsProps,\n  'state,\n  'retainedProps,\n  'action\n) = 'jsProps => component('state, 'retainedProps, 'action)\n  let wrapReasonForJs: (\n  ~component: componentSpec(\n    'state,\n    'initialState,\n    'retainedProps,\n    'initialRetainedProps,\n    'action\n  ),\n  jsPropsToReason(\n    'a,\n    'b,\n    'c,\n    'd\n  )\n) => reactClass;\n  let createDomElement: (\n  string,\n  ~props: Js.t(< .. >),\n  array(reactElement)\n) => reactElement;\n  let wrapJsForReason: (\n  ~reactClass: reactClass,\n  ~props: 'a,\n  'b\n) => component(\n  stateless,\n  noRetainedProps,\n  actionless\n);\n  module Router;\n  let fragment: 'a;\n}\n```"}}}
Read message 
{"jsonrpc":"2.0","id":110,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re"},"position":{"line":7,"character":13}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00596046447754ms
Got a loc for pos
Sending response {"id": 110, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":111,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re"},"range":{"start":{"line":7,"character":7},"end":{"line":7,"character":18}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0231266021729ms
Sending response {"id": 111, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":112,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re"},"position":{"line":7,"character":24}}}
[server] Got a method textDocument/hover
[server] processing took 0.0159740447998ms
Getting global ReasonReact
FINDING /home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/reason-react/lib/bs/src/ReasonReact.cmti src /home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/reason-react/src/ReasonReact.rei
Getting for 1012 in string
Trying for declared Value 1012 in file file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/reason-react/src/ReasonReact.rei
Yes!! got it
Sending response {"id": 112, "jsonrpc": "2.0", "result": {"range": {"start": {"line": 7, "character": 19}, "end": {"line": 7, "character": 25}}, "contents": {"kind": "markdown", "value": "```\nstring => ReasonReact.reactElement\n```\n\n<root>/assets/node_modules/reason-react/src/ReasonReact.rei"}}}
Read message 
{"jsonrpc":"2.0","id":113,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re"},"position":{"line":7,"character":28}}}
[server] Got a method textDocument/hover
[server] processing took 0.0219345092773ms
Trying for declared Value 1013 in file file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re
Sending response {"id": 113, "jsonrpc": "2.0", "result": {"range": {"start": {"line": 7, "character": 26}, "end": {"line": 7, "character": 33}}, "contents": {"kind": "markdown", "value": "```\nstring\n```\n\n<root>/assets/js/Page.re"}}}
Read message 
{"jsonrpc":"2.0","id":114,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re"},"position":{"line":7,"character":29}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00596046447754ms
Got a loc for pos
Sending response {"id": 114, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 7, "character": 26}, "end": {"line": 7, "character": 33}}, "kind": 2}, {"range": {"start": {"line": 3, "character": 13}, "end": {"line": 3, "character": 20}}, "kind": 2}]}
Read message 
{"jsonrpc":"2.0","id":115,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re"},"range":{"start":{"line":7,"character":26},"end":{"line":7,"character":33}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0190734863281ms
Sending response {"id": 115, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":116,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re"},"position":{"line":7,"character":34}}}
[server] Got a method textDocument/hover
[server] processing took 0.014066696167ms
Sending response {"id": 116, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":117,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0119209289551ms
Sending response {"id": 117, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":118,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0100135803223ms
Sending response {"id": 118, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReactDOMRe, Js", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":119,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0231266021729ms
Sending response {"id": 119, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":120,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0119209289551ms
Sending response {"id": 120, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReactDOMRe, Js", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":121,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00715255737305ms
Sending response {"id": 121, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":122,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.014066696167ms
Sending response {"id": 122, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReactDOMRe, Js", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re"}}}
Read message 
{"jsonrpc":"2.0","id":123,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/SimpleRoot.re"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00691413879395ms
Sending response {"id": 123, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":124,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/SimpleRoot.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.00500679016113ms
Sending response {"id": 124, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReactDOMRe, ReasonReact, Page", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":125,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/SimpleRoot.re"},"range":{"start":{"line":0,"character":61},"end":{"line":0,"character":66}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0109672546387ms
Sending response {"id": 125, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/SimpleRoot.re"}}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re","languageId":"reason","version":1,"text":"let component = ReasonReact.statelessComponent(\"Page\");  \nlet handleClick = (_event, _self) => Js.log(\"clicked!\");\n\nlet make = (~message, _children) => {  \n  ...component,  \n  render: self =>  \n    <div onClick=(self.handle(handleClick))>  \n      (ReasonReact.string(message))  \n     </div>,  \n};\n"}}}
Read message 
{"jsonrpc":"2.0","id":126,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0109672546387ms
Sending response {"id": 126, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":127,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.00786781311035ms
Sending response {"id": 127, "jsonrpc": "2.0", "result": [{"name": "component", "kind": 13, "location": {"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 54}}, "uri": "file://"}}, {"name": "handleClick", "kind": 12, "location": {"range": {"start": {"line": 1, "character": 0}, "end": {"line": 1, "character": 55}}, "uri": "file://"}}, {"name": "make", "kind": 12, "location": {"range": {"start": {"line": 3, "character": 0}, "end": {"line": 9, "character": 1}}, "uri": "file://"}}]}
Read message 
{"jsonrpc":"2.0","id":128,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.00596046447754ms
Sending response {"id": 128, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReactDOMRe, Js", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":126}}
Running diagnostics for file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re", "diagnostics": []}}
Read message 
{"jsonrpc":"2.0","id":129,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re"},"range":{"start":{"line":1,"character":56},"end":{"line":1,"character":56}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0219345092773ms
Sending response {"id": 129, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":130,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re"},"position":{"line":6,"character":30}}}
[server] Got a method textDocument/hover
[server] processing took 0.0150203704834ms
Trying for declared Value 1009 in file file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re
Sending response {"id": 130, "jsonrpc": "2.0", "result": {"range": {"start": {"line": 6, "character": 30}, "end": {"line": 6, "character": 41}}, "contents": {"kind": "markdown", "value": "```\n('a, 'b) => unit\n```\n\n<root>/assets/js/Page.re"}}}
Read message 
{"jsonrpc":"2.0","id":131,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re"},"position":{"line":6,"character":29}}}
[server] Got a method textDocument/hover
[server] processing took 0.0181198120117ms
FINDING /home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/reason-react/lib/bs/src/ReasonReact.cmti src /home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/reason-react/src/ReasonReact.rei
Getting global ReasonReact
FINDING /home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/reason-react/lib/bs/src/ReasonReact.cmti src /home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/reason-react/src/ReasonReact.rei
Getting for 1023 in self
Yes!! got it
Sending response {"id": 131, "jsonrpc": "2.0", "result": {"range": {"start": {"line": 6, "character": 23}, "end": {"line": 6, "character": 29}}, "contents": {"kind": "markdown", "value": "```\nReasonReact.self(\n  'state,\n  'retainedProps,\n  'action\n)\n```\n\n```\ntype self('state, 'retainedProps, 'action) = {\n  handle: 'payload.\n  ('payload -> ('state, 'retainedProps, 'action) self -> unit) ->\n  'payload -> unit,\n  state: 'state,\n  retainedProps: 'retainedProps,\n  send: 'action => unit,\n  onUnmount: unit => unit => unit\n}\n```\n\n<root>/assets/node_modules/reason-react/src/ReasonReact.rei"}}}
Read message 
{"jsonrpc":"2.0","id":132,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re"},"position":{"line":6,"character":30}}}
[server] Got a method textDocument/hover
[server] processing took 0.0171661376953ms
Trying for declared Value 1009 in file file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re
Sending response {"id": 132, "jsonrpc": "2.0", "result": {"range": {"start": {"line": 6, "character": 30}, "end": {"line": 6, "character": 41}}, "contents": {"kind": "markdown", "value": "```\n('a, 'b) => unit\n```\n\n<root>/assets/js/Page.re"}}}
Read message 
{"jsonrpc":"2.0","id":133,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re"},"position":{"line":6,"character":22}}}
[server] Got a method textDocument/hover
[server] processing took 0.0200271606445ms
FINDING /home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/reason-react/lib/bs/src/ReasonReact.cmti src /home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/reason-react/src/ReasonReact.rei
Trying for declared Value 1015 in file file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re
Sending response {"id": 133, "jsonrpc": "2.0", "result": {"range": {"start": {"line": 6, "character": 18}, "end": {"line": 6, "character": 22}}, "contents": {"kind": "markdown", "value": "```\nReasonReact.self(\n  ReasonReact.stateless,\n  ReasonReact.noRetainedProps,\n  ReasonReact.actionless\n)\n```\n\n```\ntype self('state, 'retainedProps, 'action) = {\n  handle: 'payload.\n  ('payload -> ('state, 'retainedProps, 'action) self -> unit) ->\n  'payload -> unit,\n  state: 'state,\n  retainedProps: 'retainedProps,\n  send: 'action => unit,\n  onUnmount: unit => unit => unit\n}\n```\n\n<root>/assets/js/Page.re"}}}
Read message 
{"jsonrpc":"2.0","id":134,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re"},"position":{"line":6,"character":21}}}
[server] Got a method textDocument/hover
[server] processing took 0.0171661376953ms
FINDING /home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/reason-react/lib/bs/src/ReasonReact.cmti src /home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/reason-react/src/ReasonReact.rei
Trying for declared Value 1015 in file file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re
Sending response {"id": 134, "jsonrpc": "2.0", "result": {"range": {"start": {"line": 6, "character": 18}, "end": {"line": 6, "character": 22}}, "contents": {"kind": "markdown", "value": "```\nReasonReact.self(\n  ReasonReact.stateless,\n  ReasonReact.noRetainedProps,\n  ReasonReact.actionless\n)\n```\n\n```\ntype self('state, 'retainedProps, 'action) = {\n  handle: 'payload.\n  ('payload -> ('state, 'retainedProps, 'action) self -> unit) ->\n  'payload -> unit,\n  state: 'state,\n  retainedProps: 'retainedProps,\n  send: 'action => unit,\n  onUnmount: unit => unit => unit\n}\n```\n\n<root>/assets/js/Page.re"}}}
Read message 
{"jsonrpc":"2.0","id":135,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re"},"position":{"line":0,"character":8}}}
[server] Got a method textDocument/hover
[server] processing took 0.0228881835938ms
FINDING /home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/reason-react/lib/bs/src/ReasonReact.cmti src /home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/reason-react/src/ReasonReact.rei
Trying for declared Value 1008 in file file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re
Sending response {"id": 135, "jsonrpc": "2.0", "result": {"range": {"start": {"line": 0, "character": 4}, "end": {"line": 0, "character": 13}}, "contents": {"kind": "markdown", "value": "```\nReasonReact.componentSpec(\n  ReasonReact.stateless,\n  ReasonReact.stateless,\n  ReasonReact.noRetainedProps,\n  ReasonReact.noRetainedProps,\n  ReasonReact.actionless\n)\n```\n\n```\ntype componentSpec(\n  'state,\n  'initialState,\n  'retainedProps,\n  'initialRetainedProps,\n  'action\n) = {\n  debugName: string,\n  reactClassInternal: reactClassInternal,\n  mut handedOffState: Pervasives.ref(option('state)),\n  willReceiveProps: self(\n    'state,\n    'retainedProps,\n    'action\n  ) => 'state,\n  didMount: self('state, 'retainedProps, 'action) => unit,\n  didUpdate: oldNewSelf(\n    'state,\n    'retainedProps,\n    'action\n  ) => unit,\n  willUnmount: self(\n    'state,\n    'retainedProps,\n    'action\n  ) => unit,\n  willUpdate: oldNewSelf(\n    'state,\n    'retainedProps,\n    'action\n  ) => unit,\n  shouldUpdate: oldNewSelf(\n    'state,\n    'retainedProps,\n    'action\n  ) => bool,\n  render: self(\n    'state,\n    'retainedProps,\n    'action\n  ) => reactElement,\n  initialState: unit => 'initialState,\n  retainedProps: 'initialRetainedProps,\n  reducer: ('action, 'state) => update(\n    'state,\n    'retainedProps,\n    'action\n  ),\n  jsElementWrapped: jsElementWrapped\n}\n```\n\n<root>/assets/js/Page.re"}}}
Read message 
{"jsonrpc":"2.0","id":136,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re"},"position":{"line":1,"character":9}}}
[server] Got a method textDocument/hover
[server] processing took 0.0181198120117ms
Trying for declared Value 1009 in file file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re
Sending response {"id": 136, "jsonrpc": "2.0", "result": {"range": {"start": {"line": 1, "character": 4}, "end": {"line": 1, "character": 15}}, "contents": {"kind": "markdown", "value": "```\n('a, 'b) => unit\n```\n\n<root>/assets/js/Page.re"}}}
Read message 
{"jsonrpc":"2.0","id":137,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re"},"position":{"line":5,"character":12}}}
[server] Got a method textDocument/hover
[server] processing took 0.0150203704834ms
FINDING /home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/reason-react/lib/bs/src/ReasonReact.cmti src /home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/reason-react/src/ReasonReact.rei
Trying for declared Value 1015 in file file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re
Sending response {"id": 137, "jsonrpc": "2.0", "result": {"range": {"start": {"line": 5, "character": 10}, "end": {"line": 5, "character": 14}}, "contents": {"kind": "markdown", "value": "```\nReasonReact.self(\n  ReasonReact.stateless,\n  ReasonReact.noRetainedProps,\n  ReasonReact.actionless\n)\n```\n\n```\ntype self('state, 'retainedProps, 'action) = {\n  handle: 'payload.\n  ('payload -> ('state, 'retainedProps, 'action) self -> unit) ->\n  'payload -> unit,\n  state: 'state,\n  retainedProps: 'retainedProps,\n  send: 'action => unit,\n  onUnmount: unit => unit => unit\n}\n```\n\n<root>/assets/js/Page.re"}}}
Read message 
{"jsonrpc":"2.0","id":138,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re"},"position":{"line":6,"character":12}}}
[server] Got a method textDocument/hover
[server] processing took 0.0178813934326ms
Sending response {"id": 138, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":139,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re"},"position":{"line":7,"character":12}}}
[server] Got a method textDocument/hover
[server] processing took 0.0150203704834ms
FINDING /home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/reason-react/lib/bs/src/ReasonReact.cmti src /home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/reason-react/src/ReasonReact.rei
Sending response {"id": 139, "jsonrpc": "2.0", "result": {"range": {"start": {"line": 7, "character": 7}, "end": {"line": 7, "character": 18}}, "contents": {"kind": "markdown", "value": "```\nmodule ReasonReact = {\n  type reactClass\n  type reactElement\n  type reactRef\n  let null: reactElement;\n  let string: string => reactElement;\n  let array: array(reactElement) => reactElement;\n  let refToJsObj: reactRef => Js.t(< .. >);\n  let createElement: (\n  reactClass,\n  ~?props: option(Js.t(< .. >)),\n  array(reactElement)\n) => reactElement;\n  let cloneElement: (\n  reactElement,\n  ~?props: option(Js.t(< .. >)),\n  array(reactElement)\n) => reactElement;\n  type renderNotImplemented = | RenderNotImplemented\n\n  type stateless = unit\n  type noRetainedProps\n  type actionless = unit\n  type update('state, 'retainedProps, 'action) = \n  | NoUpdate\n  | Update('state)\n  | SideEffects(\n    self('state, 'retainedProps, 'action) => unit\n  )\n  | UpdateWithSideEffects(\n    'state,\n    self('state, 'retainedProps, 'action) => unit\n  )\n\n  type self('state, 'retainedProps, 'action) = {\n  handle: 'payload.\n  ('payload -> ('state, 'retainedProps, 'action) self -> unit) ->\n  'payload -> unit,\n  state: 'state,\n  retainedProps: 'retainedProps,\n  send: 'action => unit,\n  onUnmount: unit => unit => unit\n}\n  type reactClassInternal\n  type jsElementWrapped\n  type oldNewSelf('state, 'retainedProps, 'action) = {\n  oldSelf: self('state, 'retainedProps, 'action),\n  newSelf: self('state, 'retainedProps, 'action)\n}\n  type componentSpec(\n  'state,\n  'initialState,\n  'retainedProps,\n  'initialRetainedProps,\n  'action\n) = {\n  debugName: string,\n  reactClassInternal: reactClassInternal,\n  mut handedOffState: Pervasives.ref(option('state)),\n  willReceiveProps: self(\n    'state,\n    'retainedProps,\n    'action\n  ) => 'state,\n  didMount: self('state, 'retainedProps, 'action) => unit,\n  didUpdate: oldNewSelf(\n    'state,\n    'retainedProps,\n    'action\n  ) => unit,\n  willUnmount: self(\n    'state,\n    'retainedProps,\n    'action\n  ) => unit,\n  willUpdate: oldNewSelf(\n    'state,\n    'retainedProps,\n    'action\n  ) => unit,\n  shouldUpdate: oldNewSelf(\n    'state,\n    'retainedProps,\n    'action\n  ) => bool,\n  render: self(\n    'state,\n    'retainedProps,\n    'action\n  ) => reactElement,\n  initialState: unit => 'initialState,\n  retainedProps: 'initialRetainedProps,\n  reducer: ('action, 'state) => update(\n    'state,\n    'retainedProps,\n    'action\n  ),\n  jsElementWrapped: jsElementWrapped\n}\n  type component(\n  'state,\n  'retainedProps,\n  'action\n) = componentSpec(\n  'state,\n  'state,\n  'retainedProps,\n  'retainedProps,\n  'action\n)\n  let statelessComponent: string => componentSpec(\n  stateless,\n  stateless,\n  noRetainedProps,\n  noRetainedProps,\n  actionless\n);\n  let statelessComponentWithRetainedProps: string => componentSpec(\n  stateless,\n  stateless,\n  'retainedProps,\n  noRetainedProps,\n  actionless\n);\n  let reducerComponent: string => componentSpec(\n  'state,\n  stateless,\n  noRetainedProps,\n  noRetainedProps,\n  'action\n);\n  let reducerComponentWithRetainedProps: string => componentSpec(\n  'state,\n  stateless,\n  'retainedProps,\n  noRetainedProps,\n  'action\n);\n  let element: (\n  ~?key: option(string),\n  ~?ref: option(\n    Js.nullable(reactRef) => unit\n  ),\n  component(\n    'state,\n    'retainedProps,\n    'action\n  )\n) => reactElement;\n  type jsPropsToReason(\n  'jsProps,\n  'state,\n  'retainedProps,\n  'action\n) = 'jsProps => component('state, 'retainedProps, 'action)\n  let wrapReasonForJs: (\n  ~component: componentSpec(\n    'state,\n    'initialState,\n    'retainedProps,\n    'initialRetainedProps,\n    'action\n  ),\n  jsPropsToReason(\n    'a,\n    'b,\n    'c,\n    'd\n  )\n) => reactClass;\n  let createDomElement: (\n  string,\n  ~props: Js.t(< .. >),\n  array(reactElement)\n) => reactElement;\n  let wrapJsForReason: (\n  ~reactClass: reactClass,\n  ~props: 'a,\n  'b\n) => component(\n  stateless,\n  noRetainedProps,\n  actionless\n);\n  module Router;\n  let fragment: 'a;\n}\n```"}}}
Read message 
{"jsonrpc":"2.0","id":140,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re"},"position":{"line":7,"character":24}}}
[server] Got a method textDocument/hover
[server] processing took 0.0181198120117ms
Getting global ReasonReact
FINDING /home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/reason-react/lib/bs/src/ReasonReact.cmti src /home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/reason-react/src/ReasonReact.rei
Getting for 1012 in string
Trying for declared Value 1012 in file file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/node_modules/reason-react/src/ReasonReact.rei
Yes!! got it
Sending response {"id": 140, "jsonrpc": "2.0", "result": {"range": {"start": {"line": 7, "character": 19}, "end": {"line": 7, "character": 25}}, "contents": {"kind": "markdown", "value": "```\nstring => ReasonReact.reactElement\n```\n\n<root>/assets/node_modules/reason-react/src/ReasonReact.rei"}}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///home/deyvison/Documentos/Projetos/private/phoenixReasonml/assets/js/Page.re"}}}
